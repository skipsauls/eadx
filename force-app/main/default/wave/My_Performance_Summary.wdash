{"dataSourceLinks":[],"filters":[],"gridLayouts":[{"maxWidth":1360,"name":"NoTrending","numColumns":48,"pages":[{"name":"NoTrending","navigationHidden":false,"widgets":[{"colspan":31,"column":1,"name":"text_My_Performance_Summary","row":0,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":0,"name":"container_1","row":0,"rowspan":8,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#634F95","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"listselector_static_case_open_closed","row":10,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":4,"column":6,"name":"listselector_filter_role","row":10,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":11,"name":"listselector_filter_origin","row":10,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":4,"column":16,"name":"listselector_filter_account","row":10,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":4,"column":21,"name":"listselector_filter_product","row":10,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":4,"column":26,"name":"listselector_filter_reason","row":10,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":4,"column":43,"name":"listselector_Time_Selection","row":10,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":48,"column":0,"name":"container_13","row":8,"rowspan":8,"widgetStyle":{"backgroundColor":"#F2F6FA","borderColor":"#F2F6FA","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":0,"name":"text_2","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(2, 10, 26, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":0,"name":"number_number_cases","row":20,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderEdges":[]}},{"colspan":8,"column":4,"name":"number_CaseCount_PrevPeriod","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"{{cell(CaseCount_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(CaseCount_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":[],"borderRadius":4,"borderWidth":8}},{"colspan":14,"column":1,"name":"chart_average_case_count_over_time","row":28,"rowspan":14,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"rgba(255, 255, 255, 0)","borderEdges":["left"],"borderWidth":8}},{"colspan":14,"column":1,"name":"number_kpi_unique_owner_count","row":43,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"#F2F6FA","borderEdges":[]}},{"colspan":14,"column":1,"name":"number_owner_rank","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"#F2F6FA","borderEdges":[]}},{"colspan":16,"column":0,"name":"container_3","row":16,"rowspan":36,"widgetStyle":{"backgroundColor":"rgb(2, 10, 26)","borderColor":"rgba(51, 87, 121, 0.7)","borderEdges":["right"],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":16,"name":"number_DurationCalculatedField_37","row":20,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderEdges":[]}},{"colspan":8,"column":20,"name":"number_kpi_duration_prev","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"{{cell(kpi_duration_prev.result, 0, \"color\").asString()}}","borderColor":"{{cell(kpi_duration_prev.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderRadius":4,"borderWidth":4}},{"colspan":14,"column":17,"name":"chart_average_case_duration_over_time","row":28,"rowspan":14,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderWidth":8}},{"colspan":14,"column":17,"name":"number_DurationCalculatedField_41","row":43,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"#F2F6FA","borderEdges":[]}},{"colspan":14,"column":17,"name":"number_Duration_Rank","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"#F2F6FA","borderEdges":[]}},{"colspan":16,"column":16,"name":"container_27","row":16,"rowspan":36,"widgetStyle":{"backgroundColor":"rgb(2, 10, 26)","borderColor":"rgba(51, 87, 121, 0.7)","borderEdges":["right"],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":32,"name":"number_count_activities","row":20,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderEdges":[]}},{"colspan":8,"column":36,"name":"number_Activities_PrevPeriod","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"{{cell(Activities_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(Activities_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":[],"borderRadius":4,"borderWidth":4}},{"colspan":14,"column":33,"name":"chart_average_activities_over_time","row":28,"rowspan":14,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"rgba(255, 255, 255, 0)","borderEdges":["left"],"borderWidth":8}},{"colspan":14,"column":33,"name":"number_Activities_teamavg","row":42,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"#F2F6FA","borderEdges":[]}},{"colspan":14,"column":33,"name":"number_rank_activities","row":45,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(0, 0, 0, 0)","borderColor":"#F2F6FA","borderEdges":[]}},{"colspan":8,"column":36,"name":"pillbox_IsClosed_42","row":48,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(0, 0, 0)","borderColor":"#335779","borderEdges":["all"],"borderRadius":4}},{"colspan":16,"column":32,"name":"container_22","row":16,"rowspan":36,"widgetStyle":{"backgroundColor":"rgb(2, 10, 26)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":46,"column":1,"name":"ScoreCard_text_title","row":55,"rowspan":3,"widgetStyle":{"backgroundColor":"#F2F6FA","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":2,"name":"text__Escalated","row":61,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":[]}},{"colspan":8,"column":11,"name":"text_Activities_per_case","row":61,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":[]}},{"colspan":8,"column":2,"name":"number_kpi_escalation_percent","row":64,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":11,"name":"number_kpi_avg_activities","row":64,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":2,"name":"chart_kpi_escalation_percent","row":68,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":11,"name":"chart_kpi_avg_activities","row":68,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":2,"name":"number_kpi_escalation_prev_percent","row":74,"rowspan":3,"widgetStyle":{"borderColor":"#F2F6FA","borderEdges":["bottom"]}},{"colspan":8,"column":11,"name":"number_kpi_avg_prev_activities","row":74,"rowspan":3,"widgetStyle":{"borderColor":"#F2F6FA","borderEdges":["bottom"]}},{"colspan":8,"column":2,"name":"number_kpi_escalation_team_percent","row":77,"rowspan":3,"widgetStyle":{"borderColor":"#F2F6FA","borderEdges":["bottom"]}},{"colspan":8,"column":11,"name":"number_kpi_avg_activities_team","row":77,"rowspan":3,"widgetStyle":{"borderColor":"#F2F6FA","borderEdges":["bottom"]}},{"colspan":8,"column":2,"name":"number_kpi_escalation_percent_rank","row":80,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":11,"name":"number_kpi_avg_activities_rank","row":80,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":16,"column":16,"name":"text_3","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":32,"name":"text_4","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":11,"name":"container_9","row":60,"rowspan":23,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":8,"column":2,"name":"container_11","row":60,"rowspan":23,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#F2F6FA","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1.0},{"name":"iphone","numColumns":1,"pages":[{"name":"iphone","navigationHidden":false,"widgets":[{"colspan":1,"column":0,"name":"text_desktop_only","row":24,"rowspan":6,"widgetStyle":{"borderEdges":[]}}]}],"rowHeight":"fine","selectors":["maxWidth(599)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#F2F6FA","cellSpacingX":8,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"kpi_unique_owner_count":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = group q by all; q = foreach q generate unique('Id')/unique('OwnerId') as 'team_avg';\",\"measures\":[[\"team\",\"avg\"]],\"autoFilter\":true,\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Duration_Rank":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = group q by ('Owner.Name', 'OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('{{column(Static_Duration.selection,[\\\"pigql_value\\\"]).asObject()}}')) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_escalation_percent_rank":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = group q by ('Owner.Name', 'OwnerId', 'IsEscalated'); q = foreach q generate 'IsEscalated' as 'IsEscalated', 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', count() as 'count'; r = filter q by 'IsEscalated' == \\\"true\\\"; s = group q by ('Owner.Name','OwnerId') left, r by ('Owner.Name','OwnerId'); s = foreach s generate q.'Owner.Name' as 'Owner.Name', q.'OwnerId' as 'OwnerId', coalesce(count(r)/count(q),0) as 'escalated'; s = group s by ('Owner.Name', 'OwnerId'); s = foreach s generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('escalated')) as 'rank_position'; s = filter s by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; s = filter s by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"owner_rank":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = group q by ('Owner.Name', 'OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"measures\":[[\"rank\",\"position\"]],\"autoFilter\":true,\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"OwnerId_hidden":{"broadcastFacet":false,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"OwnerId\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"singlerequired","start":"[\"!{user.id}\"]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_escalation_vs_team_color":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\";  q = group q by all; q = foreach q generate count() as 'count', (case when {{coalesce(cell(kpi_escalation_percent.result, 0, \\\"perc_Percent\\\"),0).asObject()}} < {{coalesce(cell(kpi_escalation_team_percent.result, 0, \\\"perc_Percent\\\"),0).asObject()}} then \\\"#f2536d\\\" when {{coalesce(cell(kpi_escalation_percent.result, 0, \\\"perc_Percent\\\"),0).asObject()}} > {{coalesce(cell(kpi_escalation_team_percent.result, 0, \\\"perc_Percent\\\"),0).asObject()}} then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"pie"}},"DurationCalculatedField_37":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = group q by all; q = foreach q generate avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration';\",\"measures\":[[\"avg\",\"Duration\"]],\"autoFilter\":true,\"order\":[[-1,{\"ascending\":false}]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"filter_product":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"eadx__Product__c\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Time_Selection":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Last 180 Days\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"YTD\",\"text_display\":\"vs Prior YTD\",\"Backlog30DayClose\":\"[\\\"current day - 395 days\\\"..\\\"current day - 1 year\\\"]\",\"BacklogCompare\":[\"current day - 1 year\",\"current day\"],\"BacklogLabel\":\"Backlog Last Year\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate_Month')\",\"Compact\":[[\"year\",0],[\"year\",0]],\"CreatedField\":\"'CreatedDate_Month'\",\"CreatedProjection\":\"created['CreatedDate_Month']\",\"Current\":[\"current year\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"'CreatedDate_Year','CreatedDate_Month'\",\"Grouping\":\"'CreatedDate_Year~~~CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"LastPeriodCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"LastYearCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Month\"}],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\"],\"filter\":\"year\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"QTD\",\"text_display\":\"vs Prior QTD\",\"Backlog30DayClose\":\"[\\\"current day - 120 days\\\"..\\\"current day - 1 quarter\\\"]\",\"BacklogCompare\":[\"current day - 1 quarter\",\"current day\"],\"BacklogLabel\":\"Backlog Last Quarter\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate_Week')\",\"Compact\":[[\"quarter\",0],[\"quarter\",0]],\"CreatedField\":\"'CreatedDate_Week'\",\"CreatedProjection\":\"created['CreatedDate_Week']\",\"Current\":[\"current quarter\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"'CreatedDate_Year','CreatedDate_Week'\",\"Grouping\":\"'CreatedDate_Year~~~CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"LastPeriodCompare\":[\"current quarter - 1 quarter\",\"current day - 1 quarter\"],\"LastYearCompare\":[\"current quarter - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Week\"}],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Week\"],\"filter\":\"quarter\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"MTD\",\"text_display\":\"vs Prior MTD\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 1 month\\\"]\",\"BacklogCompare\":[\"current day - 1 month\",\"current day\"],\"BacklogLabel\":\"Backlog Last Month\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate_Month','CreatedDate_Day')\",\"Compact\":[[\"month\",0],[\"month\",0]],\"CreatedField\":\"'CreatedDate_Month','CreatedDate_Day'\",\"CreatedProjection\":\"created['CreatedDate_Month'] +\\\"~~~\\\" + created['CreatedDate_Day']\",\"Current\":[\"current month\",\"current month\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month'+\\\"~~~\\\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"'CreatedDate_Year','CreatedDate_Month','CreatedDate_Day'\",\"Grouping\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"LastPeriodCompare\":[\"current month - 1 month\",\"current day - 1 month\"],\"LastYearCompare\":[\"current month - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Day\"}],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\",\"CreatedDate_Day\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month']+\\\"~~~\\\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 7 Days\",\"text_display\":\"vs Prior 7 Days\",\"Backlog30DayClose\":\"[\\\"current day - 37 days\\\"..\\\"current day - 7 days\\\"]\",\"BacklogCompare\":[\"current day - 1 week\",\"current day\"],\"BacklogLabel\":\"Backlog Last 7 Days\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate_Month','CreatedDate_Day')\",\"Compact\":[[\"day\",-7],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Month','CreatedDate_Day'\",\"CreatedProjection\":\"created['CreatedDate_Month'] +\\\"~~~\\\" + created['CreatedDate_Day']\",\"Current\":[\"7 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month'+\\\"~~~\\\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"'CreatedDate_Year','CreatedDate_Month','CreatedDate_Day'\",\"Grouping\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"LastPeriodCompare\":[\"7 days ago - 1 week\",\"current day - 1 week\"],\"LastYearCompare\":[\"7 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Day\"}],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\",\"CreatedDate_Day\"],\"filter\":\"week\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month']+\\\"~~~\\\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 30 Days\",\"text_display\":\"vs Prior 30 Days\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 30 days\\\"]\",\"BacklogCompare\":[\"current day - 30 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 30 Days\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate_Week')\",\"Compact\":[[\"day\",-30],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Week'\",\"CreatedProjection\":\"created['CreatedDate_Week']\",\"Current\":[\"30 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"'CreatedDate_Year','CreatedDate_Week'\",\"Grouping\":\"'CreatedDate_Year~~~CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"LastPeriodCompare\":[\"30 days ago - 30 days\",\"current day - 30 days\"],\"LastYearCompare\":[\"30 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Week\"}],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Week\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 180 Days\",\"text_display\":\"vs Prior 180 Days\",\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":[\"current day - 180 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 180 Days\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Month'\",\"CreatedProjection\":\"created['CreatedDate_Month']\",\"Current\":[\"180 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"'CreatedDate_Year','CreatedDate_Month'\",\"Grouping\":\"'CreatedDate_Year~~~CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"LastPeriodCompare\":[\"180 days ago - 180 days\",\"current day - 180 days\"],\"LastYearCompare\":[\"180 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Month\"}],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}"]},"activity_type":{"broadcastFacet":false,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by 'ActivityType';q = foreach q generate 'ActivityType' as 'ActivityType' , count() as 'count';q = order q by 'count' desc;\",\"autoFilter\":false,\"groups\":[\"ActivityType\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"pie"}},"average_activities_over_time":{"broadcastFacet":false,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\",null]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}}; r = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count() as 'count', (case when (\\\"{{cell(filter_agent.selection,0, \\\"Owner.Name\\\").asString()}}\\\" == \\\"all\\\" && \\\"{{cell(OwnerId_hidden.selection,0, \\\"OwnerId\\\").asString()}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count()/unique('OwnerId') as 'count', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{cell(Time_Selection.selection,0,\\\"FullGroup\\\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection,0,\\\"Grouping\\\").asObject()}}, 'Performance' as 'Performance', sum('count') as 'count';\",\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Performance\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"kpi_avg_activities":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}}; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate coalesce(count(), 0)/coalesce(unique('Case.Id'), 0) as 'avg_activity', (case when count()/unique('Case.Id') < {{coalesce(cell(kpi_avg_activities_team.result, 0, \\\"avg_activity\\\"),0).asObject()}} then \\\"#f2536d\\\" when count()/unique('Case.Id') > {{coalesce(cell(kpi_avg_activities_team.result, 0, \\\"avg_activity\\\"),0).asObject()}} then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color'; \",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_duration_prev":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"IsClosed\\\")}}; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; r = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') as 'unique_Percent', (case when 100*(avg(s.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') < 0 then \\\"#3CAF6D\\\" when 100*(avg(s.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(Static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') > 0 then \\\"#f2536d\\\"  else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"DurationCalculatedField_41":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = group q by all; q = foreach q generate avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration';\",\"measures\":[[\"avg\",\"Duration\"]],\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"number_cases":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"CreatedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"],[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"average_case_count_over_time":{"broadcastFacet":false,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\",null]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Reason\\\")}};r = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count() as 'count', (case when (\\\"{{cell(filter_agent.selection,0, \\\"Owner.Name\\\").asString()}}\\\" == \\\"all\\\" && \\\"{{cell(OwnerId_hidden.selection,0, \\\"OwnerId\\\").asString()}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count()/unique('OwnerId') as 'count', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection, 0, \\\"Grouping\\\").asObject()}}, 'Performance' as 'Performance', sum('count') as 'count';\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Performance\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"average_case_duration_over_time":{"broadcastFacet":false,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"Duration\",null]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Reason\\\")}};r = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration', (case when (\\\"{{cell(filter_agent.selection, 0, \\\"Owner.Name\\\").asObject()}}\\\" == \\\"all\\\" && \\\"{{cell(OwnerId_hidden.selection, 0, \\\"OwnerId\\\").asObject()}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection, 0, \\\"Grouping\\\").asObject()}}, 'Performance' as 'Performance', sum('avg_Duration') as 'avg_Duration';\",\"groups\":[\"{{cell(Time_Selection.selection, 0, \\\"compactGroup\\\").asObject()}}\",\"Performance\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"filter_account":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.Name\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"filter_reason":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\",null]],\"groups\":[\"Reason\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"]],\"order\":[[-1,{\"ascending\":\"{{cell(Order_Select.selection,0,\\\"value\\\").asObject()}}\"}]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Activities_PrevPeriod":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}};r = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \\\"#f2536d\\\" when 100*(count(s)-count(r))/count(r) > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"rank_activities":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}}; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\"}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"filter_origin":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Origin\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_avg_activities_rank":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}};q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()) as 'rank_position';q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"IsClosed_42":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ActivityIsClosed\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[\"Completed\"]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"CaseCount_PrevPeriod":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; ENDTOTAL = filter q by 'IsClosed' == \\\"false\\\"; updcreatedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; updclosedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}};compare = group updcreatedTOTAL by all full, updclosedTOTAL by all full, ENDTOTAL by all; compare = foreach compare generate (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 as 'unique_Percent', (case when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 < 0 then \\\"#3CAF6D\\\" when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"filter_agent":{"broadcastFacet":false,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Owner.Name\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"filter_role":{"broadcastFacet":false,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Role.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"filter_record_type":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Id\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_escalation_prev_percent":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; prevq = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; prevq = group prevq by 'IsEscalated'; prevq = foreach prevq generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; prevq = filter prevq by 'IsEscalated' == \\\"true\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\"; b = cogroup q by all, prevq by all; b = foreach b generate 100*(avg(q.'perc_Percent')-avg(prevq.'perc_Percent'))/avg(prevq.'perc_Percent') as 'perc_Percent', (case when 100*(avg(q.'perc_Percent')-avg(prevq.'perc_Percent'))/avg(prevq.'perc_Percent') < 0 then \\\"#3CAF6D\\\" when 100*(avg(q.'perc_Percent')-avg(prevq.'perc_Percent'))/avg(prevq.'perc_Percent') > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"pie"}},"kpi_avg_prev_activities":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; prevq = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; prevq = group prevq by all; prevq = foreach prevq generate coalesce(count(), 0)/coalesce(unique('Case.Id'), 0) as 'avg_activity'; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = group q by all; q = foreach q generate coalesce(count(), 0)/coalesce(unique('Case.Id'), 0) as 'avg_activity'; t = group prevq by all, q by all; t = foreach t generate 100*(avg(q.'avg_activity')-avg(prevq.'avg_activity'))/avg(prevq.'avg_activity') as 'perc_Percent'; \"}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_escalation_team_percent":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\"; \",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"pie"}},"count_activities":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\"}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"activity_priority_type":{"broadcastFacet":false,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = group q by 'Priority';q = foreach q generate 'Priority' as 'Priority' , count() as 'count';q = order q by 'count' desc;\",\"autoFilter\":false,\"groups\":[\"Priority\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"pie"}},"Activities_teamavg":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"team\",\"avg\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}};q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count()/unique('Owner.Id') as 'team_avg';\"}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_avg_activities_team":{"broadcastFacet":true,"datasets":[{"name":"ServiceActivity","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"eadx__ServiceActivity\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"eadx__Product__c\\\"]).asEquality(\\\"Case.eadx__Product__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}};q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate coalesce(count(), 0)/coalesce(unique('Case.Id'), 0) as 'avg_activity'; \"}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"kpi_escalation_percent":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\";\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"pie"}},"Static_Duration":{"broadcastFacet":true,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Case Duration\"]}","type":"staticflex","useGlobal":true,"values":["{\"display\":\"Case Duration\",\"value\":[\"avg\",\"DurationCalculatedField\"],\"pigql_value\":\"DurationCalculatedField\",\"measure_field\":\"avg_DurationCalculatedField\"}"]},"static_case_open_closed":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"IsClosed\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{}},"Order_Select":{"datasets":[],"dimensions":[],"isFacet":false,"isGlobal":false,"selectMode":"single","start":"[false]","type":"static","useGlobal":false,"values":["{\"display\":\"Desc\",\"value\":[\"false\"]}","{\"display\":\"Asc\",\"value\":[\"true\"]}"]}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"number_kpi_duration_prev":{"parameters":{"compact":false,"exploreLink":false,"fontSize":14,"measureField":"unique_Percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"kpi_duration_prev","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"container_13":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"number_kpi_unique_owner_count":{"parameters":{"compact":true,"exploreLink":false,"fontSize":14,"measureField":"team_avg","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"kpi_unique_owner_count","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"Team Average","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"listselector_filter_role":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"filter_role","title":"Role"},"type":"listselector"},"number_Duration_Rank":{"parameters":{"compact":false,"exploreLink":false,"fontSize":14,"measureField":"rank_position","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"Duration_Rank","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"Rank","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"number_DurationCalculatedField_41":{"parameters":{"compact":false,"exploreLink":false,"fontSize":14,"measureField":"avg_Duration","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"DurationCalculatedField_41","textAlignment":"left","textColor":"rgb(64, 96, 127)","title":"Team Average","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text__Escalated":{"parameters":{"content":{"displayTemplate":"% Escalated"},"fontSize":14,"showActionMenu":true,"textAlignment":"center","textColor":"#335779"},"type":"text"},"text_3":{"parameters":{"content":{"displayTemplate":"Duration"},"fontSize":14,"showActionMenu":true,"textAlignment":"center","textColor":"#FFFFFF"},"type":"text"},"container_22":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"text_2":{"parameters":{"content":{"displayTemplate":"Cases"},"fontSize":14,"showActionMenu":true,"textAlignment":"center","textColor":"#FFFFFF"},"type":"text"},"text_4":{"parameters":{"content":{"displayTemplate":"Activities"},"fontSize":14,"showActionMenu":true,"textAlignment":"center","textColor":"#FFFFFF"},"type":"text"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"number_kpi_avg_activities_team":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"avg_activity","numberColor":"#091A3E","numberSize":12,"showActionMenu":true,"step":"kpi_avg_activities_team","textAlignment":"left","title":"Team average","titleColor":"#335779","titleSize":12},"type":"number"},"listselector_filter_reason":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"count","showActionMenu":false,"step":"filter_reason","title":"Case Reason"},"type":"listselector"},"number_kpi_escalation_percent":{"parameters":{"compact":false,"exploreLink":false,"fontSize":20,"measureField":"perc_Percent","numberColor":"#091A3E","numberSize":24,"showActionMenu":true,"step":"kpi_escalation_percent","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"listselector_filter_origin":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"filter_origin","title":"Case Origin"},"type":"listselector"},"text_My_Performance_Summary":{"parameters":{"content":{"displayTemplate":"My Performance Summary"},"fontSize":24,"showActionMenu":true,"textAlignment":"left","textColor":"rgb(41, 71, 102)"},"type":"text"},"number_kpi_avg_activities_rank":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"rank_position","numberColor":"#091A3E","numberSize":12,"showActionMenu":true,"step":"kpi_avg_activities_rank","textAlignment":"left","title":"Rank","titleColor":"#335779","titleSize":12},"type":"number"},"number_owner_rank":{"parameters":{"compact":true,"exploreLink":false,"fontSize":14,"measureField":"rank_position","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"owner_rank","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"Rank","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"container_11":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"pillbox_IsClosed_42":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"count","selectedTab":{"backgroundColor":"#677A97","borderEdges":[],"textColor":"#FFFFFF"},"showActionMenu":true,"step":"IsClosed_42","textColor":"#5C7A99","title":""},"type":"pillbox"},"number_count_activities":{"parameters":{"compact":true,"exploreLink":false,"fontSize":32,"measureField":"count","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"count_activities","textAlignment":"center","title":"","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"ScoreCard_text_title":{"parameters":{"content":{"displayTemplate":"My Scorecard"},"fontSize":16,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"listselector_filter_product":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"count","showActionMenu":false,"step":"filter_product","title":"Product"},"type":"listselector"},"number_kpi_escalation_prev_percent":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"perc_Percent","numberColor":"#091A3E","numberSize":12,"showActionMenu":true,"step":"kpi_escalation_prev_percent","textAlignment":"left","title":"Vs prior period","titleColor":"#335779","titleSize":12},"type":"number"},"chart_average_case_duration_over_time":{"parameters":{"showPoints":true,"legend":{"showHeader":false,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":false,"title":"","customDomain":{"showDomain":false}},"step":"average_case_duration_over_time","theme":"dark"},"type":"chart"},"number_Activities_PrevPeriod":{"parameters":{"compact":true,"exploreLink":false,"fontSize":14,"measureField":"perc_Percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Activities_PrevPeriod","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"number_kpi_avg_prev_activities":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"perc_Percent","numberColor":"#091A3E","numberSize":12,"showActionMenu":true,"step":"kpi_avg_prev_activities","textAlignment":"left","title":"Vs prior period","titleColor":"#335779","titleSize":12},"type":"number"},"number_kpi_escalation_team_percent":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"perc_Percent","numberColor":"#091A3E","numberSize":12,"showActionMenu":true,"step":"kpi_escalation_team_percent","textAlignment":"left","title":"Team average","titleColor":"#335779","titleSize":12},"type":"number"},"number_kpi_escalation_percent_rank":{"parameters":{"compact":false,"exploreLink":false,"fontSize":20,"measureField":"rank_position","numberColor":"#091A3E","numberSize":12,"showActionMenu":true,"step":"kpi_escalation_percent_rank","textAlignment":"left","title":"Rank","titleColor":"#335779","titleSize":12},"type":"number"},"number_Activities_teamavg":{"parameters":{"compact":true,"exploreLink":false,"fontSize":14,"measureField":"team_avg","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"Activities_teamavg","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"Team Average","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"listselector_static_case_open_closed":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"count","showActionMenu":false,"step":"static_case_open_closed","title":"Open/Closed"},"type":"listselector"},"chart_average_activities_over_time":{"parameters":{"showPoints":true,"legend":{"showHeader":false,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":false,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":false,"title":"","customDomain":{"showDomain":false}},"step":"average_activities_over_time","theme":"dark"},"type":"chart"},"listselector_filter_account":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"count","showActionMenu":false,"step":"filter_account","title":"Account"},"type":"listselector"},"text_desktop_only":{"parameters":{"content":{"displayTemplate":"This dashboard is designed for \n desktop viewing only"},"fontSize":20,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"listselector_Time_Selection":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"","showActionMenu":false,"step":"Time_Selection","title":"Date Range"},"type":"listselector"},"container_27":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"chart_average_case_count_over_time":{"parameters":{"showPoints":true,"legend":{"showHeader":false,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":false,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":false,"title":"","customDomain":{"showDomain":false}},"step":"average_case_count_over_time","theme":"dark"},"type":"chart"},"number_CaseCount_PrevPeriod":{"parameters":{"compact":true,"exploreLink":false,"fontSize":14,"measureField":"unique_Percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"CaseCount_PrevPeriod","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"number_DurationCalculatedField_37":{"parameters":{"compact":false,"exploreLink":false,"fontSize":32,"measureField":"avg_Duration","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"DurationCalculatedField_37","textAlignment":"center","textColor":"rgb(0, 0, 0)","title":"","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"number_number_cases":{"parameters":{"compact":true,"exploreLink":false,"fontSize":32,"measureField":"count","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"number_cases","textAlignment":"center","title":"","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"number_kpi_avg_activities":{"parameters":{"compact":false,"exploreLink":false,"fontSize":20,"measureField":"avg_activity","numberColor":"#091A3E","numberSize":24,"showActionMenu":true,"step":"kpi_avg_activities","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"number_rank_activities":{"parameters":{"compact":true,"exploreLink":false,"fontSize":14,"measureField":"rank_position","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"rank_activities","textAlignment":"left","textColor":"rgb(41, 71, 102)","title":"Rank","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"chart_kpi_avg_activities":{"parameters":{"max":100,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"visualizationType":"flatgauge","exploreLink":false,"medium":33,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}","mediumColor1":"{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}","lowColor1":"{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}","lowColor2":"{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}","highColor1":"{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}","highColor2":"{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}"},"high":66,"min":0,"showActionMenu":true,"valueType":"none","theme":"wave","step":"kpi_avg_activities","referenceLines":[{"color":"rgb(0, 161, 224)","label":{"data":"Team","type":"static"},"value":{"data":"{{coalesce(cell(kpi_avg_activities_team.result, 0, \"avg_activity\"),0).asObject()}}","type":"static"}}]},"type":"chart"},"text_Activities_per_case":{"parameters":{"content":{"displayTemplate":"Activities per case"},"fontSize":14,"showActionMenu":true,"textAlignment":"center","textColor":"#335779"},"type":"text"},"chart_kpi_escalation_percent":{"parameters":{"max":100,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"visualizationType":"flatgauge","exploreLink":false,"medium":33,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}","mediumColor1":"{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}","lowColor1":"{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}","lowColor2":"{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}","highColor1":"{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}","highColor2":"{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}"},"high":66,"min":0,"showActionMenu":true,"valueType":"none","theme":"wave","step":"kpi_escalation_percent","referenceLines":[{"color":"rgb(0, 161, 224)","label":{"data":"Team","type":"static"},"value":{"data":"{{coalesce(cell(kpi_escalation_team_percent.result, 0, \"perc_Percent\"),0).asObject()}}","type":"static"}}]},"type":"chart"}}}