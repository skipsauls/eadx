{"dataSourceLinks":[],"filters":[],"gridLayouts":[{"maxWidth":1240,"name":"Default","numColumns":48,"pages":[{"name":"7f07c065-18d8-43ea-b7c1-b4e414dc524f","navigationHidden":false,"widgets":[{"colspan":4,"column":4,"name":"link_1","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderEdges":[]}},{"colspan":4,"column":8,"name":"link_2","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderEdges":[]}},{"colspan":4,"column":12,"name":"link_4","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderEdges":[]}},{"colspan":9,"column":37,"name":"dimfilter_3","row":7,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":8,"column":1,"name":"list_direct_reports","row":7,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":8,"column":10,"name":"list_opportunity_type","row":7,"rowspan":4,"widgetStyle":{"backgroundColor":"#F2F6FA","borderEdges":[]}},{"colspan":33,"column":1,"name":"text_27","row":15,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":12,"column":36,"name":"text_3","row":15,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderEdges":[]}},{"colspan":9,"column":36,"name":"number_23","row":23,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":2,"column":45,"name":"number_17","row":23,"rowspan":2,"widgetStyle":{"backgroundColor":"{{column(color_closed_won.result,[\"RAG\"]).asObject()}}","borderColor":"rgb(9, 26, 62)","borderEdges":[],"borderRadius":16,"borderWidth":1}},{"colspan":9,"column":36,"name":"number_14","row":31,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":2,"column":45,"name":"number_30","row":31,"rowspan":2,"widgetStyle":{"backgroundColor":"{{column(color_QuotaAttainment.result,[\"RAG\"]).asObject()}}","borderColor":"#091A3E","borderEdges":[],"borderRadius":16,"borderWidth":16}},{"colspan":9,"column":36,"name":"number_19","row":39,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":2,"column":45,"name":"number_16","row":39,"rowspan":2,"widgetStyle":{"backgroundColor":"{{column(color_winRate.result,[\"RAG\"]).asObject()}}","borderColor":"#091A3E","borderEdges":[],"borderRadius":16,"borderWidth":1}},{"colspan":9,"column":36,"name":"number_27","row":47,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":2,"column":45,"name":"number_18","row":47,"rowspan":2,"widgetStyle":{"backgroundColor":"{{column(color_AvgSaleCycle.result,[\"RAG\"]).asObject()}}","borderColor":"#091A3E","borderEdges":[],"borderRadius":16,"borderWidth":1}},{"colspan":9,"column":36,"name":"number_1","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":9,"column":36,"name":"number_2","row":33,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":9,"column":36,"name":"number_5","row":41,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":9,"column":36,"name":"number_4","row":49,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":36,"name":"number_7","row":55,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["left"],"borderWidth":8}},{"colspan":5,"column":42,"name":"text_17","row":55,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["right"],"borderWidth":8}},{"colspan":9,"column":6,"name":"dimfilter_5","row":22,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":[],"borderWidth":8}},{"colspan":8,"column":20,"name":"dimfilter_9","row":22,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":[],"borderWidth":8}},{"colspan":33,"column":1,"name":"chart_1_mobile","row":25,"rowspan":32,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[],"borderWidth":8}},{"colspan":48,"column":0,"name":"container_16","row":6,"rowspan":7,"widgetStyle":{"backgroundColor":"#F2F6FA","borderColor":"#F2F6FA","borderEdges":["left","right","top"],"borderWidth":8}},{"colspan":45,"column":3,"name":"container_17","row":0,"rowspan":6,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":35,"column":0,"name":"container_18","row":13,"rowspan":46,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":35,"name":"container_19","row":13,"rowspan":41,"widgetStyle":{"backgroundColor":"rgb(4, 14, 43)","borderColor":"rgba(51, 87, 121, 0)","borderEdges":["right"],"borderRadius":0,"borderWidth":8}},{"colspan":48,"column":0,"name":"container_20","row":59,"rowspan":48,"widgetStyle":{"borderEdges":[]}},{"colspan":46,"column":1,"name":"comparetable_1","row":66,"rowspan":39,"widgetStyle":{"borderEdges":[]}},{"colspan":11,"column":1,"name":"text_21","row":61,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":13,"column":35,"name":"container_22","row":54,"rowspan":5,"widgetStyle":{"backgroundColor":"rgb(4, 14, 43)","borderColor":"rgba(51, 87, 121, 0.49)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":36,"name":"text_28","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0.01)","borderColor":"rgba(9, 26, 62, 0)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":16,"name":"text_29","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#44A2F5","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":3,"column":0,"name":"container_23","row":0,"rowspan":6,"widgetStyle":{"borderEdges":["bottom"]}},{"colspan":3,"column":0,"name":"link_3","row":1,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":20,"name":"link_5","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#E6ECF2","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original","gutterColor":"#E6ECF2"},"version":1.0},{"name":"iPhone","numColumns":24,"pages":[{"name":"7f07c065-18d8-43ea-b7c1-b4e414dc524f","navigationHidden":false,"widgets":[{"colspan":10,"column":13,"name":"list_direct_reports","row":6,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderEdges":[]}},{"colspan":22,"column":1,"name":"dimfilter_3","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderEdges":[]}},{"colspan":22,"column":1,"name":"text_3","row":10,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":23,"column":1,"name":"text_8","row":45,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":24,"column":0,"name":"container_10","row":9,"rowspan":5,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":18,"name":"number_17","row":16,"rowspan":3,"widgetStyle":{"backgroundColor":"{{column(color_closed_won.result,[\"RAG\"]).asObject()}}","borderColor":"rgb(9, 26, 62)","borderEdges":[],"borderWidth":1}},{"colspan":5,"column":18,"name":"number_30","row":24,"rowspan":3,"widgetStyle":{"backgroundColor":"{{column(color_QuotaAttainment.result,[\"RAG\"]).asObject()}}","borderColor":"#091A3E","borderEdges":[],"borderWidth":1}},{"colspan":5,"column":18,"name":"number_16","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"{{column(color_winRate.result,[\"RAG\"]).asObject()}}","borderColor":"#091A3E","borderEdges":[],"borderWidth":16}},{"colspan":5,"column":18,"name":"number_18","row":32,"rowspan":3,"widgetStyle":{"backgroundColor":"{{column(color_AvgSaleCycle.result,[\"RAG\"]).asObject()}}","borderColor":"#091A3E","borderEdges":[],"borderWidth":1}},{"colspan":24,"column":0,"name":"text_1","row":49,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":9,"column":14,"name":"text_17","row":68,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":[],"borderWidth":8}},{"colspan":24,"column":0,"name":"container_11","row":49,"rowspan":24,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":24,"column":0,"name":"container_12","row":14,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":24,"column":0,"name":"container_13","row":22,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":24,"column":0,"name":"container_14","row":30,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":24,"column":0,"name":"container_15","row":38,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"text_4","row":16,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"text_5","row":24,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":1,"name":"text_6","row":32,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":1,"name":"text_7","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"text_9","row":54,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"text_10","row":57,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"text_11","row":60,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"text_12","row":63,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":0,"name":"text_13","row":68,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":12,"name":"number_3","row":16,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":12,"name":"number_6","row":24,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":12,"name":"number_8","row":32,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":12,"name":"number_9","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":17,"name":"number_10","row":54,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":17,"name":"number_11","row":57,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":17,"name":"number_12","row":60,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":17,"name":"number_13","row":63,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":10,"name":"number_15","row":68,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":["maxWidth(599)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#091A3E","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1.0}],"layouts":[],"steps":{"QuotaAttainment_Hidden":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"TeamAvg\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};   q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount';  quota = load \\\"eadx__quota1\\\";  quota = filter quota by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; quota = group quota by 'User.Id'; quota = foreach quota generate 'User.Id' as 'User.Id', coalesce(sum('QuotaAmount'),0) as 'sum_QuotaAmount';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId', quota by 'User.Id'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', coalesce((sum(q['sum_Amount']) /sum(quota['sum_QuotaAmount'])),0) as 'sum_QuotaAmount';Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate coalesce(sum('sum_QuotaAmount'),0) as 'sum_QuotaAmount';Total_Avg = group c by all;Total_Avg = foreach Total_Avg generate coalesce(sum('sum_QuotaAmount') / {{coalesce(column(User_Count.result,[\\\"count\\\"]),0).asObject()}},0) as 'teamAvg';RR = cogroup Total_Sum by all, Total_Avg by all;RR = foreach RR generate coalesce(sum(Total_Sum['sum_QuotaAmount']),0) as 'sum_TeamTotal', coalesce(sum(Total_Avg['teamAvg']),0) as 'sum_TeamAvg';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_TeamTotal', 0 as 'sum_TeamAvg'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_TeamTotal') as 'sum_TeamTotal', sum('sum_TeamAvg') as 'sum_TeamAvg';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"step_groupABS_AVG1":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Absolute\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"Absolute\",\"top\":\"sum\",\"bottom1\":\"measure_sum\",\"bottom2\":\"measure\"}","{\"display\":\"vs Team Avg (%)\",\"top\":\"avg\",\"bottom1\":\"measure_avg\",\"bottom2\":\"measure\"}"]},"Compare_Table_TeamAvg_Left":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"pipe_right\"]],\"pigql\":\"rightpipe = load \\\"eadx__opportunity1\\\"; rightpipe = filter rightpipe by 'IsClosed' == \\\"false\\\"; rightpipe = filter rightpipe by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};rightpipe = filter rightpipe by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};rightpipe = filter rightpipe by {{cell(step_group35.selection,0, \\\"filter\\\").asObject()}}; rightpipe = filter rightpipe by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};rightpipe = filter rightpipe by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];rightpipe = group rightpipe by all;rightpipe = foreach rightpipe generate sum('Amount') / {{coalesce(column(Compare_Table_UserCount_Left.result,[\\\"sum_Usercount\\\"]),0).asObject()}} as 'sum_pipe_right';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Id_2":{"broadcastFacet":false,"datasets":[{"name":"user1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"a = load \\\"eadx__user1\\\"; a = filter a by hasOpportunity == \\\"true\\\"; a = filter a by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; a = group a by 'UniqueUserName'; a = foreach a generate 'UniqueUserName' as 'Owner.UniqueUserName';\",\"groups\":[\"Owner.UniqueUserName\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"AvgSalesCycle_Hidden_CW_Count":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"sales_cycle\"]],\"pigql\":\"a = load \\\"eadx__opportunity1\\\"; a= filter a by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}} ; a = filter a by 'IsClosed'== \\\"true\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; a = group a by all; a = foreach a generate coalesce((sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch')) / count(),0) as 'avg_sales_cycle';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'avg_sales_cycle'; final = union a, fake; final = group final by all; final = foreach final generate sum('avg_sales_cycle') as 'avg_sales_cycle';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"WinRate_Hidden":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"TeamAvg\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};  q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount'; r = load \\\"eadx__opportunity1\\\"; r = filter r by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; r = filter r by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};  r = filter r by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; r = filter r by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; r = filter r by 'IsWon' == \\\"false\\\"; r = group r by 'OwnerId'; r = foreach r generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Lost';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId',r by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', coalesce((sum(q['sum_Amount']) /(sum(r['sum_Lost']) + sum(q['sum_Amount']))),0) as 'sum_WinRate';   Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate coalesce(sum('sum_WinRate'),0) as 'sum_WinRate';Total_Avg = group c by all;  Total_Avg = foreach Total_Avg generate coalesce(sum('sum_WinRate') / {{coalesce(column(User_Count.result,[\\\"count\\\"]),0).asObject()}},0) as 'teamAvg';RR = cogroup Total_Sum by all, Total_Avg by all;RR = foreach RR generate coalesce(sum(Total_Sum['sum_WinRate']),0) as 'sum_WinRate', coalesce(sum(Total_Avg['teamAvg']),0) as 'sum_TeamAvg'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_TeamTotal', 0 as 'sum_TeamAvg'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_TeamTotal') as 'sum_TeamTotal', sum('sum_TeamAvg') as 'sum_TeamAvg';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Id_1":{"broadcastFacet":false,"datasets":[{"name":"user1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"UniqueUserName\"],\"filters\":[[\"hasOpportunity\",[\"true\"],\"in\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Rank_CloseWon":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId';q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount';u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['UniqueUserName']) as 'UniqueUserName', q['OwnerId'] as 'OwnerId', coalesce(sum(q['sum_Amount']),0) as 'sum_Amount';RR = group c by 'OwnerId'; RR = foreach RR generate first('UniqueUserName') as 'UniqueUserName', 'OwnerId' as 'OwnerId', coalesce(sum('sum_Amount'),0) as 'sum_Amount', (case when  {{coalesce(column(Rank_CloseWon_Count.result,[\\\"sum_Gobi\\\"]),0).asObject()}} == 1 then rank() over([..] partition by all order by sum('sum_Amount') desc ) else 1 end) as 'sum_RAAank';RRR = filter RR by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; RRRR = filter RRR by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};\",\"measures\":[[\"sum\",\"RAAank\"]],\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"step_group35_1":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"WinRate (%)\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"Closed Won\",\"first_f\":\"sum('sum_Amount') as 'sum_measure_right_amount', sum('sum_amountAVG') as 'avg_measure_right_amount'\",\"right\":\"measure_right_amount\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"Opportunity Count\",\"first_f\":\"sum('sum_right_count') as 'sum_measure_right_amount', sum('sum_right_countAVG') as 'avg_measure_right_amount'\",\"right\":\"measure_right_amount\",\"filter\":\"'IsClosed' == \\\"true\\\"\"}","{\"display\":\"Average Deal Size\",\"first_f\":\"sum('sum_right_DealAmount') as 'sum_measure_right_amount', sum('sum_DealAVG_Right') as 'avg_measure_right_amount'\",\"right\":\"measure_right_amount\",\"filter\":\"'IsClosed' == \\\"true\\\"\"}","{\"display\":\"Commit\",\"first_f\":\"sum('sum_pipe_right') as 'sum_measure_right_amount', sum('sum_AVGRight') as 'avg_measure_right_amount'\",\"right\":\"measure_right_amount\",\"filter\":\"'ForecastCategoryName' == \\\"Commit\\\"\"}","{\"display\":\"Best Case\",\"first_f\":\"sum('sum_pipe_right') as 'sum_measure_right_amount', sum('sum_AVGRight') as 'avg_measure_right_amount'\",\"right\":\"measure_right_amount\",\"filter\":\"'ForecastCategoryName' == \\\"Best Case\\\"\"}","{\"display\":\"Pipeline\",\"first_f\":\"sum('sum_pipe_right') as 'sum_measure_right_amount', sum('sum_AVGRight') as 'avg_measure_right_amount'\",\"right\":\"measure_right_amount\",\"filter\":\"'ForecastCategoryName' == \\\"Pipeline\\\"\"}","{\"display\":\"AvgSaleCycle (days)\",\"first_f\":\"sum('sum_DaysOpen') as 'sum_measure_right', sum('sum_daysAVG') as 'avg_measure_right'\",\"right\":\"measure_right\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"Quota Attainment (%)\",\"first_f\":\"sum('sum_QuotaAmount') as 'sum_measure_avg', sum('sum_QuotaAmountAvg') as 'avg_measure_avg'\",\"right\":\"measure_avg\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"WinRate (%)\",\"first_f\":\"sum('sum_win_rate') as 'sum_measure_avg', sum('sum_win_rateAVG') as 'avg_measure_avg'\",\"right\":\"measure_avg\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"Activities (Based on % Completed)\",\"first_f\":\"sum('sum_RightActivity') as 'sum_measure_avg', sum('sum_RightActivityAvg') as 'avg_measure_avg'\",\"right\":\"measure_avg\",\"filter\":\"'IsClosed' == \\\"true\\\"\"}"]},"AvgSalesCycle_Hidden_UserCount":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"UserCount\"]],\"pigql\":\"Sales_Cycle = load \\\"eadx__opportunity1\\\"; Sales_Cycle = filter Sales_Cycle by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];Sales_Cycle = filter Sales_Cycle by 'IsClosed'== \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'IsWon' == \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'Type' in all ;Avg_Day = group Sales_Cycle by ('OwnerId');Avg_Day = foreach Avg_Day generate 'OwnerId' as 'OwnerId', coalesce((sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch'))/count(),0) as 'avg_Days_Open';u = load \\\"eadx__user1\\\";u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};c = group u by 'Id' full, Avg_Day by 'OwnerId';c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', coalesce(sum(Avg_Day['avg_Days_Open']),0) as 'avg_DaysOpen';Total_Avg = group c by Name;Total_Avg = foreach Total_Avg generate coalesce(sum('avg_DaysOpen') ,0) as 'teamAvg', 'Name' as 'name';Gobi = filter Total_Avg by 'teamAvg' !=0; Gobi = foreach Gobi generate 'name' as 'Name', count() as 'count'; RR = group Gobi by all;RR = foreach RR generate sum('count') as 'sum_UserCount';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"AVGDays_StockTicker":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"StockAvg\"]],\"pigql\":\"Sales_Cycle = load \\\"eadx__opportunity1\\\";Sales_Cycle = filter Sales_Cycle by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};Sales_Cycle = filter Sales_Cycle by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};  Sales_Cycle = filter Sales_Cycle by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  Sales_Cycle = filter Sales_Cycle by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];Sales_Cycle = filter Sales_Cycle by 'IsClosed'== \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'IsWon' == \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'Type' in all ;Avg_Day = group Sales_Cycle by ('OwnerId');Avg_Day = foreach Avg_Day generate 'OwnerId' as 'OwnerId', coalesce((sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch'))/count(),0) as 'avg_Days_Open';u = load \\\"eadx__user1\\\"; u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};c = group u by 'Id' full, Avg_Day by 'OwnerId';c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', sum(Avg_Day['avg_Days_Open']) as 'avg_DaysOpen', unique(u['Name']) as 'count';  Total_Sum = group c by all; Total_Sum = foreach Total_Sum generate (sum('avg_DaysOpen') - {{coalesce(column(AvgSalesCycle_Hidden_CW_Count.result,[\\\"avg_sales_cycle\\\"]),0).asObject()}}) / {{coalesce(column(AvgSalesCycle_Hidden_CW_Count.result,[\\\"avg_sales_cycle\\\"]),0).asObject()}} as 'sum_TeamAvg', sum('count') as 'count'; Total_Sum = foreach Total_Sum generate (case when sum('count') == 1 then sum('sum_TeamAvg') else 0 end) as 'sum_StockAvg'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_StockAvg'; final = union Total_Sum, fake; final = group final by all; final = foreach final generate sum('sum_StockAvg') as 'sum_StockAvg';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"QuotaAttainment_Hidden_Total":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"quota_attainment\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\";  q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};  q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount';  quota = load \\\"eadx__quota1\\\";  quota = filter quota by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; quota = group quota by 'User.Id'; quota = foreach quota generate 'User.Id' as 'User.Id', coalesce(sum('QuotaAmount'),0) as 'sum_QuotaAmount';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId' full, quota by 'User.Id'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', coalesce(sum(q['sum_Amount']),0) as 'sum_Amount', coalesce(sum(quota['sum_QuotaAmount']),0) as 'sum_QuotaAmount';Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate coalesce(sum('sum_Amount') / sum('sum_QuotaAmount'),0) as 'sum_quota_attainment';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_quota_attainment'; final = union Total_Sum, fake; final = group final by all; final = foreach final generate sum('sum_quota_attainment') as 'sum_quota_attainment';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"dropdown_record_type":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Id\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"Close_Won_Hidden":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"TeamAvg\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};  q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];  q = filter q by 'IsWon' == \\\"true\\\";  q = group q by 'OwnerId';  q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount';  u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, q by 'OwnerId';  c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId',coalesce(sum(q['sum_Amount']),0) as 'sum_Amount';Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate coalesce(sum('sum_Amount'),0) as 'sum_TeamTotal';Total_Avg = group c by all;Total_Avg = foreach Total_Avg generate coalesce(sum('sum_Amount') / {{coalesce(column(Close_Won_Hidden_UserCount.result,[\\\"sum_Usercount\\\"]),0).asObject()}},0) as 'teamAvg';RR = cogroup Total_Sum by all, Total_Avg by all;RR = foreach RR generate coalesce(sum(Total_Sum['sum_TeamTotal']),0) as 'sum_TeamTotal', coalesce(sum(Total_Avg['teamAvg']),0) as 'sum_TeamAvg';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_TeamAvg', 0 as 'sum_TeamTotal'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_TeamTotal') as 'sum_TeamTotal', sum('sum_TeamAvg') as 'sum_TeamAvg';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"color_QuotaAttainment":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"finalcf\",null]],\"pigql\":\"a = load \\\"eadx__opportunity1\\\"; a = group a by all; a = foreach a generate (case when {{coalesce(column(QuotaAttainment_StockTicker.result, [\\\"sum_quota_attainment\\\"]), 0).asObject()}} > 0 then \\\"#067D1E\\\" when {{coalesce(column(QuotaAttainment_StockTicker.result, [\\\"sum_quota_attainment\\\"]), 0).asObject()}} < 0 then \\\"#E3193B\\\" else \\\"#192B61\\\" end) as 'RAG'; a = group a by 'RAG'; a = foreach a generate 'RAG' as 'RAG', 0.95 as 'sum_finalcf';\",\"groups\":[\"RAG\"],\"order\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true},"Compare_Table_TeamAvg_Right":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"pipe_right\"]],\"pigql\":\"rightpipe = load \\\"eadx__opportunity1\\\"; rightpipe = filter rightpipe by 'IsClosed' == \\\"false\\\"; rightpipe = filter rightpipe by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};rightpipe = filter rightpipe by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};rightpipe = filter rightpipe by {{cell(step_group35_1.selection,0, \\\"filter\\\").asObject()}}; rightpipe = filter rightpipe by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};rightpipe = filter rightpipe by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];rightpipe = group rightpipe by all;rightpipe = foreach rightpipe generate sum('Amount') / {{coalesce(column(Compare_Table_UserCount_Right.result,[\\\"sum_Usercount\\\"]),0).asObject()}} as 'sum_pipe_right';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Activity_TeamAvg_Hidden":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"CompletedRate\"]],\"pigql\":\"all_activity = load \\\"eadx__activity1\\\"; all_activity = filter all_activity by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; all_activity = filter all_activity by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; all_activity = filter all_activity by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; all_activity = filter all_activity by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; all_activity = filter all_activity by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  activity = filter all_activity by 'IsClosed' == \\\"true\\\"; Own = group activity by 'OwnerId' full, all_activity by 'OwnerId'; Own = foreach Own generate all_activity['OwnerId'] as 'OwnerId', coalesce(count(activity),0) as 'completed', coalesce(count(all_activity),0) as 'Total_Activities'; u = load \\\"eadx__user1\\\"; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, Own by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', sum(Own['completed']) as 'completed', sum(Own['Total_Activities']) as 'Total_Activities'; Total_Sum = group c by all; Total_Sum = foreach Total_Sum generate sum('completed') / sum('Total_Activities') as 'sum_CompletedRate'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_CompletedRate'; final = union Total_Sum, fake; final = group final by all; final = foreach final generate sum('sum_CompletedRate') as 'sum_CompletedRate';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Rank_WinRate":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__opportunity1\\\";  q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId';q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount'; r = load \\\"eadx__opportunity1\\\";r = filter r by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};r = filter r by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};r = filter r by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; r = filter r by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];r = filter r by 'IsClosed' == \\\"true\\\";r = group r by 'OwnerId';r = foreach r generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Lost';  u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId' full,r by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['UniqueUserName']) as 'UniqueUserName', q['OwnerId'] as 'OwnerId',coalesce((sum(q['sum_Amount']) /(sum(r['sum_Lost']) + sum(q['sum_Amount'])) * 100),0) as 'sum_WinRate';RR = group c by 'OwnerId'; RR = foreach RR generate first('UniqueUserName') as 'UniqueUserName', 'OwnerId' as 'OwnerId', coalesce(sum('sum_WinRate'),0) as 'sum_WinRate', (case when  {{coalesce(column(Rank_CloseWon_Count.result,[\\\"sum_Gobi\\\"]),0).asObject()}} == 1 then rank() over([..] partition by all order by sum('sum_WinRate') desc ) else 1 end) as 'sum_RAAank'; RRR = filter RR by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};RRRR = filter RRR by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};\",\"measures\":[[\"sum\",\"RAAank\"]],\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"OpptyCount_UserCount_Right":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Usercount\"]],\"pigql\":\"rightpipe = load \\\"eadx__opportunity1\\\";  rightpipe = filter rightpipe by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};rightpipe = filter rightpipe by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; rightpipe = filter rightpipe by {{cell(step_group35_1.selection,0, \\\"filter\\\").asObject()}}; rightpipe = filter rightpipe by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};rightpipe = filter rightpipe by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];rightpipe = group rightpipe by 'OwnerId'; rightpipe = foreach rightpipe generate count() as 'sum_count_right','OwnerId' as 'OwnerId';  u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, rightpipe by 'OwnerId';  c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', rightpipe['OwnerId'] as 'OwnerId', coalesce(sum(rightpipe['sum_count_right']),0) as 'sum_count_right';Total_Sum = group c by 'Name'; Total_Sum = foreach Total_Sum generate coalesce(sum('sum_count_right'),0) as 'sum_TeamTotal', 'Name' as 'Name';Gobi = filter Total_Sum by 'sum_TeamTotal' !=0; Gobi = foreach Gobi generate 'Name' as 'Name', count() as 'count'; RR = group Gobi by all;RR = foreach RR generate sum('count') as 'sum_Usercount';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"color_AvgSaleCycle":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"finalcf\",null]],\"pigql\":\"a = load \\\"eadx__opportunity1\\\"; a = group a by all; a = foreach a generate (case when {{coalesce(column(AVGDays_StockTicker.result, [\\\"sum_StockAvg\\\"]), 0).asObject()}} < 0 then \\\"#067D1E\\\" when {{coalesce(column(AVGDays_StockTicker.result, [\\\"sum_StockAvg\\\"]), 0).asObject()}} > 0 then \\\"#E3193B\\\" else \\\"#192B61\\\" end) as 'RAG'; a = group a by 'RAG'; a = foreach a generate 'RAG' as 'RAG', 0.95 as 'sum_finalcf';\",\"groups\":[\"RAG\"],\"order\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true},"Close_Won_Hidden_UserCount":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Usercount\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};   q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];  q = filter q by 'IsWon' == \\\"true\\\";  q = group q by 'OwnerId';  q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount';  u = load \\\"eadx__user1\\\";   u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, q by 'OwnerId';  c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId',coalesce(sum(q['sum_Amount']),0) as 'sum_Amount';Total_Sum = group c by 'Name'; Total_Sum = foreach Total_Sum generate coalesce(sum('sum_Amount'),0) as 'sum_TeamTotal', 'Name' as 'Name';Gobi = filter Total_Sum by 'sum_TeamTotal' !=0; Gobi = foreach Gobi generate 'Name' as 'Name', count() as 'count'; RR = group Gobi by all;RR = foreach RR generate sum('count') as 'sum_Usercount';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"AVGDEALSIZE_TeamAvg_Right":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"pipe_right\"]],\"pigql\":\"rightpipe = load \\\"eadx__opportunity1\\\"; rightpipe = filter rightpipe by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};rightpipe = filter rightpipe by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; rightpipe = filter rightpipe by 'IsClosed' == \\\"true\\\"; rightpipe = filter rightpipe by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};rightpipe = filter rightpipe by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];rightpipe = group rightpipe by all;rightpipe = foreach rightpipe generate sum('Amount') / count() as 'sum_pipe_right';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Compare_Table_UserCount_Right":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Usercount\"]],\"pigql\":\"rightpipe = load \\\"eadx__opportunity1\\\"; rightpipe = filter rightpipe by 'IsClosed' == \\\"false\\\"; rightpipe = filter rightpipe by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};rightpipe = filter rightpipe by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; rightpipe = filter rightpipe by {{cell(step_group35_1.selection,0, \\\"filter\\\").asObject()}}; rightpipe = filter rightpipe by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};rightpipe = filter rightpipe by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];rightpipe = group rightpipe by 'OwnerId'; rightpipe = foreach rightpipe generate sum('Amount') as 'sum_pipe_right','OwnerId' as 'OwnerId';  u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, rightpipe by 'OwnerId';  c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', rightpipe['OwnerId'] as 'OwnerId', coalesce(sum(rightpipe['sum_pipe_right']),0) as 'sum_pipe_right';Total_Sum = group c by 'Name'; Total_Sum = foreach Total_Sum generate coalesce(sum('sum_pipe_right'),0) as 'sum_TeamTotal', 'Name' as 'Name';Gobi = filter Total_Sum by 'sum_TeamTotal' !=0; Gobi = foreach Gobi generate 'Name' as 'Name', count() as 'count'; RR = group Gobi by all;RR = foreach RR generate sum('count') as 'sum_Usercount';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Close_Won_Hidden_Total":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"TeamTotal\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];  q = filter q by 'IsWon' == \\\"true\\\";  q = group q by 'OwnerId';  q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount';  u = load \\\"eadx__user1\\\";   u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, q by 'OwnerId';  c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId',sum(q['sum_Amount']) as 'sum_Amount';Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate sum('sum_Amount') as 'sum_TeamTotal';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_TeamTotal'; final = union Total_Sum, fake; final = group final by all; final = foreach final generate sum('sum_TeamTotal') as 'sum_TeamTotal';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"step_type_of_forecast":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ForecastCategoryName\"],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"AvgSalesCycle_Hidden2":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Days_Open\"]],\"pigql\":\"Sales_Cycle = load \\\"eadx__opportunity1\\\"; Sales_Cycle = filter Sales_Cycle by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};Sales_Cycle = filter Sales_Cycle by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};Sales_Cycle = filter Sales_Cycle by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};Sales_Cycle = filter Sales_Cycle by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; Sales_Cycle = filter Sales_Cycle by 'IsClosed'== \\\"true\\\" ; Sales_Cycle = filter Sales_Cycle by 'IsWon' == \\\"true\\\" ; Sales_Cycle = filter Sales_Cycle by 'Type' in all ; Avg_Day = group Sales_Cycle by ('OwnerId'); Avg_Day = foreach Avg_Day generate 'OwnerId' as 'OwnerId', coalesce((sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch'))/count(),0) as 'avg_Days_Open'; u = load \\\"eadx__user1\\\";u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, Avg_Day by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', Avg_Day['OwnerId'] as 'OwnerId', sum(Avg_Day['avg_Days_Open']) as 'avg_DaysOpen',unique(u['Name']) as 'count';  RR = group c by all; RR = foreach RR generate sum('avg_DaysOpen') as 'avg_Days_Open',sum('count') as 'count'; RR = foreach RR generate (case when sum('count') == 1 then sum('avg_Days_Open') else {{coalesce(column(AvgSalesCycle_Hidden_CW_Count.result,[\\\"avg_sales_cycle\\\"]),0).asObject()}} end) as 'sum_Days_Open'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_Days_Open'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_Days_Open') as 'sum_Days_Open';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"step_group35":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Closed Won\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"Closed Won\",\"first_f\":\"sum('sum_Amount') as 'sum_measure_left_amount', sum('sum_amountAVG') as 'avg_measure_left_amount'\",\"left\":\"measure_left_amount\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"Opportunity Count\",\"first_f\":\"sum('sum_left_count') as 'sum_measure_left_amount', sum('sum_left_countAVG') as 'avg_measure_left_amount'\",\"left\":\"measure_left_amount\",\"filter\":\"'IsClosed' == \\\"true\\\"\"}","{\"display\":\"Average Deal Size\",\"first_f\":\"sum('sum_left_DealAmount') as 'sum_measure_left_amount', sum('sum_DealAVG_Left') as 'avg_measure_left_amount'\",\"left\":\"measure_left_amount\",\"filter\":\"'IsClosed' == \\\"true\\\"\"}","{\"display\":\"Commit\",\"first_f\":\"sum('sum_pipe') as 'sum_measure_left_amount', sum('sum_AVGLeft') as 'avg_measure_left_amount'\",\"left\":\"measure_left_amount\",\"filter\":\"'ForecastCategoryName' == \\\"Commit\\\"\"}","{\"display\":\"Best Case\",\"first_f\":\"sum('sum_pipe') as 'sum_measure_left_amount', sum('sum_AVGLeft') as 'avg_measure_left_amount'\",\"left\":\"measure_left_amount\",\"filter\":\"'ForecastCategoryName' == \\\"Best Case\\\"\"}","{\"display\":\"Pipeline\",\"first_f\":\"sum('sum_pipe') as 'sum_measure_left_amount', sum('sum_AVGLeft') as 'avg_measure_left_amount'\",\"left\":\"measure_left_amount\",\"filter\":\"'ForecastCategoryName' == \\\"Pipeline\\\"\"}","{\"display\":\"AvgSaleCycle (days)\",\"first_f\":\"sum('sum_DaysOpen') as 'sum_measure_left', sum('sum_daysAVG') as 'avg_measure_left'\",\"left\":\"measure_left\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"Quota Attainment (%)\",\"first_f\":\"sum('sum_QuotaAmount') as 'sum_measure', sum('sum_QuotaAmountAvg') as 'avg_measure'\",\"left\":\"measure\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"WinRate (%)\",\"first_f\":\"sum('sum_win_rate') as 'sum_measure', sum('sum_win_rateAVG') as 'avg_measure'\",\"left\":\"measure\",\"filter\":\"'IsWon' == \\\"true\\\"\"}","{\"display\":\"Activities (Based on % Completed)\",\"first_f\":\"sum('sum_LeftActivity') as 'sum_measure', sum('sum_LeftActivityAvg') as 'avg_measure'\",\"left\":\"measure\",\"filter\":\"'IsClosed' == \\\"true\\\"\"}"]},"WinRate_Hidden2_Team_Total":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"win_rate\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\";q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount'; r = load \\\"eadx__opportunity1\\\";r = filter r by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};r = filter r by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};r = filter r by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; r = filter r by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};r = filter r by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; r = filter r by 'IsClosed' == \\\"true\\\"; r = group r by 'OwnerId'; r = foreach r generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Lost';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId' full,r by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', sum(q['sum_Amount']) as 'sum_Amount', sum(r['sum_Lost']) as 'sum_Lost';   RR = group c by all; RR = foreach RR generate sum('sum_Amount') / sum('sum_Lost')  as 'sum_win_rate';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_win_rate'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_win_rate') as 'sum_win_rate';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"OpptyCount_TeamAvg_Right":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"pipe_right\"]],\"pigql\":\"rightpipe = load \\\"eadx__opportunity1\\\"; rightpipe = filter rightpipe by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};rightpipe = filter rightpipe by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; rightpipe = filter rightpipe by 'IsClosed' == \\\"true\\\"; rightpipe = filter rightpipe by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};rightpipe = filter rightpipe by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];rightpipe = group rightpipe by all;rightpipe = foreach rightpipe generate coalesce(count() / {{coalesce(column(OpptyCount_UserCount_Right.result,[\\\"sum_Usercount\\\"]),0).asObject()}},0) as 'sum_pipe_right';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Rank_AvgDays":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"Sales_Cycle = load \\\"eadx__opportunity1\\\";Sales_Cycle = filter Sales_Cycle by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};Sales_Cycle = filter Sales_Cycle by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};Sales_Cycle = filter Sales_Cycle by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];Sales_Cycle = filter Sales_Cycle by 'IsClosed'== \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'IsWon' == \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'Type' in all ;Avg_Day = group Sales_Cycle by ('OwnerId');Avg_Day = foreach Avg_Day generate 'OwnerId' as 'OwnerId', coalesce((sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch'))/count(),0) as 'avg_Days_Open'; u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, Avg_Day by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['UniqueUserName']) as 'UniqueUserName', Avg_Day['OwnerId'] as 'OwnerId', sum(Avg_Day['avg_Days_Open']) as 'avg_DaysOpen';RR = group c by 'OwnerId'; RR = foreach RR generate first('UniqueUserName') as 'UniqueUserName', 'OwnerId' as 'OwnerId', sum('avg_DaysOpen') as 'avg_DaysOpen',(case when  {{coalesce(column(Rank_CloseWon_Count.result,[\\\"sum_Gobi\\\"]),0).asObject()}} == 1 then rank() over([..] partition by all order by sum('avg_DaysOpen') asc ) else 1 end) as 'sum_RAAank';  RRR = filter RR by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; RRRR = filter RRR by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};\",\"measures\":[[\"sum\",\"RAAank\"]],\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"AvgSalesCycle_Hidden":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"TeamAvg\"]],\"pigql\":\"Sales_Cycle = load \\\"eadx__opportunity1\\\"; Sales_Cycle = filter Sales_Cycle by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];Sales_Cycle = filter Sales_Cycle by 'IsClosed'== \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'IsWon' == \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'Type' in all ;Avg_Day = group Sales_Cycle by ('OwnerId');Avg_Day = foreach Avg_Day generate 'OwnerId' as 'OwnerId', coalesce((sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch'))/count(),0) as 'avg_Days_Open';u = load \\\"eadx__user1\\\";u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};c = group u by 'Id' full, Avg_Day by 'OwnerId';c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', coalesce(sum(Avg_Day['avg_Days_Open']),0) as 'avg_DaysOpen';Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate coalesce(sum('avg_DaysOpen'),0) as 'avg_DaysOpen';Total_Avg = group c by all;Total_Avg = foreach Total_Avg generate coalesce(sum('avg_DaysOpen') / {{coalesce(column(AvgSalesCycle_Hidden_UserCount.result,[\\\"sum_UserCount\\\"]),0).asObject()}},0) as 'teamAvg';RR = cogroup Total_Sum by all, Total_Avg by all;RR = foreach RR generate coalesce(sum(Total_Sum['avg_DaysOpen']),0) as 'sum_TeamTotal',coalesce(sum(Total_Avg['teamAvg']),0) as 'sum_TeamAvg';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_TeamTotal', 0 as 'sum_TeamAvg'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_TeamTotal') as 'sum_TeamTotal', sum('sum_TeamAvg') as 'sum_TeamAvg';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Team_Compare_Table":{"broadcastFacet":false,"datasets":[{"name":"user1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Quota Remaining\",null],[\"sum\",\"Won\"],[\"sum\",\"Commit\"],[\"sum\",\"Best Case\"],[\"sum\",\"Pipeline\"],[\"sum\",\"Forecast\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; won = filter q by 'IsWon' == \\\"true\\\"; commit = filter q by 'ForecastCategory' ==\\\"Forecast\\\"; bestcase =  filter q by 'ForecastCategory' ==\\\"BestCase\\\"; pipeline =  filter q by 'ForecastCategory' ==\\\"Pipeline\\\"; Forecast = filter q by 'IsWon' == \\\"true\\\"  || ({{column(step_type_of_forecast.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}} && !('ForecastCategory' in [\\\"Omitted\\\",\\\"Closed\\\"])); quota = load \\\"eadx__quota1\\\"; quota = filter quota by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; u = load \\\"eadx__user1\\\"; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by 'IsActive' == \\\"true\\\"; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, won by 'OwnerId' full, commit by 'OwnerId' full, bestcase by 'OwnerId' full, pipeline by 'OwnerId' full, Forecast by 'OwnerId' full, quota by 'User.Id'; c = foreach c generate u['Id'] as 'Id', coalesce(first(u['UniqueUserName']), first(won['Owner.UniqueUserName']), first(quota['User.UniqueUserName']), first(commit['Owner.UniqueUserName']),first(bestcase['Owner.UniqueUserName']),first(pipeline['Owner.UniqueUserName'])) as 'UniqueUserName', (case when (coalesce(sum(quota['QuotaAmount']),0) - coalesce(sum(won['Amount']),0)) > 0 then (coalesce(sum(quota['QuotaAmount']),0) - coalesce(sum(won['Amount']),0)) else 0 end) as 'sum_Quota Remaining', sum(won['Amount']) as 'sum_Won', sum(commit['Amount']) as 'sum_Commit' , sum(bestcase['Amount']) as 'sum_Best Case', sum(pipeline['Amount']) as 'sum_Pipeline' , sum(Forecast['Amount']) as 'sum_Forecast';\",\"groups\":[\"UniqueUserName\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"comparisontable"}},"Compare_Table_UserCount_Left":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Usercount\"]],\"pigql\":\"rightpipe = load \\\"eadx__opportunity1\\\"; rightpipe = filter rightpipe by 'IsClosed' == \\\"false\\\"; rightpipe = filter rightpipe by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};rightpipe = filter rightpipe by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; rightpipe = filter rightpipe by {{cell(step_group35.selection,0, \\\"filter\\\").asObject()}}; rightpipe = filter rightpipe by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};rightpipe = filter rightpipe by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];rightpipe = group rightpipe by 'OwnerId'; rightpipe = foreach rightpipe generate sum('Amount') as 'sum_pipe_right','OwnerId' as 'OwnerId';  u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, rightpipe by 'OwnerId';  c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', rightpipe['OwnerId'] as 'OwnerId', coalesce(sum(rightpipe['sum_pipe_right']),0) as 'sum_pipe_right';Total_Sum = group c by 'Name'; Total_Sum = foreach Total_Sum generate coalesce(sum('sum_pipe_right'),0) as 'sum_TeamTotal', 'Name' as 'Name';Gobi = filter Total_Sum by 'sum_TeamTotal' !=0; Gobi = foreach Gobi generate 'Name' as 'Name', count() as 'count'; RR = group Gobi by all;RR = foreach RR generate sum('count') as 'sum_Usercount';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"dropdown_opportunity_type":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Type\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"color_closed_won":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"finalcf\",null]],\"pigql\":\"a = load \\\"eadx__opportunity1\\\"; a = group a by all; a = foreach a generate (case when {{coalesce(column(CloseWon_StockTicker.result, [\\\"sum_Stock\\\"]), 0).asObject()}} > 0 then \\\"#067D1E\\\" when {{coalesce(column(CloseWon_StockTicker.result, [\\\"sum_Stock\\\"]), 0).asObject()}} < 0 then \\\"#E3193B\\\" else \\\"#192B61\\\" end) as 'RAG'; a = group a by 'RAG'; a = foreach a generate 'RAG' as 'RAG', 0.95 as 'sum_finalcf';\",\"groups\":[\"RAG\"],\"order\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true},"QuotaAttainment_Hidden2":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"quota_attainment\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount'; quota = load \\\"eadx__quota1\\\"; quota = load \\\"eadx__quota1\\\";quota = filter quota by{{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}};quota = filter quota by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];  quota = group quota by 'User.Id'; quota = foreach quota generate 'User.Id' as 'User.Id', coalesce(sum('QuotaAmount'),0) as 'sum_QuotaAmount'; u = load \\\"eadx__user1\\\"; u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId' full, quota by 'User.Id'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', coalesce(sum(q['sum_Amount']),0) as 'sum_Amount', coalesce(sum(quota['sum_QuotaAmount']),0) as 'sum_QuotaAmount',unique(u['Name']) as 'count'; RR = group c by all; RR = foreach RR generate coalesce((sum('sum_Amount') / sum('sum_QuotaAmount')),0) as 'sum_QuotaAmount', sum('count') as 'count'; RR = foreach RR generate (case when sum('count') == 1 then sum('sum_QuotaAmount') else {{coalesce(column(QuotaAttainment_Hidden_Total.result,[\\\"sum_quota_attainment\\\"]),0).asObject()}} end) as 'sum_quota_attainment';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_quota_attainment'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_quota_attainment') as 'sum_quota_attainment'; \",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"QuotaAttainment_StockTicker":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"quota_attainment\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount';  quota = load \\\"eadx__quota1\\\";quota = filter quota by{{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}};  quota = filter quota by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; quota = group quota by 'User.Id'; quota = foreach quota generate 'User.Id' as 'User.Id', sum('QuotaAmount') as 'sum_QuotaAmount';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, q by 'OwnerId' full,quota by 'User.Id'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', (sum(q['sum_Amount']) /sum(quota['sum_QuotaAmount'])) as 'sum_QuotaAmount', unique(u['Name']) as 'count';  Total_Sum = group c by all; Total_Sum = foreach Total_Sum generate (sum('sum_QuotaAmount') - {{coalesce(column(QuotaAttainment_Hidden_Total.result,[\\\"sum_quota_attainment\\\"]),0).asObject()}}) /  {{coalesce(column(QuotaAttainment_Hidden_Total.result,[\\\"sum_quota_attainment\\\"]),0).asObject()}} as 'sum_TeamAvg', sum('count') as 'count'; Total_Sum = foreach Total_Sum generate (case when sum('count') == 1 then sum('sum_TeamAvg') else 0 end) as 'sum_quota_attainment'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_quota_attainment'; final = union Total_Sum, fake; final = group final by all; final = foreach final generate sum('sum_quota_attainment') as 'sum_quota_attainment'; \",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Leaderboard":{"broadcastFacet":true,"datasets":[{"name":"user1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"{{cell(step_groupABS_AVG1.selection, 0, \\\"top\\\").asObject()}}\",\"{{cell(step_group35.selection, 0, \\\"left\\\").asObject()}}\",null],[\"{{cell(step_groupABS_AVG1.selection, 0, \\\"top\\\").asObject()}}\",\"{{cell(step_group35_1.selection, 0, \\\"right\\\").asObject()}}\",null]],\"pigql\":\"a = load \\\"eadx__opportunity1\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter a by 'IsWon' == \\\"true\\\"; r = filter a by 'IsClosed' == \\\"true\\\"; Avg_Day = filter a by 'IsClosed' == \\\"true\\\" && 'IsWon' == \\\"true\\\"; OpptyCount_Left = filter a by  {{cell(step_group35.selection,0, \\\"filter\\\").asObject()}}; OpptyCount_Right = filter a by {{cell(step_group35_1.selection,0, \\\"filter\\\").asObject()}}; AvgDeal_Left = filter a by  {{cell(step_group35.selection,0, \\\"filter\\\").asObject()}}; AvgDeal_Right = filter a by {{cell(step_group35_1.selection,0, \\\"filter\\\").asObject()}}; leftpipe = filter a by  {{cell(step_group35.selection,0, \\\"filter\\\").asObject()}}; rightpipe = filter a by {{cell(step_group35_1.selection,0, \\\"filter\\\").asObject()}}; Activities = load \\\"eadx__activity1\\\"; Activities = filter Activities by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; Activities = filter Activities by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; Activities = filter Activities by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Activities = filter Activities by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Activities = filter Activities by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; Activities = group Activities by ('OwnerId', 'IsClosed'); Activities = foreach Activities generate 'OwnerId' as 'OwnerId', first('Owner.UniqueUserName') as 'Owner.UniqueUserName', 'IsClosed' as 'IsClosed', count() as 'count'; Completed_Activities = filter Activities by 'IsClosed' == \\\"true\\\"; Percentage = group Completed_Activities by 'OwnerId' full, Activities by 'OwnerId'; Percentage = foreach Percentage generate Activities['OwnerId'] as 'OwnerId', first(Activities['Owner.UniqueUserName']) as 'Owner.UniqueUserName', coalesce( sum(Completed_Activities['count']) / sum(Activities['count']), 0) as 'CompletedRate'; Percentage_Left = group Completed_Activities by 'OwnerId' full, Activities by 'OwnerId'; Percentage_Left = foreach Percentage_Left generate Activities['OwnerId'] as 'OwnerId', first(Activities['Owner.UniqueUserName']) as 'Owner.UniqueUserName', coalesce( sum(Completed_Activities['count']) / sum(Activities['count']), 0) as 'CompletedRate_Left'; quota = load \\\"eadx__quota1\\\"; quota = filter quota by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; u = load \\\"eadx__user1\\\"; u = filter u by 'IsActive' == \\\"true\\\"; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, OpptyCount_Left by 'OwnerId' full, OpptyCount_Right by 'OwnerId' full, AvgDeal_Right by 'OwnerId' full, AvgDeal_Left by 'OwnerId' full ,q by 'OwnerId' full, r by 'OwnerId' full, quota by 'User.Id' full, Avg_Day by 'OwnerId' full, leftpipe by 'OwnerId' full, rightpipe by 'OwnerId' full, Percentage by 'OwnerId' full, Percentage_Left by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', coalesce(first(u['UniqueUserName']), first(q['Owner.UniqueUserName']), first(AvgDeal_Left['Owner.UniqueUserName']),  first(AvgDeal_Right['Owner.UniqueUserName']), first(OpptyCount_Right['Owner.UniqueUserName']), first(OpptyCount_Left['Owner.UniqueUserName']), first(r['Owner.UniqueUserName']), first(quota['User.UniqueUserName']), first(Avg_Day['Owner.UniqueUserName']),first(Percentage['Owner.UniqueUserName']), first(Percentage_Left['Owner.UniqueUserName'])) as 'UniqueUserName', coalesce(sum(q['Amount']),0) as 'sum_Amount',  (coalesce(sum(AvgDeal_Left['Amount']),0) / coalesce(count(OpptyCount_Left),0))  as 'sum_left_DealAmount', (coalesce(sum(AvgDeal_Right['Amount']),0) / coalesce(count(OpptyCount_Right),0)) as 'sum_right_DealAmount',coalesce(count(OpptyCount_Left),0) as 'sum_left_count',coalesce(count(OpptyCount_Right),0) as 'sum_right_count',coalesce(sum(leftpipe['Amount']),0) as 'sum_pipe',coalesce(sum(rightpipe['Amount']),0) as 'sum_pipe_right',coalesce((sum(Avg_Day['CloseDate_day_epoch']) - sum(Avg_Day['CreatedDate_day_epoch']))/count(Avg_Day),0) as 'sum_DaysOpen', coalesce(sum(q['Amount']) / sum(r['Amount']),0) as 'sum_win_rate',coalesce(sum(Percentage_Left['CompletedRate_Left']),0) as 'sum_LeftActivity',coalesce(sum(Percentage['CompletedRate']),0) as 'sum_RightActivity',  coalesce(sum(q['Amount']) / sum(quota['QuotaAmount']),0) as 'sum_QuotaAmount',(coalesce((sum(q['Amount']) - {{coalesce(column(Close_Won_Hidden.result,[\\\"sum_TeamAvg\\\"]),0).asObject()}}) / {{coalesce(column(Close_Won_Hidden.result,[\\\"sum_TeamAvg\\\"]),0).asObject()}},0) * 100) as 'sum_amountAVG',(coalesce((count(OpptyCount_Left) - {{coalesce(column(OpptyCount_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}}) / {{coalesce(column(OpptyCount_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}},0) * 100) as 'sum_left_countAVG',(coalesce((count(OpptyCount_Right) - {{coalesce(column(OpptyCount_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}}) / {{coalesce(column(OpptyCount_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}},0) * 100) as 'sum_right_countAVG',(((coalesce(sum(AvgDeal_Left['Amount']),0) / coalesce(count(OpptyCount_Left),0)) - {{coalesce(column(AVGDEALSIZE_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}}) / {{coalesce(column(AVGDEALSIZE_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}} * 100) as 'sum_DealAVG_Left', (((coalesce(sum(AvgDeal_Right['Amount']),0) / coalesce(count(OpptyCount_Right),0)) - {{coalesce(column(AVGDEALSIZE_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}}) / {{coalesce(column(AVGDEALSIZE_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}} * 100) as 'sum_DealAVG_Right',(coalesce((sum(leftpipe['Amount']) - {{coalesce(column(Compare_Table_TeamAvg_Left.result,[\\\"sum_pipe_right\\\"]),0).asObject()}}) / {{coalesce(column(Compare_Table_TeamAvg_Left.result,[\\\"sum_pipe_right\\\"]),0).asObject()}},0) * 100) as 'sum_AVGLeft',(coalesce((sum(rightpipe['Amount']) - {{coalesce(column(Compare_Table_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}}) / {{coalesce(column(Compare_Table_TeamAvg_Right.result,[\\\"sum_pipe_right\\\"]),0).asObject()}},0) * 100) as 'sum_AVGRight',(coalesce((coalesce((sum(Avg_Day['CloseDate_day_epoch']) - sum(Avg_Day['CreatedDate_day_epoch']))/count(Avg_Day),0) - {{coalesce(column(AvgSalesCycle_Hidden_CW_Count.result,[\\\"avg_sales_cycle\\\"]),0).asObject()}}) / {{coalesce(column(AvgSalesCycle_Hidden_CW_Count.result,[\\\"avg_sales_cycle\\\"]),0).asObject()}},0) * 100 ) as 'sum_daysAVG',coalesce(((sum(q['Amount']) / sum(r['Amount'])) - {{coalesce(column(WinRate_Hidden_TeamTotal.result,[\\\"sum_win_rate\\\"]),0).asObject()}}) / {{coalesce(column(WinRate_Hidden_TeamTotal.result,[\\\"sum_win_rate\\\"]),0).asObject()}} ,0) as 'sum_win_rateAVG', coalesce(((sum(q['Amount']) / sum(quota['QuotaAmount'])) - {{coalesce(column(QuotaAttainment_Hidden_Total.result,[\\\"sum_quota_attainment\\\"]),0).asObject()}}) / {{coalesce(column(QuotaAttainment_Hidden_Total.result,[\\\"sum_quota_attainment\\\"]),0).asObject()}},0) as 'sum_QuotaAmountAvg',coalesce((sum(Percentage_Left['CompletedRate_Left']) - {{coalesce(column(Activity_TeamAvg_Hidden.result,[\\\"sum_CompletedRate\\\"]),0).asObject()}}) / {{coalesce(column(Activity_TeamAvg_Hidden.result,[\\\"sum_CompletedRate\\\"]),0).asObject()}},0) as 'sum_LeftActivityAvg', coalesce((sum(Percentage['CompletedRate']) - {{coalesce(column(Activity_TeamAvg_Hidden.result,[\\\"sum_CompletedRate\\\"]),0).asObject()}}) / {{coalesce(column(Activity_TeamAvg_Hidden.result,[\\\"sum_CompletedRate\\\"]),0).asObject()}},0) as 'sum_RightActivityAvg'; c = foreach c generate 'UniqueUserName' as 'UniqueUserName', {{cell(step_group35.selection,0, \\\"first_f\\\").asObject()}}, {{cell(step_group35_1.selection,0, \\\"first_f\\\").asObject()}}; c = order c by ('{{cell(step_groupABS_AVG1.selection,0, \\\"top\\\").asObject()}}_{{cell(step_group35.selection,0, \\\"left\\\").asObject()}}' desc nulls last, '{{cell(step_groupABS_AVG1.selection,0, \\\"top\\\").asObject()}}_{{cell(step_group35_1.selection,0, \\\"right\\\").asObject()}}' desc nulls last);\",\"groups\":[\"UniqueUserName\"],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"User_Count":{"broadcastFacet":true,"datasets":[{"name":"user1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"u = load \\\"eadx__user1\\\"; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = group u by all; u = foreach u generate count() as 'count';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Rank_GROUP_Quota":{"broadcastFacet":true,"datasets":[{"name":"quota1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId';q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount';quota = load \\\"eadx__quota1\\\";  quota = filter quota by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"User.UniqueUserName\\\")}}; quota = filter quota by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; quota = group quota by 'User.Id';quota = foreach quota generate 'User.Id' as 'User.Id', coalesce(sum('QuotaAmount'),0) as 'sum_QuotaAmount';u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId', quota by 'User.Id'; c = foreach c generate u['Id'] as 'Id', first(u['UniqueUserName']) as 'UniqueUserName', q['OwnerId'] as 'OwnerId', coalesce((sum(q['sum_Amount']) /sum(quota['sum_QuotaAmount']) * 100),0) as 'sum_QuotaAmount';RR = group c by 'OwnerId'; RR = foreach RR generate first('UniqueUserName') as 'UniqueUserName', 'OwnerId' as 'OwnerId', coalesce(sum('sum_QuotaAmount'),0) as 'sum_QuotaAmount', (case when  {{coalesce(column(Rank_CloseWon_Count.result,[\\\"sum_Gobi\\\"]),0).asObject()}} == 1 then rank() over([..] partition by all order by sum('sum_QuotaAmount') desc ) else 1 end) as 'sum_RAAank'; RRR = filter RR by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};RRRR = filter RRR by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};\",\"measures\":[[\"sum\",\"RAAank\"]],\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"AvgSalesCycle_Hidden_Total":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"DaysOpen\"]],\"pigql\":\"Sales_Cycle = load \\\"eadx__opportunity1\\\"; Sales_Cycle = filter Sales_Cycle by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; Sales_Cycle = filter Sales_Cycle by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; Sales_Cycle = filter Sales_Cycle by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; Sales_Cycle = filter Sales_Cycle by 'IsClosed'== \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'IsWon' == \\\"true\\\" ;Sales_Cycle = filter Sales_Cycle by 'Type' in all ;Avg_Day = group Sales_Cycle by ('OwnerId');Avg_Day = foreach Avg_Day generate 'OwnerId' as 'OwnerId', coalesce((sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch'))/count(),0) as 'avg_Days_Open';u = load \\\"eadx__user1\\\";u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};c = group u by 'Id' full, Avg_Day by 'OwnerId';c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', sum(Avg_Day['avg_Days_Open']) as 'avg_DaysOpen';Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate sum('avg_DaysOpen') as 'sum_DaysOpen';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"WinRate_StockTicker":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"win_rate\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};q = filter q by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount'; r = load \\\"eadx__opportunity1\\\"; r = filter r by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};r = filter r by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; r = filter r by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; r = filter r by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; r = filter r by 'IsClosed' == \\\"true\\\"; r = group r by 'OwnerId'; r = foreach r generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Lost';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId'full,r by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', sum(q['sum_Amount']) /sum(r['sum_Lost']) as 'sum_WinRate', unique(u['Name']) as 'count';  Total_Sum = group c by all; Total_Sum = foreach Total_Sum generate round((sum('sum_WinRate') - {{coalesce(column(WinRate_Hidden_TeamTotal.result,[\\\"sum_win_rate\\\"]),0).asObject()}}) / {{coalesce(column(WinRate_Hidden_TeamTotal.result,[\\\"sum_win_rate\\\"]),0).asObject()}},2) as 'sum_TeamAvg', sum('count') as 'count'; Total_Sum = foreach Total_Sum generate (case when sum('count') == 1 then sum('sum_TeamAvg') else 0 end) as 'sum_win_rate'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_win_rate'; final = union Total_Sum, fake; final = group final by all; final = foreach final generate sum('sum_win_rate') as 'sum_win_rate';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"WinRate_Hidden_TeamTotal":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"win_rate\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount'; r = load \\\"eadx__opportunity1\\\"; r = filter r by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};r = filter r by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; r = filter r by 'IsClosed' == \\\"true\\\"; r = group r by 'OwnerId'; r = foreach r generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Lost';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId',r by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', sum(q['sum_Amount']) as 'sum_Amount', sum(r['sum_Lost']) as 'sum_Lost';   RR = group c by all; RR = foreach RR generate sum('sum_Amount') / sum('sum_Lost')  as 'sum_win_rate'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_win_rate'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_win_rate') as 'sum_win_rate';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"color_winRate":{"broadcastFacet":false,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"finalcf\",null]],\"pigql\":\"a = load \\\"eadx__opportunity1\\\"; a = group a by all; a = foreach a generate (case when {{coalesce(column(WinRate_StockTicker.result, [\\\"sum_win_rate\\\"]), 0).asObject()}} > 0 then \\\"#067D1E\\\" when {{coalesce(column(WinRate_StockTicker.result, [\\\"sum_win_rate\\\"]), 0).asObject()}} < 0 then \\\"#E3193B\\\" else \\\"#192B61\\\" end) as 'RAG'; a = group a by 'RAG'; a = foreach a generate 'RAG' as 'RAG', 0.95 as 'sum_finalcf';\",\"groups\":[\"RAG\"],\"order\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true},"time_dropdown":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"single","start":"{\"display\":[\"This Quarter\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"This Month\",\"Current\":[[\"month\",0],[\"month\",0]],\"Current_pigql\":\"\\\"current month\\\"..\\\"current month\\\"\",\"Next\":[[\"month\",1],[\"month\",1]],\"Prior_pigql\":\"\\\"current month - 1 year\\\"..\\\"current month - 1 year\\\"\"}","{\"display\":\"This Quarter\",\"Current\":[[\"quarter\",0],[\"quarter\",0]],\"Current_pigql\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"Next\":[[\"quarter\",1],[\"quarter\",1]],\"Prior_pigql\":\"\\\"current quarter - 1 year\\\"..\\\"current quarter - 1 year\\\"\"}","{\"display\":\"This Year\",\"Current\":[[\"year\",0],[\"year\",0]],\"Current_pigql\":\"\\\"current year\\\"..\\\"current year\\\"\",\"Next\":[[\"year\",1],[\"year\",1]],\"Prior_pigql\":\"\\\"current year - 1 year\\\"..\\\"current year - 1 year\\\"\"}","{\"display\":\"Last Year\",\"Current\":[[\"year\",-1],[\"year\",-1]],\"Current_pigql\":\"\\\"current year - 1 year\\\"..\\\"current year - 1 year\\\"\",\"Next\":[[\"year\",0],[\"year\",0]],\"Prior_pigql\":\"\\\"current year - 2 year\\\"..\\\"current year - 2 year\\\"\"}","{\"display\":\"Last Quarter\",\"Current\":[[\"quarter\",-1],[\"quarter\",-1]],\"Current_pigql\":\"\\\"current quarter - 1 quarter\\\"..\\\"current quarter - 1 quarter\\\"\",\"Next\":[[\"quarter\",0],[\"quarter\",0]],\"Prior_pigql\":\"\\\"current quarter - 2 quarter\\\"..\\\"current quarter - 2 quarter\\\"\"}","{\"display\":\"Last Month\",\"Current\":[[\"month\",-1],[\"month\",-1]],\"Current_pigql\":\"\\\"current month - 1 month\\\"..\\\"current month - 1 month\\\"\",\"Next\":[[\"month\",0],[\"month\",0]],\"Prior_pigql\":\"\\\"current month - 2 month\\\"..\\\"current month - 2 month\\\"\"}"]},"Rank_CloseWon_Count":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId';q = foreach q generate 'OwnerId' as 'OwnerId', coalesce(sum('Amount'),0) as 'sum_Amount';u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['UniqueUserName']) as 'UniqueUserName', q['OwnerId'] as 'OwnerId', coalesce(sum(q['sum_Amount']),0) as 'sum_Amount';RR = group c by 'OwnerId'; RR = foreach RR generate first('UniqueUserName') as 'UniqueUserName', 'OwnerId' as 'OwnerId', coalesce(sum('sum_Amount'),0) as 'sum_Amount', rank() over([..] partition by all order by sum('sum_Amount') desc ) as 'sum_RAAank';RRR = filter RR by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; RRRR = filter RRR by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};Gobi = foreach RRRR generate 'UniqueUserName', 'OwnerId', 'sum_Amount', 'sum_RAAank', count() as 'count';Gobi = group Gobi by all; Gobi =  foreach Gobi generate  sum('count') as 'sum_Gobi';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_Gobi'; final = union Gobi, fake; final = group final by all; final = foreach final generate sum('sum_Gobi') as 'sum_Gobi';\",\"measures\":[[\"sum\",\"Gobi\"]],\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"CloseWon_StockTicker":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Stock\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}];  q = filter q by 'IsWon' == \\\"true\\\";  q = group q by 'OwnerId';  q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount';  u = load \\\"eadx__user1\\\";   u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};  c = group u by 'Id' full, q by 'OwnerId';  c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId',sum(q['sum_Amount']) as 'sum_Amount', unique(u['Name']) as 'count';Total_Sum = group c by all;Total_Sum = foreach Total_Sum generate (sum('sum_Amount') - {{coalesce(column(Close_Won_Hidden.result,[\\\"sum_TeamAvg\\\"]),0).asObject()}}) / {{coalesce(column(Close_Won_Hidden.result,[\\\"sum_TeamAvg\\\"]),0).asObject()}}  as 'sum_TeamAvg',  sum('count') as 'count'; Total_Sum = foreach Total_Sum generate (case when sum('count') == 1 then sum('sum_TeamAvg') else 0 end) as 'sum_Stock'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_Stock'; final = union Total_Sum, fake; final = group final by all; final = foreach final generate sum('sum_Stock') as 'sum_Stock';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"WinRate_Hidden2":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"win_rate\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\";q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount'; r = load \\\"eadx__opportunity1\\\"; r = filter r by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};r = filter r by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};r = filter r by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; r = filter r by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};r = filter r by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};r = filter r by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; r = filter r by 'IsClosed' == \\\"true\\\"; r = group r by 'OwnerId'; r = foreach r generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Lost';  u = load \\\"eadx__user1\\\"; u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; c = group u by 'Id' full, q by 'OwnerId' full,r by 'OwnerId'; c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', sum(q['sum_Amount']) as 'sum_Amount', sum(r['sum_Lost']) as 'sum_Lost' , unique(u['Name']) as 'count';   RR = group c by all; RR = foreach RR generate sum('sum_Amount') / sum('sum_Lost')  as 'sum_win_rate', sum('count') as 'count'; RR = foreach RR generate (case when sum('count') == 1 then sum('sum_win_rate') else {{coalesce(column(WinRate_Hidden2_Team_Total.result,[\\\"sum_win_rate\\\"]),0).asObject()}} end) as 'sum_win_rate'; fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_win_rate'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_win_rate') as 'sum_win_rate';\",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Close_Won_Hidden2":{"broadcastFacet":true,"datasets":[{"name":"opportunity1","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Change\"]],\"pigql\":\"q = load \\\"eadx__opportunity1\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}};q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}};  q = filter q by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};  q = filter q by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"Owner.UniqueUserName\\\")}};q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"Current_pigql\\\").asObject()}}]; q = filter q by 'IsWon' == \\\"true\\\"; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', sum('Amount') as 'sum_Amount'; u = load \\\"eadx__user1\\\";  u = filter u by {{column(Id_1.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};u = filter u by {{column(Leaderboard.selection, [\\\"UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}}; u = filter u by {{column(Id_2.selection, [\\\"Owner.UniqueUserName\\\"]).asEquality(\\\"UniqueUserName\\\")}};c = group u by 'Id' full, q by 'OwnerId';c = foreach c generate u['Id'] as 'Id', first(u['Name']) as 'Name', q['OwnerId'] as 'OwnerId', sum(q['sum_Amount']) as 'sum_Amount', unique(u['Name']) as 'count'; RR = group c by all; RR = foreach RR generate  sum('sum_Amount') as 'sum_Change',  sum('count') as 'count'; RR = foreach RR generate (case when sum('count') == 1 then sum('sum_Change') else {{coalesce(column(Close_Won_Hidden_Total.result,[\\\"sum_TeamTotal\\\"]),0).asObject()}} end) as 'sum_Change';fake= load \\\"eadx__opportunity1\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_Change'; final = union RR, fake; final = group final by all; final = foreach final generate sum('sum_Change') as 'sum_Change'; \",\"groups\":[],\"filters\":[]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"number_12":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_RAAank","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Rank_WinRate","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"container_19":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"number_11":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_RAAank","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Rank_GROUP_Quota","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"container_18":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"number_10":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_RAAank","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Rank_CloseWon","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"container_17":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"fitwidth"},"type":"container"},"container_16":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"text_18":{"parameters":{"content":{"displayTemplate":""},"fontSize":20,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"text_17":{"parameters":{"content":{"displayTemplate":"team members"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#A3B8CC"},"type":"text"},"container_15":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_14":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_13":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_19":{"parameters":{"content":{"displayTemplate":"Win Rate"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_14":{"parameters":{"content":{"displayTemplate":"OPPORTUNITY DISCOVERY"},"fontSize":12,"showActionMenu":true,"textAlignment":"right","textColor":"#5C7A99"},"type":"text"},"text_13":{"parameters":{"content":{"displayTemplate":"Rank out of"},"fontSize":12,"showActionMenu":true,"textAlignment":"right","textColor":"#FFFFFF"},"type":"text"},"number_19":{"parameters":{"compact":true,"exploreLink":false,"fontSize":32,"measureField":"sum_win_rate","numberColor":"#FFFFFF","numberSize":18,"showActionMenu":true,"step":"WinRate_Hidden2","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"Win Rate","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"text_16":{"parameters":{"content":{"displayTemplate":"Quota Attainment"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"link_10":{"parameters":{"destination":"0FKB0000000DHUdOAO","destinationType":"dashboard","fontSize":12,"includeState":false,"text":"","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"number_18":{"parameters":{"compact":false,"exploreLink":false,"fontSize":18,"measureField":"sum_StockAvg","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"AVGDays_StockTicker","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"","titleColor":"#335779","titleSize":14},"type":"number"},"text_15":{"parameters":{"content":{"displayTemplate":"Closed Won"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#F2F6FA"},"type":"text"},"number_17":{"parameters":{"compact":true,"exploreLink":false,"fontSize":18,"measureField":"sum_Stock","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"CloseWon_StockTicker","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"","titleColor":"#335779","titleSize":14},"type":"number"},"text_10":{"parameters":{"content":{"displayTemplate":"Quota Attainment"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"number_16":{"parameters":{"compact":false,"exploreLink":false,"fontSize":18,"measureField":"sum_win_rate","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"WinRate_StockTicker","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"","titleColor":"#335779","titleSize":12},"type":"number"},"number_15":{"parameters":{"compact":false,"exploreLink":true,"measureField":"count","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"User_Count","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"text_12":{"parameters":{"content":{"displayTemplate":"Avg Sales Cycle (days)"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"number_14":{"parameters":{"compact":true,"exploreLink":false,"fontSize":32,"measureField":"sum_quota_attainment","numberColor":"#FFFFFF","numberSize":18,"showActionMenu":true,"step":"QuotaAttainment_Hidden2","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"Quota Attainment","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"text_11":{"parameters":{"content":{"displayTemplate":"Win Rate"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"number_13":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_RAAank","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Rank_AvgDays","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"chart_1_mobile":{"parameters":{"autoFitMode":"none","totalValue":"computeTotal","showValues":true,"legend":{"showHeader":false,"show":false,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"visualizationType":"pyramid","exploreLink":false,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"totalLabel":"","showMeasure":false,"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"title":"","customDomain":{"showDomain":false}},"step":"Leaderboard","theme":"dark","rightColor":"rgb(38, 171, 164)","leftColor":"rgb(38, 171, 164)","dimensionAxis":{"customSize":"auto","showAxis":true}},"type":"chart"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_3":{"parameters":{"content":{"displayTemplate":"Performance vs Team Avg"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"rgb(255, 255, 255)"},"type":"text"},"container_6":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_23":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"fitwidth","image":{"name":"SalesWaveLogo1","namespace":"eadx"}},"type":"container"},"container_22":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_5":{"parameters":{"content":{"displayTemplate":"Quota Attainment"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"container_21":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_4":{"parameters":{"content":{"displayTemplate":"Closed Won"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"container_20":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_7":{"parameters":{"content":{"displayTemplate":"Win Rate"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_6":{"parameters":{"content":{"displayTemplate":"Avg. Sales Cycle (days)"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_9":{"parameters":{"content":{"displayTemplate":"Closed Won"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_8":{"parameters":{"content":{"displayTemplate":"Metrics are compared to team average"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#A3B8CC"},"type":"text"},"number_23":{"parameters":{"compact":true,"exploreLink":false,"fontSize":32,"measureField":"sum_Change","numberColor":"#FFFFFF","numberSize":18,"showActionMenu":true,"step":"Close_Won_Hidden2","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"Closed Won","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"comparetable_1":{"parameters":{"columnProperties":{},"columns":[],"customBulkActions":[],"exploreLink":true,"mode":"fittocontainer","showActionMenu":true,"step":"Team_Compare_Table","totals":true},"type":"table"},"text_1":{"parameters":{"content":{"displayTemplate":"Team Rank"},"fontSize":16,"showActionMenu":true,"textAlignment":"center","textColor":"rgb(255, 255, 255)"},"type":"text"},"dimfilter_9":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"","showActionMenu":false,"step":"step_group35_1"},"type":"listselector"},"dimfilter_3":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"","showActionMenu":false,"step":"time_dropdown","title":"Time Period"},"type":"listselector"},"dimfilter_5":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"","showActionMenu":false,"step":"step_group35"},"type":"listselector"},"buttongroup_2":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"","selectedTab":{"backgroundColor":"#677A97","borderEdges":[],"textColor":"#FFFFFF"},"showActionMenu":true,"step":"step_groupABS_AVG1","textColor":"#5C7A99"},"type":"pillbox"},"number_27":{"parameters":{"compact":false,"exploreLink":false,"fontSize":32,"measureField":"sum_Days_Open","numberColor":"#FFFFFF","numberSize":18,"showActionMenu":true,"step":"AvgSalesCycle_Hidden2","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"Avg Cycle (Days)","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"number_5":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"sum_RAAank","numberColor":"#A3B8CC","numberSize":12,"showActionMenu":true,"step":"Rank_WinRate","textAlignment":"right","textColor":"rgb(255, 255, 255)","title":"Team Rank","titleColor":"#A3B8CC","titleSize":12},"type":"number"},"number_4":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"sum_RAAank","numberColor":"#A3B8CC","numberSize":12,"showActionMenu":true,"step":"Rank_AvgDays","textAlignment":"right","textColor":"rgb(255, 255, 255)","title":"Team Rank","titleColor":"#A3B8CC","titleSize":12},"type":"number"},"number_3":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Change","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"Close_Won_Hidden2","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"number_2":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"sum_RAAank","numberColor":"#A3B8CC","numberSize":12,"showActionMenu":true,"step":"Rank_GROUP_Quota","textAlignment":"right","textColor":"rgb(255, 255, 255)","title":"Quota Attainment","titleColor":"#A3B8CC","titleSize":12},"type":"number"},"number_1":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"measureField":"sum_RAAank","numberColor":"#A3B8CC","numberSize":12,"showActionMenu":true,"step":"Rank_CloseWon","textAlignment":"right","textColor":"rgb(255, 255, 255)","title":"Team Rank","titleColor":"#A3B8CC","titleSize":12},"type":"number"},"container_12":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_11":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_10":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"number_30":{"parameters":{"compact":false,"exploreLink":false,"fontSize":18,"measureField":"sum_quota_attainment","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"QuotaAttainment_StockTicker","textAlignment":"left","textColor":"rgb(255, 255, 255)","title":"","titleColor":"#335779","titleSize":14},"type":"number"},"number_9":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_win_rate","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"WinRate_Hidden2","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"number_8":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_Days_Open","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"AvgSalesCycle_Hidden2","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"number_7":{"parameters":{"compact":false,"exploreLink":false,"fontSize":14,"measureField":"count","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"User_Count","textAlignment":"right","textColor":"rgb(255, 255, 255)","title":"Rank out of","titleColor":"#A3B8CC","titleSize":12},"type":"number"},"number_6":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_quota_attainment","numberColor":"#FFFFFF","numberSize":14,"showActionMenu":true,"step":"QuotaAttainment_Hidden2","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16},"type":"number"},"dimfilter_10":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"count","showActionMenu":false,"step":"step_type_of_forecast","title":" Forecast by Closed Won +"},"type":"listselector"},"list_direct_reports":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Id_2","title":"Opportunity Owners"},"type":"listselector"},"list_opportunity_type":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"dropdown_opportunity_type","title":"Opportunity Type"},"type":"listselector"},"text_29":{"parameters":{"content":{"displayTemplate":"BENCHMARK"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"text_28":{"parameters":{"content":{"displayTemplate":"% change based on team average"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#A3B8CC"},"type":"text"},"text_25":{"parameters":{"content":{"displayTemplate":"Team Details"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"rgb(23, 50, 77)"},"type":"text"},"link_3":{"parameters":{"destinationLink":{"name":"About_Wave_for_Sales1","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_4":{"parameters":{"destinationLink":{"name":"Quota_Progress1","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"FORECAST","textAlignment":"center","textColor":"#5C7A99","visualizationType":"hbar"},"type":"link"},"text_24":{"parameters":{"content":{"displayTemplate":"Team Productivity"},"fontSize":24,"showActionMenu":true,"textAlignment":"left","textColor":"rgb(23, 50, 77)"},"type":"text"},"link_1":{"parameters":{"destinationLink":{"name":"Manager_Overview1","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":true,"text":"LEADERBOARD","textAlignment":"center","textColor":"#5C7A99","visualizationType":"hbar"},"type":"link"},"text_27":{"parameters":{"content":{"displayTemplate":"Sales Rep Leaderboard"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"link_2":{"parameters":{"destinationLink":{"name":"Pipeline_Changes1","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"TRENDING","textAlignment":"center","textColor":"#5C7A99","visualizationType":"hbar"},"type":"link"},"text_26":{"parameters":{"content":{"displayTemplate":"Add text."},"fontSize":20,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"text_21":{"parameters":{"content":{"displayTemplate":"Team Details"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"text_20":{"parameters":{"content":{"displayTemplate":"Avg Sales Cycle (days)"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_23":{"parameters":{"content":{"displayTemplate":"Add text."},"fontSize":20,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"text_22":{"parameters":{"content":{"displayTemplate":"Sales Analytics for Managers"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"link_5":{"parameters":{"destinationLink":{"name":"Manager_Activities1","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"ACTIVITIES","textAlignment":"center","textColor":"#5C7A99"},"type":"link"}}}