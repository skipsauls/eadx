{"dataSourceLinks":[{"fields":[{"dataSourceName":"eadx__user","dataSourceNamespace":"eadx","dataSourceType":"saql","fieldName":"UniqueUserName"},{"dataSourceName":"eadx__pipeline_trending","dataSourceNamespace":"eadx","dataSourceType":"saql","fieldName":"Opportunity.Owner.UniqueUserName"}],"label":"UniqueUserName","name":"connection_uniqueusername"},{"fields":[{"dataSourceName":"eadx__pipeline_trending","dataSourceNamespace":"eadx","dataSourceType":"saql","fieldName":"Opportunity.Owner.Role.RoleNames"},{"dataSourceName":"eadx__user","dataSourceNamespace":"eadx","dataSourceType":"saql","fieldName":"Role.RoleNames"}],"label":"Hierarchy","name":"connection_hierarchy"}],"filters":[{"dataset":{"name":"pipeline_trending"},"dependent":false,"fields":["Opportunity.Owner.Role.RoleNames"],"label":"View As","locked":false,"operator":"in"},{"dataset":{"name":"pipeline_trending"},"dependent":false,"fields":["Opportunity.Owner.UniqueUserName"],"label":"Opportunity Owner","locked":false,"operator":"in"},{"dataset":{"name":"pipeline_trending"},"dependent":false,"fields":["Opportunity.Type"],"label":"Opportunity Type","locked":false,"operator":"in"}],"gridLayouts":[{"maxWidth":1240,"name":"Default","numColumns":48,"pages":[{"label":"Untitled","name":"c631268c-fb18-4551-9996-caa7d1825fc9","navigationHidden":false,"widgets":[{"colspan":4,"column":16,"name":"link_4","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":39,"column":3,"name":"container_2","row":0,"rowspan":6,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderWidth":1}},{"colspan":11,"column":36,"name":"number_1","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":18,"name":"listselector_2","row":24,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#091A3E","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":4,"name":"link_2","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#FFFFFF","borderEdges":[],"borderWidth":2}},{"colspan":46,"column":1,"name":"chart_1","row":29,"rowspan":30,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#FFFFFF","borderEdges":[],"borderWidth":8}},{"colspan":11,"column":1,"name":"number_2","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":18,"name":"number_3","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(9, 26, 62, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":28,"name":"number_4","row":16,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderEdges":[],"borderRadius":16,"borderWidth":1}},{"colspan":48,"column":0,"name":"container_1","row":62,"rowspan":46,"widgetStyle":{"borderColor":"rgb(230, 236, 242)","borderEdges":[],"borderRadius":0,"borderWidth":4}},{"colspan":46,"column":1,"name":"table_1","row":69,"rowspan":37,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["left","right"],"borderWidth":4}},{"colspan":13,"column":3,"name":"text_3","row":64,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":0,"name":"container_7","row":21,"rowspan":8,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#F2F6FA","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":48,"column":0,"name":"container_8","row":29,"rowspan":33,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":5,"column":42,"name":"listselector_5","row":64,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":34,"name":"text_5","row":65,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":4}},{"colspan":48,"column":0,"name":"container_10","row":13,"rowspan":8,"widgetStyle":{"backgroundColor":"rgb(5, 16, 39)","borderColor":"rgba(51, 87, 121, 0.3)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":12,"name":"link_5","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_9","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#44A2F5","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":3,"column":0,"name":"container_16","row":0,"rowspan":6,"widgetStyle":{"borderEdges":["bottom"]}},{"colspan":2,"column":1,"name":"image_1","row":64,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":3,"column":0,"name":"link_1","row":1,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":20,"name":"link_6","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":6,"column":42,"name":"container_24","row":0,"rowspan":6,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"link_7","row":1,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"filterpanel_1","row":6,"rowspan":7,"widgetStyle":{"backgroundColor":"#F2F6FA","borderColor":"#F2F6FA","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":14,"column":1,"name":"dateselector_1","row":24,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":15,"column":1,"name":"text_6","row":22,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":18,"name":"text_11","row":22,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":46,"column":1,"name":"text_12","row":59,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#E6ECF2","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original","gutterColor":"#E6ECF2"},"version":1.0},{"name":"Phone","numColumns":24,"pages":[{"label":"Untitled","name":"c631268c-fb18-4551-9996-caa7d1825fc9","navigationHidden":false,"widgets":[{"colspan":11,"column":1,"name":"number_3","row":20,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":15,"name":"number_4","row":22,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":8,"borderWidth":1}},{"colspan":13,"column":0,"name":"text_3","row":58,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":[]}},{"colspan":24,"column":0,"name":"table_1","row":62,"rowspan":33,"widgetStyle":{"borderColor":"#A3B8CC","borderEdges":[],"borderWidth":4}},{"colspan":24,"column":0,"name":"container_1","row":58,"rowspan":37,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#F2F6FA","borderEdges":["all"],"borderRadius":4,"borderWidth":8}},{"colspan":12,"column":12,"name":"number_5","row":52,"rowspan":6,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#335779","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":0,"name":"number_6","row":52,"rowspan":6,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#335779","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":13,"name":"listselector_6","row":58,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#A3B8CC","borderEdges":[],"borderRadius":0,"borderWidth":2}},{"colspan":24,"column":0,"name":"chart_1","row":27,"rowspan":21,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":24,"column":0,"name":"container_14","row":10,"rowspan":9,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#335779","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":24,"column":0,"name":"container_17","row":0,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":0,"name":"image_2","row":0,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":21,"column":3,"name":"text_10","row":0,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":24,"column":0,"name":"filterpanel_1","row":4,"rowspan":6,"widgetStyle":{"backgroundColor":"#F2F6FA","borderColor":"#C5D3E0","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":13,"name":"dateselector_1","row":11,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":12,"column":1,"name":"text_6","row":11,"rowspan":4,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":1,"name":"text_11","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":13,"name":"listselector_2","row":15,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":24,"column":0,"name":"text_12","row":48,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":["maxWidth(599)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#091A3E","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1.0}],"layouts":[],"steps":{"pipeline_change_color":{"broadcastFacet":true,"datasets":[{"name":"pipeline_trending","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"q = load \\\"eadx__pipeline_trending\\\"; q = group q by all; q = foreach q generate {{coalesce(cell(pipeline_change.result, 0, \\\"sum_Amount\\\"),0).asObject()}}  as 'sum_Amount'; q = foreach q generate (case when 'sum_Amount' > 0 then \\\"#067D1E\\\" when 'sum_Amount' < 0 then \\\"#E3193B\\\" else \\\"#192B61\\\" end) as 'color', 'sum_Amount' as 'sum_Amount'; \",\"groups\":[\"color\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true},"pipeline_change":{"broadcastFacet":true,"groups":[],"numbers":["sum_Amount","sum_percent"],"query":"x1 = load \"eadx__pipeline_trending\"; START = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START = filter START by 'Stage.IsClosed' == \"false\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END = filter END by 'Stage.IsClosed' == \"false\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; c = group START by all full, END by all; c = foreach c generate coalesce(sum(END['Amount']), 0) - coalesce(sum(START['Amount']), 0) as 'sum_Amount', coalesce( (coalesce(sum(END['Amount']), 0) - coalesce(sum(START['Amount']), 0)) / coalesce(sum(START['Amount']), 0), 0) as 'sum_percent';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"waterfall_chart":{"broadcastFacet":true,"groups":["Bucket"],"numbers":["sum_Amount"],"query":"x1 = load \"eadx__pipeline_trending\";  START_REAL = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START_REAL = filter START_REAL by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START_REAL = filter START_REAL by 'Stage.IsClosed' == \"false\"; START_REAL = filter START_REAL by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; START_REAL = group START_REAL by all; START_REAL = foreach START_REAL generate \"0_START\" as 'Bucket', sum('Amount') as 'sum_Amount'; START_FAKE = group x1 by all; START_FAKE = foreach START_FAKE generate \"0_START\" as 'Bucket', (count() - count()) as 'sum_Amount'; START = union START_FAKE, START_REAL; START = group START by all; START = foreach START generate last('Bucket') as 'Bucket', last('sum_Amount') as 'sum_Amount'; END_REAL = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END_REAL = filter END_REAL by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END_REAL = filter END_REAL by 'Stage.IsClosed' == \"false\"; END_REAL = filter END_REAL by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END_REAL = group END_REAL by all; END_REAL = foreach END_REAL generate \"9_END\" as 'Bucket', sum('Amount') as 'sum_Amount'; END_FAKE = group x1 by all; END_FAKE = foreach END_FAKE generate \"9_END\" as 'Bucket', (count() - count()) as 'sum_Amount'; END = union END_FAKE, END_REAL; END = group END by all; END = foreach END generate last('Bucket') as 'Bucket', last('sum_Amount') as 'sum_Amount'; upd_start = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Update_ValidFrom\").asString()}}\"]; upd_start = filter upd_start by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter upd_end by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Update_End_ValidTo\").asString()}}\"..]; upd = group upd_start by OpportunityId right, upd_end by OpportunityId; upd = foreach upd generate upd_end.'OpportunityId' as OpportunityId, upd_start.'OpportunityId' is null as 'New', first(upd_start.'Amount') as 'AmountStart', first(upd_start.'Stage.IsClosed') as 'Stage.IsClosedStart', first(upd_start.'Stage.IsWon') as 'Stage.IsWonStart', first(upd_start.'CloseDate_sec_epoch') as 'CloseDateStart', last(upd_end.'Amount') as 'AmountEnd', last(upd_end.'Stage.IsClosed') as 'Stage.IsClosedEnd', last(upd_end.'Stage.IsWon') as 'Stage.IsWonEnd', last(upd_end.'CloseDate_sec_epoch') as 'CloseDateEnd', last(upd_end.'Opportunity.Owner.UniqueUserName') as 'Opportunity.Owner.UniqueUserName', last(upd_end.'Opportunity.Account.Industry') as 'Opportunity.Account.Industry', last(upd_end.'Opportunity.Account.BillingCountry') as 'Opportunity.Account.BillingCountry'; upd_full_closed = foreach upd generate ( case when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"false\" ) then \"8_CLOSED_LOST\" when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"true\" ) then \"7_CLOSED_WON\" else \"OTHER\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; upd_full_closed = filter upd_full_closed by 'Bucket' != \"OTHER\"; upd_full_closed = group upd_full_closed by 'Bucket'; upd_full_closed = foreach upd_full_closed generate 'Bucket', ( case 'Bucket' when \"8_CLOSED_LOST\" then - sum('AmountEnd') when \"7_CLOSED_WON\" then - sum('AmountEnd') end ) as 'sum_Amount'; upd_full_notinperiod = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and not(toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]) ) then \"5_MOVED_OUT\" when ( 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"1_NEW\" when ( not 'New' and 'Stage.IsClosedStart' == \"true\" and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"2_REOPEN\" when ( not 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and (('Stage.IsClosedStart' == \"false\" and not(toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}])) or ('Stage.IsClosedStart' == \"true\")) ) then \"4_MOVED_IN\" else \"OTHER\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; upd_full_notinperiod = filter upd_full_notinperiod by 'Bucket' != \"OTHER\"; upd_full_notinperiod = group upd_full_notinperiod by 'Bucket'; upd_full_notinperiod = foreach upd_full_notinperiod generate 'Bucket', ( case 'Bucket' when \"5_MOVED_OUT\" then - sum('AmountEnd') when \"1_NEW\" then sum('AmountEnd') when \"2_REOPEN\" then sum('AmountEnd') when \"4_MOVED_IN\" then sum('AmountEnd') end ) as 'sum_Amount'; upd_delta = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' > 'AmountEnd' ) then \"6_REDUCE\" when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' < 'AmountEnd' ) then \"3_EXPAND\" else \"OTHER\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; upd_delta = filter upd_delta by 'Bucket' != \"OTHER\"; upd_delta = group upd_delta by 'Bucket'; upd_delta = foreach upd_delta generate 'Bucket', ( case 'Bucket' when \"6_REDUCE\" then sum('AmountEnd') - sum('AmountStart') when \"3_EXPAND\" then sum('AmountEnd') - sum('AmountStart') end ) as 'sum_Amount'; WATERFALL = union START, upd_full_notinperiod, upd_delta, upd_full_closed, END; WATERFALL = order WATERFALL by 'Bucket' asc;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":["Bucket"],"type":"saql","useGlobal":true},"Intermediate":{"broadcastFacet":false,"groups":[],"numbers":[],"query":"q = load \"eadx__pipeline_trending\";q = group q by all;q = foreach q generate case when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} == -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" + \" ago\"when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} < -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\" + \" ago\"  when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} == 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\"+ \" ahead\"when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} > 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\"+ \" ahead\" else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" end  as 'Start_ValidTo', case when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}}) -1 == -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" + \" ago\"when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}}) -1 < -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\" + \" ago\"  when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1 == 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\"+ \" ahead\"when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1 > 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" end  as 'Start_ValidFrom',case when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" + \" ago\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} < -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\" + \" ago\"  when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\"+ \" ahead\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} > 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" end  as 'End_ValidFrom', case when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}}) +1 == -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" + \" ago\"when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}}) +1 < -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\" + \" ago\"  when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1 == 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\"+ \" ahead\"when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1 > 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" end  as 'End_ValidTo', case when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" + \" ago\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} < -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\" + \" ago\"  when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\"+ \" ahead\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} > 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" end  as 'End_ValidFrom1'; final = foreach q generate 'Start_ValidFrom', 'Start_ValidTo', 'End_ValidFrom', 'End_ValidTo', 'Start_ValidTo' + 'End_ValidFrom1' as 'Update_ValidTo', 'Start_ValidFrom' as 'Update_ValidFrom','End_ValidTo' as 'Update_End_ValidTo';","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":false,"visualizationParameters":{"parameters":{"autoFitMode":"none","showValues":true,"bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"showBinLabel":true,"measures":"","showPercentage":true,"showDimensions":true,"showMeasures":true,"customizeTooltip":false,"dimensions":""},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}}},"type":"chart"}},"pipeline_start":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"START = load \"eadx__pipeline_trending\"; START = filter START by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START = filter START by 'Stage.IsClosed' == \"false\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; START = group START by all; START = foreach START generate \"0_START\" as 'Bucket', sum('Amount') as 'sum_Amount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"waterfall_detail":{"broadcastFacet":true,"groups":["Opportunity.Name","Opportunity.Owner.UniqueUserName","Opportunity.ForecastCategoryName","Opportunity.StageName","Opportunity.CloseDate"],"numbers":["sum_Amount"],"query":"x1 = load \"eadx__pipeline_trending\"; x1 = filter x1 by 'Id' in all; START = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START = filter START by 'Stage.IsClosed' == \"false\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; START = foreach START generate \"0_START\" as 'Bucket', 'Amount' as 'Amount', 'OpportunityId' as 'OpportunityId', 'Opportunity.Account.Name' as 'Opportunity.Account.Name', 'Opportunity.Name' as 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName' as 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount' as 'Opportunity.Amount', 'Opportunity.CloseDate' as 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName' as 'Opportunity.ForecastCategoryName', 'Opportunity.StageName' as 'Opportunity.StageName'; END = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END = filter END by 'Stage.IsClosed' == \"false\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END = foreach END generate \"9_END\" as 'Bucket', 'Amount' as 'Amount', 'OpportunityId' as 'OpportunityId', 'Opportunity.Account.Name' as 'Opportunity.Account.Name', 'Opportunity.Name' as 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName' as 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount' as 'Opportunity.Amount', 'Opportunity.CloseDate' as 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName' as 'Opportunity.ForecastCategoryName', 'Opportunity.StageName' as 'Opportunity.StageName'; upd_start = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Update_ValidFrom\").asString()}}\"]; upd_start = filter upd_start by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter upd_end by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Update_End_ValidTo\").asString()}}\"..]; upd = group upd_start by OpportunityId right, upd_end by OpportunityId; upd = foreach upd generate upd_end.'OpportunityId' as 'OpportunityId', upd_start.'OpportunityId' is null as 'New', first(upd_start.'Amount') as 'AmountStart', first(upd_start.'Stage.IsClosed') as 'Stage.IsClosedStart', first(upd_start.'Stage.IsWon') as 'Stage.IsWonStart', first(upd_start.'CloseDate_sec_epoch') as 'CloseDateStart', last(upd_end.'Amount') as 'AmountEnd', last(upd_end.'Stage.IsClosed') as 'Stage.IsClosedEnd', last(upd_end.'Stage.IsWon') as 'Stage.IsWonEnd', last(upd_end.'CloseDate_sec_epoch') as 'CloseDateEnd', last(upd_end.'Opportunity.Account.Name') as 'Opportunity.Account.Name', last(upd_end.'Opportunity.Name') as 'Opportunity.Name', last(upd_end.'Opportunity.Owner.UniqueUserName') as 'Opportunity.Owner.UniqueUserName', last(upd_end.'Opportunity.Amount') as 'Opportunity.Amount', last(upd_end.'Opportunity.CloseDate') as 'Opportunity.CloseDate', last(upd_end.'Opportunity.ForecastCategoryName') as 'Opportunity.ForecastCategoryName', last(upd_end.'Opportunity.StageName') as 'Opportunity.StageName', last(upd_end.'Opportunity.Account.Industry') as 'Opportunity.Account.Industry', last(upd_end.'Opportunity.Account.BillingCountry') as 'Opportunity.Account.BillingCountry'; upd_full_closed = foreach upd generate ( case when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"false\" ) then \"8_CLOSED_LOST\" when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"true\" ) then \"7_CLOSED_WON\" else \"OTHER\" end ) as 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'AmountStart', 'AmountEnd'; upd_full_closed = filter upd_full_closed by 'Bucket' != \"OTHER\"; upd_full_closed = foreach upd_full_closed generate 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', ( case 'Bucket' when \"8_CLOSED_LOST\" then (0 - 'AmountEnd') when \"7_CLOSED_WON\" then (0 - 'AmountEnd') end ) as 'Amount'; upd_full_notinperiod = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and not(toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]) ) then \"5_MOVED_OUT\" when ( 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"1_NEW\" when ( not 'New' and 'Stage.IsClosedStart' == \"true\" and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"2_REOPEN\" when ( not 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and (('Stage.IsClosedStart' == \"false\" and not(toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}])) or ('Stage.IsClosedStart' == \"true\")) ) then \"4_MOVED_IN\" else \"OTHER\" end ) as 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'AmountStart', 'AmountEnd'; upd_full_notinperiod = filter upd_full_notinperiod by 'Bucket' != \"OTHER\"; upd_full_notinperiod = foreach upd_full_notinperiod generate 'Bucket', ( case 'Bucket' when \"5_MOVED_OUT\" then (0 - 'AmountEnd') when \"1_NEW\" then 'AmountEnd' when \"2_REOPEN\" then 'AmountEnd' when \"4_MOVED_IN\" then 'AmountEnd' end ) as 'Amount', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName'; upd_delta = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' > 'AmountEnd' ) then \"6_REDUCE\" when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' < 'AmountEnd' ) then \"3_EXPAND\" else \"OTHER\" end ) as 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'AmountStart', 'AmountEnd'; upd_delta = filter upd_delta by 'Bucket' != \"OTHER\"; upd_delta = foreach upd_delta generate 'Bucket', ( case 'Bucket' when \"6_REDUCE\" then 'AmountEnd' - 'AmountStart' when \"3_EXPAND\" then 'AmountEnd' - 'AmountStart' end ) as 'Amount', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName'; WATERFALL = union START, upd_full_notinperiod, upd_delta, upd_full_closed, END; WATERFALL = filter WATERFALL by {{column(waterfall_chart.selection, [\"Bucket\"]).asEquality(\"Bucket\")}}; WATERFALL = group WATERFALL by 'OpportunityId'; WATERFALL = foreach WATERFALL generate last('OpportunityId') as 'OpportunityId', last('Opportunity.Account.Name') as 'Opportunity.Account.Name', last('Opportunity.Name') as 'Opportunity.Name', last('Opportunity.Owner.UniqueUserName') as 'Opportunity.Owner.UniqueUserName', last('Opportunity.Amount') as 'Opportunity.Amount', last('Opportunity.CloseDate') as 'Opportunity.CloseDate', last('Opportunity.ForecastCategoryName') as 'Opportunity.ForecastCategoryName', last('Opportunity.StageName') as 'Opportunity.StageName', last('Amount') as 'Amount'; WATERFALL = foreach WATERFALL generate 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.UniqueUserName', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'Opportunity.Amount', sum('Amount') as 'sum_Amount'; WATERFALL = order WATERFALL by {{cell(step_hbar_group.selection, 0, \"value\").asString()}}; WATERFALL = limit WATERFALL 100;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","strings":["Opportunity.Name","Opportunity.Owner.UniqueUserName","Opportunity.ForecastCategoryName","Opportunity.StageName","Opportunity.CloseDate"],"type":"saql","useGlobal":true},"step_hbar_group":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"$ High to Low\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"$ High to Low\",\"value\":\"'sum_Amount' desc\"}","{\"display\":\"$ Low to High\",\"value\":\"'sum_Amount' asc\"}"]},"Close_Date_1":{"broadcastFacet":false,"datasets":[{"name":"pipeline_trending","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"CloseDate\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","start":"[[[\"quarter\",0],[\"day\",0]]]","type":"aggregateflex","useGlobal":true},"step_time":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"This Quarter\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"All Time\",\"CloseDate_1\":\"\\\"100 years ago\\\"..\\\"100 years ahead\\\"\"}","{\"display\":\"This Week\",\"CloseDate_1\":\"\\\"current week\\\"..\\\"current week\\\"\"}","{\"display\":\"Last Week\",\"CloseDate_1\":\"\\\"1 week ago\\\"..\\\"1 week ago\\\"\"}","{\"display\":\"Next Week\",\"CloseDate_1\":\"\\\"1 week ahead\\\"..\\\"1 week ahead\\\"\"}","{\"display\":\"This Month\",\"CloseDate_1\":\"\\\"current month\\\"..\\\"current month\\\"\"}","{\"display\":\"Last Month\",\"CloseDate_1\":\"\\\"1 month ago\\\"..\\\"1 month ago\\\"\"}","{\"display\":\"Next Month\",\"CloseDate_1\":\"\\\"1 month ahead\\\"..\\\"1 month ahead\\\"\"}","{\"display\":\"This Quarter\",\"CloseDate_1\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\"}","{\"display\":\"Last Quarter\",\"CloseDate_1\":\"\\\"1 quarter ago\\\"..\\\"1 quarter ago\\\"\"}","{\"display\":\"Next Quarter\",\"CloseDate_1\":\"\\\"1 quarter ahead\\\"..\\\"1 quarter ahead\\\"\"}","{\"display\":\"This Year\",\"CloseDate_1\":\"\\\"current year\\\"..\\\"current year\\\"\"}","{\"display\":\"Last Year\",\"CloseDate_1\":\"\\\"1 year ago\\\"..\\\"1 year ago\\\"\"}","{\"display\":\"Next Year\",\"CloseDate_1\":\"\\\"1 year ahead\\\"..\\\"1 year ahead\\\"\"}"]},"pipeline_end":{"broadcastFacet":true,"groups":[],"numbers":["sum_Amount"],"query":"END = load \"eadx__pipeline_trending\"; END = filter END by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END = filter END by 'Stage.IsClosed' == \"false\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END = group END by all; END = foreach END generate \"9_END\" as 'Bucket', sum('Amount') as 'sum_Amount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"container_19":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_18":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_17":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_16":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"fitwidth","image":{"name":"SalesWaveLogo4","namespace":"eadx"}},"type":"container"},"container_15":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_14":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_13":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"text_10":{"parameters":{"content":{"displayTemplate":"Understand how your pipeline changes over time."},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#335779"},"type":"text"},"text_12":{"parameters":{"content":{"displayTemplate":"See how pipeline is changing from the start of {{cell(Intermediate.result, 0, \"Start_ValidTo\").asObject()}} to {{cell(Intermediate.result, 0, \"End_ValidFrom\").asObject()}} for deals closing {{cell(step_time.selection, 0, \"display\").asObject()}}"},"fontSize":14,"showActionMenu":true,"textAlignment":"center","textColor":"#A3B8CC"},"type":"text"},"text_11":{"parameters":{"content":{"displayTemplate":"Set Close Date for Opportunities   ⓘ"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF","tooltip":"Filter for opportunities closing in the selected period"},"type":"text"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_2":{"parameters":{"alignmentX":"right","alignmentY":"top","fit":"fitwidth"},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_6":{"parameters":{"alignmentX":"center","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_3":{"parameters":{"content":{"displayTemplate":"Opportunity Details"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"rgb(23, 50, 77)"},"type":"text"},"text_2":{"parameters":{"content":{"displayTemplate":"Pipeline Changes"},"fontSize":24,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_22":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_5":{"parameters":{"content":{"displayTemplate":"Sort Pipeline Amount by:"},"fontSize":12,"showActionMenu":true,"textAlignment":"right","textColor":"#091A3E"},"type":"text"},"container_21":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"text_4":{"parameters":{"content":{"displayTemplate":""},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_20":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"chart_2":{"parameters":{"autoFitMode":"fit","totalValue":"computeTotal","showValues":true,"bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"showBinLabel":true,"measures":"","showPercentage":true,"showDimensions":true,"showMeasures":true,"customizeTooltip":false,"dimensions":""},"visualizationType":"hbar","exploreLink":false,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"binValues":false,"textColor":"#FFFFFF","totalLabel":"","showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"step":"waterfall_chart","theme":"dark","dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":false},"type":"chart"},"text_7":{"parameters":{"content":{"displayTemplate":"Pipeline Change"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"chart_1":{"parameters":{"totalValue":"useLastBucket","showValues":true,"positiveColor":"rgb(6, 125, 30)","tooltip":{"showBinLabel":true,"measures":"","showPercentage":true,"showDimensions":true,"showMeasures":true,"customizeTooltip":false,"dimensions":""},"visualizationType":"waterfall","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"textColor":"#FFFFFF","startColor":"rgb(22, 116, 217)","totalLabel":"","showActionMenu":true,"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"totalColor":"rgb(22, 116, 217)","step":"waterfall_chart","theme":"dark","negativeColor":"rgb(227, 25, 59)","dimensionAxis":{"showTitle":false,"showAxis":true,"title":""},"applyConditionalFormatting":false},"type":"chart"},"text_6":{"parameters":{"content":{"displayTemplate":"Set Pipeline Start and End Dates    ⓘ"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF","tooltip":"Select the start and end dates for the historical pipeline you’d like to view. Either change the start and end by clicking the pencil (edit) icon or drag the slider to desired timeframe."},"type":"text"},"text_9":{"parameters":{"content":{"displayTemplate":"TRENDING"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"text_8":{"parameters":{"content":{"displayTemplate":"Sales Analytics for Managers"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"dateselector_1":{"parameters":{"absoluteModeEnabled":true,"calendarTypeSwitchingAllowed":false,"defaultFiscalMode":false,"displayMode":"combo","filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"presetsEnabled":true,"relativeModeEnabled":true,"showActionMenu":true,"step":"Close_Date_1","title":""},"type":"dateselector"},"text_1":{"parameters":{"content":{"displayTemplate":""},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"filterpanel_1":{"parameters":{"filterItemOptions":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderRadius":4,"borderWidth":1,"propertyColor":"#54698D","valueColor":"#16325C"},"filters":[],"itemsPerRow":4,"showAllFilters":true,"title":{"separatorColor":"#E6ECF2","text":{"align":"left","color":"#091A3E","fontSize":16,"label":""},"visible":true}},"type":"filterpanel"},"number_5":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"pipeline_end","textAlignment":"center","title":"Ending Pipeline","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"number_4":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"pipeline_change","textAlignment":"center","title":"","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"number_3":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"pipeline_change","textAlignment":"center","title":"Pipeline Change","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"pipeline_start","textAlignment":"left","title":"Starting Pipeline","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"pipeline_end","textAlignment":"left","title":"Ending Pipeline","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"container_12":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"image_1":{"parameters":{"alignmentX":"center","alignmentY":"top","fit":"fitheight","image":{"name":"OpportunityLogo4","namespace":"eadx"}},"type":"image"},"container_11":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_10":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"image_2":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"fitheight","image":{"name":"astro_binoculars1","namespace":"eadx"}},"type":"image"},"number_8":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":48,"showActionMenu":true,"step":"pipeline_change","textAlignment":"center","title":"Pipeline Change","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"number_6":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"pipeline_start","textAlignment":"center","title":"Starting Pipeline","titleColor":"#FFFFFF","titleSize":14},"type":"number"},"listselector_6":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"showActionMenu":false,"step":"step_hbar_group","title":""},"type":"listselector"},"listselector_2":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"none","showActionMenu":false,"step":"step_time","title":""},"type":"listselector"},"listselector_5":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"showActionMenu":false,"step":"step_hbar_group","title":""},"type":"listselector"},"container_24":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"fitwidth","image":{"name":"Info1","namespace":"eadx"}},"type":"container"},"link_4":{"parameters":{"destinationLink":{"name":"Team_Productivity4","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":true,"text":"BENCHMARK","textAlignment":"center","textColor":"#5C7A99"},"type":"link"},"link_1":{"parameters":{"destinationLink":{"name":"About_Wave_for_Sales","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_2":{"parameters":{"destinationLink":{"name":"Manager_Overview4","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":true,"text":"LEADERBOARD","textAlignment":"center","textColor":"#5C7A99"},"type":"link"},"table_1":{"parameters":{"borderColor":"#e0e5ee","borderWidth":1,"cell":{"backgroundColor":"#ffffff","fontColor":"#16325c","fontSize":12},"columnProperties":{},"columns":[],"customBulkActions":[],"exploreLink":true,"header":{"backgroundColor":"#f4f6f9","fontColor":"#16325c","fontSize":12},"innerMajorBorderColor":"#a8b7c7","innerMinorBorderColor":"#e0e5ee","mode":"fittocontainer","numberOfLines":1,"showActionMenu":true,"step":"waterfall_detail","verticalPadding":8},"type":"table"},"link_7":{"parameters":{"destinationLink":{"tooltip":"Click for Help & Training","url":"https://help.salesforce.com/articleView?id=bi_app_sales_analytics_dashboard_team_trending.htm&type=5"},"destinationType":"url","fontSize":12,"includeState":false,"text":"","textAlignment":"center","textColor":"#44A2F5"},"type":"link"},"link_5":{"parameters":{"destinationLink":{"name":"Quota_Progress4","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"FORECAST","textAlignment":"center","textColor":"#5C7A99"},"type":"link"},"link_6":{"parameters":{"destinationLink":{"name":"Manager_Activities4","namespace":"eadx"},"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"ACTIVITIES","textAlignment":"center","textColor":"#5C7A99"},"type":"link"}}}