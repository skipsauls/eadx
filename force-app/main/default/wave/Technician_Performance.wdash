{"dataSourceLinks":[],"filters":[],"gridLayouts":[{"maxWidth":1360,"name":"Default","numColumns":48,"pages":[{"name":"716bd46c-a5d6-462e-960c-c0b4dc562c71","navigationHidden":false,"widgets":[{"colspan":4,"column":1,"name":"listselector_ServiceTerritoryId_N_2","row":13,"rowspan":4,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":6,"name":"listselector_ParentRecordId_Accou_2","row":13,"rowspan":4,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":11,"name":"listselector_ServiceTerritoryMemb_1","row":13,"rowspan":4,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":21,"name":"listselector_ParentRecordId_Prior_2","row":13,"rowspan":4,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":42,"name":"listselector_Time_Selection","row":13,"rowspan":4,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"container_1","row":11,"rowspan":8,"widgetStyle":{"backgroundColor":"#E6ECF2","borderEdges":[]}},{"colspan":5,"column":35,"name":"text__Work_Orders","row":24,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":35,"name":"number_ParentRecordId_1","row":27,"rowspan":5,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":40,"name":"chart_ParentRecordId_Creat_1","row":25,"rowspan":9,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":35,"name":"number_WO_prev_compare_1","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(WO_prev_compare_1.result, 0, \"color\"),\"#000000\").asString()}}","borderColor":"rgb(0, 0, 0)","borderEdges":[],"borderRadius":4}},{"colspan":12,"column":35,"name":"chart_Status_3","row":37,"rowspan":14,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":35,"name":"chart_ParentRecordId_Prior_1","row":52,"rowspan":14,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":34,"column":0,"name":"container_3","row":19,"rowspan":49,"widgetStyle":{"backgroundColor":"rgb(9, 26, 62)","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["right"],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":34,"name":"container_2","row":19,"rowspan":49,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(5, 19, 89)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":44,"column":2,"name":"text__Metrics_compared_to_prior_period","row":70,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":2,"name":"text_Avg_Travel_Time_minutes_","row":74,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":18,"name":"text_First_Time_Fix","row":74,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":34,"name":"text_Mean_Time_to_Repair_minutes_","row":74,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":2,"name":"number_Avg_Travel_Time_2","row":77,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":6,"name":"chart_CreatedDate_Year_Cre_2","row":77,"rowspan":7,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":4}},{"colspan":3,"column":2,"name":"number_all_2","row":81,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(all_2.result, 0, \"color\"),\"#ffffff\").asString()}}","borderEdges":[],"borderRadius":4}},{"colspan":8,"column":22,"name":"chart_FirstTimeFixChart_1","row":77,"rowspan":7,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":4}},{"colspan":3,"column":34,"name":"number_ActualDuration_1","row":77,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":38,"name":"chart_CreatedDate_Year_Cre_1","row":77,"rowspan":7,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":3,"column":18,"name":"number_FirstTimeFix_1","row":77,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":18,"name":"number_all_3","row":81,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(all_3.result, 0, \"color\"),\"#ffffff\").asString()}}","borderEdges":[],"borderRadius":4}},{"colspan":3,"column":34,"name":"number_Mean_Time_to_Repair_1","row":81,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(Mean_Time_to_Repair__1.result, 0, \"color\"),\"#ffffff\").asString()}}","borderEdges":[],"borderRadius":4}},{"colspan":10,"column":1,"name":"container_7","row":89,"rowspan":8,"widgetStyle":{"backgroundColor":"{{coalesce(cell(ViolationsCompare_1.result, 0, \"left_color\"),\"#54698D\").asString()}}","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":17,"name":"text_Avg_SLA_Violations_Agent","row":89,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(44, 149, 92, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":17,"name":"container_9","row":89,"rowspan":8,"widgetStyle":{"backgroundColor":"{{coalesce(cell(SLAViolationsCompare_1.selection, 0, \"left_color\"),\"#54698D\").asString()}}","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":33,"name":"container_10","row":89,"rowspan":8,"widgetStyle":{"backgroundColor":"{{coalesce(cell(all_3.result, 0, \"left_color\"),\"#54698D\").asString()}}","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":2,"name":"pillbox_Sort_1","row":120,"rowspan":2,"widgetStyle":{"borderEdges":[],"borderRadius":4}},{"colspan":44,"column":1,"name":"text_Work_Order_Detail_Table","row":129,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":46,"column":1,"name":"table_lens_1","row":133,"rowspan":29,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":33,"name":"text_First_Time_Fix_Rate","row":89,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(44, 149, 92, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"container_6","row":86,"rowspan":3,"widgetStyle":{"borderEdges":["top","left","right"]}},{"colspan":14,"column":1,"name":"container_16","row":97,"rowspan":27,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":16,"name":"listselector_Status_1","row":13,"rowspan":4,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":36,"name":"text_Metrics_compared_to_prior_period","row":21,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":1,"name":"text_Work_Order_Volume","row":21,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":32,"column":1,"name":"chart_WO_Scatter_1","row":26,"rowspan":39,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":4,"column":11,"name":"number_ViolationsCompare_1","row":92,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(ViolationsCompare_1.result, 0, \"color\"),\"#54698D\").asString()}}","borderEdges":[]}},{"colspan":12,"column":18,"name":"chart_SLAViolationsChart_1","row":99,"rowspan":19,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":34,"name":"chart_FirstTimeFixChart_2","row":99,"rowspan":23,"widgetStyle":{"borderEdges":[]}},{"colspan":4,"column":43,"name":"number_all_31","row":92,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(84, 105, 141, 0)","borderEdges":[]}},{"colspan":9,"column":1,"name":"text_Due_Date_Violations_Agent","row":89,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(84, 105, 141, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":1,"name":"number_ViolationsPerAgent_1","row":92,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":2,"name":"chart_ViolationsChart_1","row":99,"rowspan":19,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":17,"name":"number_SLAViolations_1","row":92,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":17,"name":"container_5","row":97,"rowspan":27,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":18,"name":"pillbox_SLA_Sort_1","row":120,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":27,"name":"number_SLAViolationsCompare_1","row":92,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(SLAViolationsCompare_1.selection, 0, \"color\"),\"#54698D\").asString()}}","borderEdges":[]}},{"colspan":5,"column":33,"name":"number_FirstTimeFix_11","row":92,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"container_8","row":127,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":11,"name":"container_11","row":89,"rowspan":8,"widgetStyle":{"backgroundColor":"{{coalesce(cell(ViolationsCompare_1.result, 0, \"color\"),\"#54698D\").asString()}}","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":33,"name":"container_12","row":97,"rowspan":27,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":27,"name":"container_13","row":89,"rowspan":8,"widgetStyle":{"backgroundColor":"{{coalesce(cell(SLAViolationsCompare_1.selection, 0, \"color\"),\"#54698D\").asString()}}","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":43,"name":"container_14","row":89,"rowspan":8,"widgetStyle":{"backgroundColor":"{{coalesce(cell(all_3.result, 0, \"color\"),\"#54698D\").asString()}}","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":0,"name":"container_15","row":89,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["left"],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":47,"name":"container_17","row":89,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["right"],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"container_18","row":68,"rowspan":18,"widgetStyle":{"borderEdges":["left"]}},{"colspan":48,"column":0,"name":"container_4","row":3,"rowspan":8,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#634F95","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":18,"column":1,"name":"text_Technician_Performance1","row":3,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":33,"name":"link_Work_Order_Overview","row":8,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":15,"name":"container_19","row":89,"rowspan":35,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":31,"name":"container_20","row":89,"rowspan":35,"widgetStyle":{"borderEdges":[]}},{"colspan":46,"column":1,"name":"container_21","row":124,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":40,"name":"text_Technician_Performance","row":8,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(99, 79, 149)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#C5D3E0","cellSpacingX":0,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"ViolationsCompare_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"ViolationsCompare","query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{column(WO_Scatter_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; curr = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; prev = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; curr = group curr by 'Id'; curr = foreach curr generate sum('ActualEndTime_sec_epoch') as 'ActualEndTime_sec_epoch', sum('DueDate_sec_epoch') as 'DueDate_sec_epoch', 'Id' as 'Id', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name'; curr = filter curr by 'ActualEndTime_sec_epoch' > 'DueDate_sec_epoch'; curr = group curr by all; curr = foreach curr generate count() / unique('AssignedResource.User.User.Name') as 'avg_curr_violations_per_agent'; prev = group prev by 'Id'; prev = foreach prev generate sum('ActualEndTime_sec_epoch') as 'ActualEndTime_sec_epoch', sum('DueDate_sec_epoch') as 'DueDate_sec_epoch', 'Id' as 'Id', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name'; prev = filter prev by 'ActualEndTime_sec_epoch' > 'DueDate_sec_epoch'; prev = group prev by all; prev = foreach prev generate count() / unique('AssignedResource.User.User.Name') as 'avg_prev_violations_per_agent'; z = union curr,prev; z = group z by all; z = foreach z generate 100*(sum('avg_curr_violations_per_agent') - sum('avg_prev_violations_per_agent') / sum('avg_prev_violations_per_agent')) as 'perc_violations_compare', (case when 100*(sum('avg_curr_violations_per_agent') - sum('avg_prev_violations_per_agent') / sum('avg_prev_violations_per_agent')) < 0 then \\\"#039264\\\" when 100*(sum('avg_curr_violations_per_agent') - sum('avg_prev_violations_per_agent') / sum('avg_prev_violations_per_agent')) > 0 then \\\"#C03757\\\" else \\\"#54698D\\\" end) as 'color', (case when 100*(sum('avg_curr_violations_per_agent') - sum('avg_prev_violations_per_agent') / sum('avg_prev_violations_per_agent')) < 0 then \\\"#0BA976\\\" when 100*(sum('avg_curr_violations_per_agent') - sum('avg_prev_violations_per_agent') / sum('avg_prev_violations_per_agent')) > 0 then \\\"#D14062\\\" else \\\"#54698D\\\" end) as 'left_color'; \",\"measures\":[[\"perc\",\"violations_compare\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Sort_1":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Descending\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"Ascending\",\"value\":\"asc\",\"compact_value\":true}","{\"display\":\"Descending\",\"value\":\"desc\",\"compact_value\":false}"]},"FirstTimeFixChart_2":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"FirstTimeFixChart","query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.result, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.result, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.result, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.result, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; i = filter q by 'StatusCategory' == \\\"CannotComplete\\\"; g = group q by 'ParentRecordId.WorkTypeId.Name' left, i by 'ParentRecordId.WorkTypeId.Name'; g = foreach g generate (1-(count(i)/count(q)))*100 as sum_first_time_fix, q['ParentRecordId.WorkTypeId.Name'] as 'ParentRecordId.WorkTypeId.Name';\",\"measures\":[[\"sum\",\"first_time_fix\"]],\"groups\":[\"ParentRecordId.WorkTypeId.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"FirstTimeFixChart_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"FirstTimeFixChart","query":{"query":"{\"pigql\":\"a = load \\\"eadx__ServiceAppointment\\\"; q = filter a by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; i = filter q by 'StatusCategory' == \\\"CannotComplete\\\"; g = group q by {{cell(Time_Selection.selection, 0, \\\"GroupbyEarliestStartTime\\\").asObject()}} left, i by {{cell(Time_Selection.selection, 0, \\\"GroupbyEarliestStartTime\\\").asObject()}}; g = foreach g generate (1-(count(i)/count(q)))*100 as sum_first_time_fix, {{cell(Time_Selection.selection, 0, \\\"cogroupGenerateEarliestStartTime\\\").asObject()}};\",\"measures\":[[\"sum\",\"first_time_fix\"]],\"groups\":[\"{{cell(Time_Selection.selection, 0, \\\"compactGroup\\\").asObject()}}\"],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"vbar"}},"WO_prev_compare_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"WO_prev_compare","query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}};r = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; t = group r by all, s by all;  t = foreach t generate coalesce(100*((count(s)-count(r))/count(r)), 0) as 'perc_Percent', (case when 100*((count(s)-count(r))/count(r)) < 0 then \\\"#D14062\\\" when 100*((count(s)-count(r))/count(r)) > 0 then \\\"#0BA976\\\" else \\\"#54698D\\\" end) as 'color';\",\"measures\":[[\"perc\",\"Percent\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"WO_Scatter_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"WO_Scatter","query":{"query":"{\"pigql\":\"a = load \\\"eadx__ServiceAppointment\\\"; a = filter a by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; a = filter a by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; a = filter a by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; a = filter a by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; a = filter a by {{column(ParentRecordId_Prior_1.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; a = filter a by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; a = filter a by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; a = filter a by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}};   b=load \\\"eadx__AssignedResource\\\"; b = filter b by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"SA.ServiceTerritoryId.Name\\\")}}; b = filter b by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"SA.ParentRecordId.AccountId.Name\\\")}}; b = filter b by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"User.User.Name\\\")}}; b = filter b by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; b = filter b by {{column(ParentRecordId_Prior_1.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; b = filter b by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; b = filter b by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; b = filter b by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\\\")}}; c = group a by 'AssignedResource.User.User.Name', b by 'User.User.Name'; c = foreach c generate a.'AssignedResource.User.User.Name' as 'AssignedResource.User.User.Name', b.'User.User.Name' as 'User.User.Name', avg(a.'ActualDuration') as 'avg_ActualDuration', avg(b.'ActualTravelTime') as 'avg_ActualTravelTime', count(a) as 'count'; c = order c by 'AssignedResource.User.User.Name' asc; c = limit c 2000;\",\"measures\":[[\"avg\",\"ActualDuration\"],[\"avg\",\"ActualTravelTime\"],[\"count\",\"*\"]],\"groups\":[\"AssignedResource.User.User.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ServiceTerritoryMemb_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AssignedResource.User.User.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{}},"SLAViolationsChart_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"SLAViolationsChart","query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(WO_Scatter_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by 'ActualStartTime_sec_epoch' > 0; q = filter q by 'ArrivalWindowEndTime_sec_epoch' > 0; q = group q by 'Id'; q = foreach q generate sum('ActualStartTime_sec_epoch') as 'ActualStartTime_sec_epoch', sum('ArrivalWindowEndTime_sec_epoch') as 'ArrivalWindowEndTime_sec_epoch', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name', first('ParentRecordId.WorkTypeId.Name') as 'ParentRecordId.WorkTypeId.Name'; q = filter q by 'ActualStartTime_sec_epoch' > 'ArrivalWindowEndTime_sec_epoch'; q = group q by ('AssignedResource.User.User.Name','ParentRecordId.WorkTypeId.Name'); q = foreach q generate count() as count, 'AssignedResource.User.User.Name' as 'AssignedResource.User.User.Name', 'ParentRecordId.WorkTypeId.Name' as 'ParentRecordId.WorkTypeId.Name'; q = order q by count {{cell(SLA_Sort_1.selection, 0, \\\"value\\\").asString()}}\",\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AssignedResource.User.User.Name\",\"ParentRecordId.WorkTypeId.Name\"],\"order\":[[-1,{\"ascending\":\"{{cell(SLA_Sort_1.selection, 0, \\\"compact_value\\\").asObject()}}\"}]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ViolationsChart_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"ViolationsChart","query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(WO_Scatter_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = group q by 'Id'; q = foreach q generate sum('ActualEndTime_sec_epoch') as 'ActualEndTime_sec_epoch', sum('DueDate_sec_epoch') as 'DueDate_sec_epoch', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name', first('ParentRecordId.WorkTypeId.Name') as 'ParentRecordId.WorkTypeId.Name'; q = filter q by 'ActualEndTime_sec_epoch' > 'DueDate_sec_epoch'; q = group q by ('AssignedResource.User.User.Name','ParentRecordId.WorkTypeId.Name'); q = foreach q generate count() as count, 'AssignedResource.User.User.Name' as 'AssignedResource.User.User.Name', 'ParentRecordId.WorkTypeId.Name' as 'ParentRecordId.WorkTypeId.Name'; q = order q by count {{cell(Sort_1.selection, 0, \\\"value\\\").asString()}}\",\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AssignedResource.User.User.Name\",\"ParentRecordId.WorkTypeId.Name\"],\"order\":[[-1,{\"ascending\":\"{{cell(Sort_1.selection, 0, \\\"compact_value\\\").asObject()}}\"}]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ParentRecordId_Creat_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[[\"EarliestStartTime_Year\",\"EarliestStartTime_Month\",\"EarliestStartTime_Day\"]],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"ParentRecordId_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Time_Selection":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Last 30 Days\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"YTD\",\"text_display\":\"vs previous YTD\",\"Backlog30DayClose\":\"[\\\"current day - 395 days\\\"..\\\"current day - 1 year\\\"]\",\"BacklogCompare\":[\"current day - 1 year\",\"current day\"],\"BacklogLabel\":\"Backlog Last Year\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('EarliestStartTime_Month')\",\"Compact\":[[\"year\",0],[\"year\",0]],\"CreatedField\":\"'EarliestStartTime_Month'\",\"CreatedProjection\":\"created['EarliestStartTime_Month']\",\"Current\":[\"current year\",\"current day\"],\"FullGroup\":\"EarliestStartTime_Year~~~EarliestStartTime_Month\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"GenerateCoGroupDate\":\"created['EarliestStartTime_Year']+\\\"~~~\\\"+created['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"GenerateEarliestStartTime\":\"'EarliestStartTime_Year'+\\\"~~~\\\"+'EarliestStartTime_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"cogroupGenerateEarliestStartTime\":\"q['EarliestStartTime_Year']+\\\"~~~\\\"+q['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"SAGenerateEarliestStartTime\":\"'SA.EarliestStartTime_Year'+\\\"~~~\\\"+'SA.EarliestStartTime_Month' as 'SA.EarliestStartTime_Year~~~SA.EarliestStartTime_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyEarliestStartTime\":\"('EarliestStartTime_Year','EarliestStartTime_Month')\",\"SAGroupbyEarliestStartTime\":\"('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month')\",\"Grouping\":\"EarliestStartTime_Year~~~EarliestStartTime_Month\",\"LastPeriodCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"LastYearCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Month\"}],\"compactGroup\":[\"EarliestStartTime_Year\",\"EarliestStartTime_Month\"],\"icompactGroup\":[\"i[EarliestStartTime_Year]\",\"i[EarliestStartTime_Month]\"],\"SAcompactGroup\":[\"SA.EarliestStartTime_Year\",\"SA.EarliestStartTime_Month\"],\"filter\":\"year\",\"queryCogroupNew\":\"first(ThisYear['EarliestStartTime_Year'])+\\\"~~~\\\"+ThisYear['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"SAQL\":\"coalesce((avg(ThisYear['Duration__c'])-avg(LastYear['Duration__c']))/avg(LastYear['Duration__c']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"QTD\",\"text_display\":\"vs previous QTD\",\"Backlog30DayClose\":\"[\\\"current day - 120 days\\\"..\\\"current day - 1 quarter\\\"]\",\"BacklogCompare\":[\"current day - 1 quarter\",\"current day\"],\"BacklogLabel\":\"Backlog Last Quarter\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('EarliestStartTime_Week')\",\"Compact\":[[\"quarter\",0],[\"quarter\",0]],\"CreatedField\":\"'EarliestStartTime_Week'\",\"CreatedProjection\":\"created['EarliestStartTime_Week']\",\"Current\":[\"current quarter\",\"current day\"],\"FullGroup\":\"EarliestStartTime_Year~~~EarliestStartTime_Week\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"GenerateCoGroupDate\":\"created['EarliestStartTime_Year']+\\\"~~~\\\"+created['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"GenerateEarliestStartTime\":\"'EarliestStartTime_Year'+\\\"~~~\\\"+'EarliestStartTime_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"cogroupGenerateEarliestStartTime\":\"q['EarliestStartTime_Year']+\\\"~~~\\\"+q['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"SAGenerateEarliestStartTime\":\"'SA.EarliestStartTime_Year'+\\\"~~~\\\"+'SA.EarliestStartTime_Week' as 'SA.EarliestStartTime_Year~~~SA.EarliestStartTime_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyEarliestStartTime\":\"('EarliestStartTime_Year','EarliestStartTime_Week')\",\"SAGroupbyEarliestStartTime\":\"('SA.EarliestStartTime_Year','SA.EarliestStartTime_Week')\",\"Grouping\":\"EarliestStartTime_Year~~~EarliestStartTime_Week\",\"LastPeriodCompare\":[\"current quarter - 1 quarter\",\"current day - 1 quarter\"],\"LastYearCompare\":[\"current quarter - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Week\"}],\"compactGroup\":[\"EarliestStartTime_Year\",\"EarliestStartTime_Week\"],\"icompactGroup\":[\"i[EarliestStartTime_Year]\",\"i[EarliestStartTime_Week]\"],\"SAcompactGroup\":[\"SA.EarliestStartTime_Year\",\"SA.EarliestStartTime_Week\"],\"filter\":\"quarter\",\"queryCogroupNew\":\"first(ThisYear['EarliestStartTime_Year'])+\\\"~~~\\\"+ThisYear['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"SAQL\":\"coalesce((avg(ThisYear['Duration__c'])-avg(LastYear['Duration__c']))/avg(LastYear['Duration__c']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"MTD\",\"text_display\":\"vs previous MTD\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 1 month\\\"]\",\"BacklogCompare\":[\"current day - 1 month\",\"current day\"],\"BacklogLabel\":\"Backlog Last Month\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('EarliestStartTime_Month','EarliestStartTime_Day')\",\"Compact\":[[\"month\",0],[\"month\",0]],\"CreatedField\":\"'EarliestStartTime_Month','EarliestStartTime_Day'\",\"CreatedProjection\":\"created['EarliestStartTime_Month'] +\\\"~~~\\\" + created['EarliestStartTime_Day']\",\"Current\":[\"current month\",\"current month\"],\"FullGroup\":\"EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"GenerateCoGroupDate\":\"created['EarliestStartTime_Year']+\\\"~~~\\\"+created['EarliestStartTime_Month']+\\\"~~~\\\"+created['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"GenerateEarliestStartTime\":\"'EarliestStartTime_Year'+\\\"~~~\\\"+'EarliestStartTime_Month'+\\\"~~~\\\"+'EarliestStartTime_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"cogroupGenerateEarliestStartTime\":\"q['EarliestStartTime_Year']+\\\"~~~\\\"+q['EarliestStartTime_Month']+\\\"~~~\\\"+q['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"SAGenerateEarliestStartTime\":\"'SA.EarliestStartTime_Year'+\\\"~~~\\\"+'SA.EarliestStartTime_Month'+\\\"~~~\\\"+'SA.EarliestStartTime_Day' as 'SA.EarliestStartTime_Year~~~SA.EarliestStartTime_Month~~~SA.EarliestStartTime_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyEarliestStartTime\":\"('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\",\"SAGroupbyEarliestStartTime\":\"('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\",\"Grouping\":\"EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day\",\"LastPeriodCompare\":[\"current month - 1 month\",\"current day - 1 month\"],\"LastYearCompare\":[\"current month - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Day\"}],\"compactGroup\":[\"EarliestStartTime_Year\",\"EarliestStartTime_Month\",\"EarliestStartTime_Day\"],\"icompactGroup\":[\"i[EarliestStartTime_Year]\",\"i[EarliestStartTime_Month]\",\"i[EarliestStartTime_Day]\"],\"SAcompactGroup\":[\"SA.EarliestStartTime_Year\",\"SA.EarliestStartTime_Month\",\"SA.EarliestStartTime_Day\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['EarliestStartTime_Year'])+\\\"~~~\\\"+ThisYear['EarliestStartTime_Month']+\\\"~~~\\\"+ThisYear['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 7 Days\",\"text_display\":\"vs previous 7 days\",\"Backlog30DayClose\":\"[\\\"current day - 37 days\\\"..\\\"current day - 7 days\\\"]\",\"BacklogCompare\":[\"current day - 1 week\",\"current day\"],\"BacklogLabel\":\"Backlog Last 7 Days\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('EarliestStartTime_Month','EarliestStartTime_Day')\",\"Compact\":[[\"day\",-7],[\"day\",0]],\"CreatedField\":\"'EarliestStartTime_Month','EarliestStartTime_Day'\",\"CreatedProjection\":\"created['EarliestStartTime_Month'] +\\\"~~~\\\" + created['EarliestStartTime_Day']\",\"Current\":[\"7 days ago\",\"current day\"],\"FullGroup\":\"EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"GenerateCoGroupDate\":\"created['EarliestStartTime_Year']+\\\"~~~\\\"+created['EarliestStartTime_Month']+\\\"~~~\\\"+created['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"GenerateEarliestStartTime\":\"'EarliestStartTime_Year'+\\\"~~~\\\"+'EarliestStartTime_Month'+\\\"~~~\\\"+'EarliestStartTime_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"cogroupGenerateEarliestStartTime\":\"q['EarliestStartTime_Year']+\\\"~~~\\\"+q['EarliestStartTime_Month']+\\\"~~~\\\"+q['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"SAGenerateEarliestStartTime\":\"'SA.EarliestStartTime_Year'+\\\"~~~\\\"+'SA.EarliestStartTime_Month'+\\\"~~~\\\"+'SA.EarliestStartTime_Day' as 'SA.EarliestStartTime_Year~~~SA.EarliestStartTime_Month~~~SA.EarliestStartTime_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyEarliestStartTime\":\"('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\",\"SAGroupbyEarliestStartTime\":\"('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\",\"Grouping\":\"EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day\",\"LastPeriodCompare\":[\"7 days ago - 1 week\",\"current day - 1 week\"],\"LastYearCompare\":[\"7 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Day\"}],\"compactGroup\":[\"EarliestStartTime_Year\",\"EarliestStartTime_Month\",\"EarliestStartTime_Day\"],\"icompactGroup\":[\"i[EarliestStartTime_Year]\",\"i[EarliestStartTime_Month]\",\"i[EarliestStartTime_Day]\"],\"SAcompactGroup\":[\"SA.EarliestStartTime_Year\",\"SA.EarliestStartTime_Month\",\"SA.EarliestStartTime_Day\"],\"filter\":\"week\",\"queryCogroupNew\":\"first(ThisYear['EarliestStartTime_Year'])+\\\"~~~\\\"+ThisYear['EarliestStartTime_Month']+\\\"~~~\\\"+ThisYear['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 30 Days\",\"text_display\":\"vs previous 30 days\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 30 days\\\"]\",\"BacklogCompare\":[\"current day - 30 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 30 Days\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('EarliestStartTime_Week')\",\"Compact\":[[\"day\",-30],[\"day\",0]],\"CreatedField\":\"'EarliestStartTime_Week'\",\"CreatedProjection\":\"created['EarliestStartTime_Week']\",\"Current\":[\"30 days ago\",\"current day\"],\"FullGroup\":\"EarliestStartTime_Year~~~EarliestStartTime_Week\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"GenerateCoGroupDate\":\"created['EarliestStartTime_Year']+\\\"~~~\\\"+created['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"GenerateEarliestStartTime\":\"'EarliestStartTime_Year'+\\\"~~~\\\"+'EarliestStartTime_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"cogroupGenerateEarliestStartTime\":\"q['EarliestStartTime_Year']+\\\"~~~\\\"+q['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"SAGenerateEarliestStartTime\":\"'SA.EarliestStartTime_Year'+\\\"~~~\\\"+'SA.EarliestStartTime_Week' as 'SA.EarliestStartTime_Year~~~SA.EarliestStartTime_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyEarliestStartTime\":\"('EarliestStartTime_Year','EarliestStartTime_Week')\",\"SAGroupbyEarliestStartTime\":\"('SA.EarliestStartTime_Year','SA.EarliestStartTime_Week')\",\"Grouping\":\"EarliestStartTime_Year~~~EarliestStartTime_Week\",\"LastPeriodCompare\":[\"30 days ago - 30 days\",\"current day - 30 days\"],\"LastYearCompare\":[\"30 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Week\"}],\"compactGroup\":[\"EarliestStartTime_Year\",\"EarliestStartTime_Week\"],\"icompactGroup\":[\"i[EarliestStartTime_Year]\",\"i[EarliestStartTime_Week]\"],\"SAcompactGroup\":[\"SA.EarliestStartTime_Year\",\"SA.EarliestStartTime_Week\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['EarliestStartTime_Year'])+\\\"~~~\\\"+ThisYear['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 180 Days\",\"text_display\":\"vs previous 180 days\",\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":[\"current day - 180 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 180 Days\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('EarliestStartTime_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CreatedField\":\"'EarliestStartTime_Month'\",\"CreatedProjection\":\"created['EarliestStartTime_Month']\",\"Current\":[\"180 days ago\",\"current day\"],\"FullGroup\":\"EarliestStartTime_Year~~~EarliestStartTime_Month\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"GenerateCoGroupDate\":\"created['EarliestStartTime_Year']+\\\"~~~\\\"+created['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"GenerateEarliestStartTime\":\"'EarliestStartTime_Year'+\\\"~~~\\\"+'EarliestStartTime_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"cogroupGenerateEarliestStartTime\":\"q['EarliestStartTime_Year']+\\\"~~~\\\"+q['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"SAGenerateEarliestStartTime\":\"'SA.EarliestStartTime_Year'+\\\"~~~\\\"+'SA.EarliestStartTime_Month' as 'SA.EarliestStartTime_Year~~~SA.EarliestStartTime_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyEarliestStartTime\":\"('EarliestStartTime_Year','EarliestStartTime_Month')\",\"SAGroupbyEarliestStartTime\":\"('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month')\",\"Grouping\":\"EarliestStartTime_Year~~~EarliestStartTime_Month\",\"LastPeriodCompare\":[\"180 days ago - 180 days\",\"current day - 180 days\"],\"LastYearCompare\":[\"180 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Month\"}],\"compactGroup\":[\"EarliestStartTime_Year\",\"EarliestStartTime_Month\"],\"icompactGroup\":[\"i[EarliestStartTime_Year]\",\"i[EarliestStartTime_Month]\"],\"SAcompactGroup\":[\"SA.EarliestStartTime_Year\",\"SA.EarliestStartTime_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['EarliestStartTime_Year'])+\\\"~~~\\\"+ThisYear['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 2 years\",\"text_display\":\"vs previous 2 years\",\"Backlog30DayClose\":\"[\\\"current day - 690 days\\\"..\\\"current day - 2 years\\\"]\",\"BacklogCompare\":[\"current day - 2 years\",\"current day\"],\"BacklogLabel\":\"Backlog Last 2 years\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('EarliestStartTime_Month')\",\"Compact\":[[\"day\",-720],[\"day\",0]],\"CreatedField\":\"'EarliestStartTime_Month'\",\"CreatedProjection\":\"created['EarliestStartTime_Month']\",\"Current\":[\"2 years ago\",\"current day\"],\"FullGroup\":\"EarliestStartTime_Year~~~EarliestStartTime_Month\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"GenerateCoGroupDate\":\"created['EarliestStartTime_Year']+\\\"~~~\\\"+created['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"GenerateEarliestStartTime\":\"'EarliestStartTime_Year'+\\\"~~~\\\"+'EarliestStartTime_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"cogroupGenerateEarliestStartTime\":\"q['EarliestStartTime_Year']+\\\"~~~\\\"+q['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"SAGenerateEarliestStartTime\":\"'SA.EarliestStartTime_Year'+\\\"~~~\\\"+'SA.EarliestStartTime_Month' as 'SA.EarliestStartTime_Year~~~SA.EarliestStartTime_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyEarliestStartTime\":\"('EarliestStartTime_Year','EarliestStartTime_Month')\",\"SAGroupbyEarliestStartTime\":\"('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month')\",\"Grouping\":\"EarliestStartTime_Year~~~EarliestStartTime_Month\",\"LastPeriodCompare\":[\"2 years ago - 2 years\",\"current day - 2 years\"],\"LastYearCompare\":[\"2 years ago - 4 years\",\"current day - 2 years\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Month\"}],\"compactGroup\":[\"EarliestStartTime_Year\",\"EarliestStartTime_Month\"],\"icompactGroup\":[\"i[EarliestStartTime_Year]\",\"i[EarliestStartTime_Month]\"],\"SAcompactGroup\":[\"SA.EarliestStartTime_Year\",\"SA.EarliestStartTime_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['EarliestStartTime_Year'])+\\\"~~~\\\"+ThisYear['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}"]},"SLAViolations_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"SLAViolations","query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(WO_Scatter_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by 'ArrivalWindowEndTime_sec_epoch' > 0; q = filter q by 'ActualStartTime_sec_epoch' > 0; curr = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; curr = group curr by 'Id'; curr = foreach curr generate sum('ActualStartTime_sec_epoch') as 'ActualStartTime_sec_epoch', sum('ArrivalWindowEndTime_sec_epoch') as 'ArrivalWindowEndTime_sec_epoch', 'Id' as 'Id', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name';  curr = filter curr by 'ActualStartTime_sec_epoch' > 'ArrivalWindowEndTime_sec_epoch'; curr = group curr by all; curr = foreach curr generate count() / unique('AssignedResource.User.User.Name') as 'avg_sla_violations';\",\"measures\":[[\"avg\",\"sla_violations\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"all_3":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; w = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; r = filter w by 'StatusCategory' == \\\"CannotComplete\\\"; prev = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; prev_inc = filter prev by 'StatusCategory' == \\\"CannotComplete\\\";  g = group w by all left, r by all, prev by all left, prev_inc by all; z = foreach g generate 1-(count(r) / count(w))*100 as 'sum_first_time_fix', 1-count(prev_inc) / count(prev)*100 as 'sum_prev_first_time_fix', 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) as 'perc_first_time_fix', (case when 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) < 0 then \\\"#D14062\\\" when 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) > 0 then \\\"#0BA976\\\" else \\\"#54698D\\\" end) as 'color', (case when 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) < 0 then \\\"#D14062\\\" when 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) > 0 then \\\"#0BA976\\\" else \\\"#54698D\\\" end) as 'left_color';\",\"measures\":[[\"perc\",\"first_time_fix\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ActualDuration_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"ActualDuration\"]],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"],[\"ActualDuration\",[[0]],\">\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"all_2":{"broadcastFacet":true,"datasets":[{"name":"AssignedResource","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q=load \\\"eadx__AssignedResource\\\"; q = filter q by 'ActualTravelTime' > 0; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"SA.ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.result, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"SA.ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"SA.ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.result, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"SA.ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"User.User.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.result, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.result, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_1.result, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_3.result, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; w = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\\\")}}; p = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\\\")}}; g = group w by all, p by all; z = foreach g generate 100*(avg(w['ActualTravelTime']) - avg(p['ActualTravelTime'])) / avg(p['ActualTravelTime']) as 'perc_actual_travel_time_compare', (case when 100*(avg(w['ActualTravelTime']) - avg(p['ActualTravelTime'])) / avg(p['ActualTravelTime']) < 0 then \\\"#0BA976\\\" when 100*(avg(w['ActualTravelTime']) - avg(p['ActualTravelTime'])) / avg(p['ActualTravelTime']) > 0 then \\\"#D14062\\\" else \\\"#54698D\\\" end) as 'color';\",\"measures\":[[\"perc\",\"actual_travel_time_compare\"]],\"filters\":[[\"SA.EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ParentRecordId_Prior_2":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ParentRecordId.Priority\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{}},"ViolationsPerAgent_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"ViolationsPerAgent","query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(WO_Scatter_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = group q by 'Id'; q = foreach q generate sum('ActualEndTime_sec_epoch') as 'ActualEndTime_sec_epoch', sum('DueDate_sec_epoch') as 'DueDate_sec_epoch', 'Id' as 'Id', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name'; q = filter q by 'ActualEndTime_sec_epoch' > 'DueDate_sec_epoch'; q = group q by all; q = foreach q generate count() / unique('AssignedResource.User.User.Name') as 'avg_violations_per_agent';\",\"measures\":[[\"avg\",\"violations_per_agent\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"SLAViolationsCompare_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"SLAViolationsCompare","query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(WO_Scatter_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by 'ArrivalWindowEndTime_sec_epoch' > 0; q = filter q by 'ActualStartTime_sec_epoch' > 0; curr = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; curr = group curr by 'Id'; curr = foreach curr generate sum('ActualStartTime_sec_epoch') as 'ActualStartTime_sec_epoch', sum('ArrivalWindowEndTime_sec_epoch') as 'ArrivalWindowEndTime_sec_epoch', 'Id' as 'Id', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name';  curr = filter curr by 'ActualStartTime_sec_epoch' > 'ArrivalWindowEndTime_sec_epoch'; curr = group curr by all; curr = foreach curr generate count() / unique('AssignedResource.User.User.Name') as 'curr_sla_violations'; prev = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; prev = group prev by 'Id'; prev = foreach prev generate sum('ActualStartTime_sec_epoch') as 'ActualStartTime_sec_epoch', sum('ArrivalWindowEndTime_sec_epoch') as 'ArrivalWindowEndTime_sec_epoch', 'Id' as 'Id', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name';  prev = filter prev by 'ActualStartTime_sec_epoch' > 'ArrivalWindowEndTime_sec_epoch'; prev = group prev by all; prev = foreach prev generate count() / unique('AssignedResource.User.User.Name') as prev_sla_violations; u = union curr,prev; u = group u by all; u = foreach u generate 100*(sum('curr_sla_violations')-sum('prev_sla_violations') / sum('prev_sla_violations')) as perc_sla_violations;\",\"measures\":[[\"perc\",\"sla_violations\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ParentRecordId_Prior_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ParentRecordId.Priority\"],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"CreatedDate_Year_Cre_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"ActualDuration\"]],\"groups\":[\"{{cell(Time_Selection.selection, 0, \\\"compactGroup\\\").asObject()}}\"],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"],[\"ActualDuration\",[[0]],\">\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"vbar"}},"ServiceTerritoryId_N_2":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ServiceTerritoryId.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{}},"Status_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"StatusCategory\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{}},"Status_3":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"StatusCategory\"],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"FirstTimeFix_1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"FirstTimeFix","query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceAppointment\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"StatusCategory\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; i = filter q by 'StatusCategory' == \\\"CannotComplete\\\"; g = group q by all left, i by all; g = foreach g generate (1-(count(i)/count(q)))*100 as sum_first_time_fix;\",\"measures\":[[\"sum\",\"first_time_fix\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"SLA_Sort_1":{"broadcastFacet":false,"columns":{},"isGlobal":false,"label":"SLA_Sort","selectMode":"singlerequired","start":"{\"display\":[\"Descending\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"Ascending\",\"value\":\"asc\",\"compact_value\":true}","{\"display\":\"Descending\",\"value\":\"desc\",\"compact_value\":false}"]},"CreatedDate_Year_Cre_2":{"broadcastFacet":true,"datasets":[{"name":"AssignedResource","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q=load \\\"eadx__AssignedResource\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"SA.ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.result, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"SA.ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"SA.ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.result, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"SA.ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"User.User.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.result, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.result, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_1.result, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_3.result, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\\\")}}; q = filter q by 'ActualTravelTime' > 0; q = group q by {{cell(Time_Selection.selection, 0, \\\"SAGroupbyEarliestStartTime\\\").asObject()}}; z = foreach q generate avg('ActualTravelTime') as 'avg_ActualTravelTime', {{cell(Time_Selection.selection, 0, \\\"SAGenerateEarliestStartTime\\\").asObject()}};\",\"measures\":[[\"avg\",\"ActualTravelTime\"]],\"groups\":[\"{{cell(Time_Selection.selection, 0, \\\"SAcompactGroup\\\").asObject()}}\"],\"filters\":[[\"SA.EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"Avg_Travel_Time_2":{"broadcastFacet":true,"datasets":[{"name":"AssignedResource","namespace":"eadx"}],"isGlobal":false,"label":"Avg_Travel_Time","query":{"query":"{\"pigql\":\"q=load \\\"eadx__AssignedResource\\\"; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"SA.ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryId_N_2.result, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"SA.ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"SA.ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.result, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"SA.ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"User.User.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.result, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.result, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"SA.ParentRecordId.Priority\\\")}}; q = filter q by {{column(Status_1.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_1.result, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_3.selection, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{column(Status_3.result, [\\\"StatusCategory\\\"]).asEquality(\\\"SA.StatusCategory\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\\\")}}; q = filter q by {{cell(Time_Selection.result, 0, \\\"Current\\\").asDateRange(\\\"date('SA.EarliestStartTime_Year','SA.EarliestStartTime_Month','SA.EarliestStartTime_Day')\\\")}}; q = filter q by 'ActualTravelTime' > 0; q = group q by all; z = foreach q generate avg('ActualTravelTime') as 'avg_ActualTravelTime';\",\"measures\":[[\"avg\",\"ActualTravelTime\"]],\"filters\":[[\"SA.EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ParentRecordId_Accou_2":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ParentRecordId.AccountId.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false,"visualizationParameters":{}},"Mean_Time_to_Repair__1":{"broadcastFacet":true,"datasets":[{"name":"ServiceAppointment","namespace":"eadx"}],"isGlobal":false,"label":"Mean_Time_to_Repair_compare","query":{"query":"{\"pigql\":\"q=load \\\"eadx__ServiceAppointment\\\"; q = filter q by 'ActualDuration' > 0; q = filter q by {{column(ServiceTerritoryId_N_2.selection, [\\\"ServiceTerritoryId.Name\\\"]).asEquality(\\\"ServiceTerritoryId.Name\\\")}}; q = filter q by {{column(ParentRecordId_Accou_2.selection, [\\\"ParentRecordId.AccountId.Name\\\"]).asEquality(\\\"ParentRecordId.AccountId.Name\\\")}}; q = filter q by {{column(ServiceTerritoryMemb_1.selection, [\\\"AssignedResource.User.User.Name\\\"]).asEquality(\\\"AssignedResource.User.User.Name\\\")}}; q = filter q by {{column(ParentRecordId_Prior_2.selection, [\\\"ParentRecordId.Priority\\\"]).asEquality(\\\"ParentRecordId.Priority\\\")}}; curr = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; prev = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\\\")}}; g = group curr by all, prev by all; z = foreach g generate 100*((avg(curr['ActualDuration'])-avg(prev['ActualDuration']))/avg(prev['ActualDuration'])) as 'perc_mean_time_to_repair', (case when 100*((avg(curr['ActualDuration'])-avg(prev['ActualDuration']))/avg(prev['ActualDuration'])) < 0 then \\\"#0BA976\\\" when 100*(avg(curr['ActualDuration'])-avg(prev['ActualDuration']))/avg(prev['ActualDuration']) > 0 then \\\"#D14062\\\" else \\\"#54698D\\\" end) as 'color';\",\"measures\":[[\"perc\",\"mean_time_to_repair\"]],\"filters\":[[\"EarliestStartTime\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"lens_1":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"eadx__ServiceAppointment\";  q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; q = foreach q generate 'AppointmentNumber' as 'AppointmentNumber',  first('ParentRecordId.WorkOrderNumber') as 'ParentRecordId.WorkOrderNumber', first('ParentRecordId.WorkTypeId.Name') as 'ParentRecordId.WorkTypeId.Name', first('AssignedResource.User.User.Name') as 'AssignedResource.User.User.Name', sum('Duration') as 'Duration', sum('ActualDuration') as 'ActualDuration', first('ParentRecordId.AccountId.Name') as 'ParentRecordId.AccountId.Name', first('ServiceTerritoryId.Name') as 'ServiceTerritoryId.Name', first('ParentRecordId.Priority') as 'ParentRecordId.Priority', first('StatusCategory') as 'StatusCategory', first('DueDate') as 'DueDate', first('ProductConsumed.ProductName') as 'ProductConsumed.ProductName', first('ParentRecordId.CaseId') as 'ParentRecordId.CaseId'; q = order q by 'AppointmentNumber' asc;q = limit q 100;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":false}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"container_19":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_18":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_17":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_16":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_15":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_14":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_13":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"number_Mean_Time_to_Repair_1":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_mean_time_to_repair","numberColor":"#ffffff","numberSize":12,"showActionMenu":true,"step":"Mean_Time_to_Repair__1","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"link_Work_Order_Overview":{"parameters":{"destination":"0FKB00000005vcnOAA","destinationType":"dashboard","fontSize":12,"includeState":true,"text":"Work Order Overview","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"number_FirstTimeFix_11":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_first_time_fix","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"FirstTimeFix_1","textAlignment":"left","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"chart_ViolationsChart_1":{"parameters":{"autoFitMode":"keepLabels","totalValue":"computeTotal","showValues":false,"legend":{"showHeader":false,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","visualizationType":"stackhbar","exploreLink":true,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"totalLabel":"","showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":""},"normalize":false,"step":"ViolationsChart_1","theme":"light","dimensionAxis":{"showTitle":false,"customSize":"auto","showAxis":true,"title":""}},"type":"chart"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_6":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_21":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_20":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"listselector_Status_1":{"parameters":{"compact":false,"displayMode":"combo","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"count","showActionMenu":false,"step":"Status_1","title":"Status"},"type":"listselector"},"text_First_Time_Fix":{"parameters":{"content":{"displayTemplate":"First Time Fix"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"text__Work_Orders":{"parameters":{"content":{"displayTemplate":"# Work Orders"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"chart_ParentRecordId_Prior_1":{"parameters":{"totalValue":"computeTotal","legend":{"showHeader":false,"show":true,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"visualizationType":"pie","exploreLink":true,"title":{"label":"Work Order Priority","align":"left","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"inner":70,"totalLabel":"","showActionMenu":true,"showTotal":false,"step":"ParentRecordId_Prior_1","theme":"dark"},"type":"chart"},"number_all_31":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_first_time_fix","numberColor":"#FFFFFF","numberSize":16,"showActionMenu":true,"step":"all_3","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"listselector_ServiceTerritoryId_N_2":{"parameters":{"compact":false,"displayMode":"combo","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"ServiceTerritoryId_N_2","title":"Territory"},"type":"listselector"},"pillbox_Sort_1":{"parameters":{"compact":false,"displayTemplate":"[]","exploreLink":false,"fontSize":16,"selectedTab":{"backgroundColor":"#677A97","borderEdges":[],"textColor":"#FFFFFF"},"showActionMenu":true,"step":"Sort_1","textColor":"#5C7A99"},"type":"pillbox"},"chart_CreatedDate_Year_Cre_2":{"parameters":{"totalValue":"computeTotal","showPoints":false,"legend":{"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":true,"showAxis":true,"title":"Earliest Start Permitted"},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"totalLabel":"","fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":false,"title":""},"step":"CreatedDate_Year_Cre_2","theme":"light"},"type":"chart"},"chart_CreatedDate_Year_Cre_1":{"parameters":{"totalValue":"computeTotal","showPoints":false,"legend":{"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":true,"timeAxis":{"showTitle":true,"showAxis":true,"title":"Earliest Start Permitted"},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"totalLabel":"","fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":false,"title":""},"step":"CreatedDate_Year_Cre_1","theme":"light"},"type":"chart"},"number_SLAViolations_1":{"parameters":{"compact":false,"exploreLink":true,"numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"SLAViolations_1","textAlignment":"left","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"table_lens_1":{"parameters":{"columnProperties":{},"columns":[],"customBulkActions":[],"exploreLink":true,"maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","showActionMenu":true,"step":"lens_1"},"type":"table"},"listselector_ParentRecordId_Accou_2":{"parameters":{"compact":false,"displayMode":"combo","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"ParentRecordId_Accou_2","title":"Account"},"type":"listselector"},"container_12":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_11":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_10":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"chart_Status_3":{"parameters":{"totalValue":"computeTotal","legend":{"showHeader":false,"show":true,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"visualizationType":"pie","exploreLink":true,"title":{"label":"Work Order Status","align":"left","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"inner":70,"totalLabel":"","showActionMenu":true,"showTotal":false,"step":"Status_3","theme":"dark"},"type":"chart"},"number_Avg_Travel_Time_2":{"parameters":{"compact":false,"exploreLink":false,"measureField":"avg_ActualTravelTime","numberColor":"#335779","numberSize":16,"showActionMenu":true,"step":"Avg_Travel_Time_2","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"number_ViolationsCompare_1":{"parameters":{"compact":false,"exploreLink":true,"numberColor":"#FFFFFF","numberSize":16,"showActionMenu":true,"step":"ViolationsCompare_1","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"number_all_3":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_first_time_fix","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"all_3","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"number_all_2":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_actual_travel_time_compare","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"all_2","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"text_Avg_SLA_Violations_Agent":{"parameters":{"content":{"displayTemplate":"Avg SLA Violations / Agent"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_Avg_Travel_Time_minutes_":{"parameters":{"content":{"displayTemplate":"Avg Travel Time (minutes)"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"number_ActualDuration_1":{"parameters":{"compact":false,"exploreLink":true,"measureField":"avg_ActualDuration","numberColor":"#335779","numberSize":18,"showActionMenu":true,"step":"ActualDuration_1","textAlignment":"left","title":"","titleColor":"#335779","titleSize":18},"type":"number"},"pillbox_SLA_Sort_1":{"parameters":{"compact":false,"exploreLink":false,"fontSize":16,"selectedTab":{"backgroundColor":"#677A97","borderEdges":[],"textColor":"#FFFFFF"},"showActionMenu":true,"step":"SLA_Sort_1","textColor":"#5C7A99"},"type":"pillbox"},"chart_FirstTimeFixChart_1":{"parameters":{"totalValue":"computeTotal","showPoints":false,"legend":{"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":true,"showAxis":true,"title":"Earliest Start Permitted"},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"totalLabel":"","fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":false,"title":""},"step":"FirstTimeFixChart_1","theme":"light"},"type":"chart"},"chart_ParentRecordId_Creat_1":{"parameters":{"totalValue":"computeTotal","showPoints":false,"legend":{"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","timeAxis":{"showTitle":true,"showAxis":true,"title":"Earliest Start Permitted"},"exploreLink":true,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"totalLabel":"","fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":false,"title":"#WO"},"step":"ParentRecordId_Creat_1","theme":"dark"},"type":"chart"},"text_Technician_Performance":{"parameters":{"content":{"displayTemplate":"Technician Performance"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"rgb(99, 79, 149)"},"type":"text"},"chart_WO_Scatter_1":{"parameters":{"totalValue":"computeTotal","totalLabel":"","showActionMenu":true,"legend":{"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"x":{"sqrtScale":false,"showZero":true,"showTitle":true,"showAxis":true,"title":""},"visualizationType":"scatter","y":{"sqrtScale":false,"showZero":true,"showTitle":true,"showAxis":true,"title":""},"step":"WO_Scatter_1","theme":"dark","exploreLink":false,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4}},"type":"chart"},"number_WO_prev_compare_1":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_Percent","numberColor":"#FFFFFF","numberSize":16,"showActionMenu":true,"step":"WO_prev_compare_1","textAlignment":"center","title":"","titleColor":"#FFFFFF","titleSize":16},"type":"number"},"listselector_ServiceTerritoryMemb_1":{"parameters":{"compact":false,"displayMode":"combo","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"ServiceTerritoryMemb_1","title":"Resource"},"type":"listselector"},"number_SLAViolationsCompare_1":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_sla_violations","numberColor":"#FFFFFF","numberSize":16,"showActionMenu":true,"step":"SLAViolationsCompare_1","textAlignment":"center","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"chart_SLAViolationsChart_1":{"parameters":{"autoFitMode":"keepLabels","totalValue":"computeTotal","showValues":false,"legend":{"showHeader":false,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","visualizationType":"stackhbar","exploreLink":false,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"totalLabel":"","showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":""},"normalize":false,"step":"SLAViolationsChart_1","theme":"light","dimensionAxis":{"showTitle":false,"customSize":"auto","showAxis":true,"title":""}},"type":"chart"},"chart_FirstTimeFixChart_2":{"parameters":{"autoFitMode":"keepLabels","totalValue":"computeTotal","showValues":false,"bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"showHeader":false,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","visualizationType":"hbar","exploreLink":false,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"binValues":false,"totalLabel":"","showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":""},"step":"FirstTimeFixChart_2","theme":"light","dimensionAxis":{"showTitle":false,"customSize":"auto","showAxis":true,"title":""}},"type":"chart"},"text_Due_Date_Violations_Agent":{"parameters":{"content":{"displayTemplate":"Due Date Violations / Agent"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_Metrics_compared_to_prior_period":{"parameters":{"content":{"displayTemplate":"Metrics compared to prior period"},"fontSize":14,"showActionMenu":true,"textAlignment":"center","textColor":"#5C7A99"},"type":"text"},"text__Metrics_compared_to_prior_period":{"parameters":{"content":{"displayTemplate":"* Metrics compared to prior period"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"#5C7A99"},"type":"text"},"listselector_Time_Selection":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"showActionMenu":false,"step":"Time_Selection","title":"Date Range"},"type":"listselector"},"text_Work_Order_Volume":{"parameters":{"content":{"displayTemplate":"Work Order Volume"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"number_ViolationsPerAgent_1":{"parameters":{"compact":false,"exploreLink":true,"numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"ViolationsPerAgent_1","textAlignment":"left","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"number_ParentRecordId_1":{"parameters":{"compact":false,"exploreLink":true,"measureField":"count","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"ParentRecordId_1","textAlignment":"left","title":"","titleColor":"#335779","titleSize":10},"type":"number"},"text_Technician_Performance1":{"parameters":{"content":{"displayTemplate":"Technician Performance"},"fontSize":24,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"text_Work_Order_Detail_Table":{"parameters":{"content":{"displayTemplate":"Work Order Detail Table"},"fontSize":16,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"},"number_FirstTimeFix_1":{"parameters":{"compact":false,"exploreLink":true,"measureField":"sum_first_time_fix","numberColor":"#335779","numberSize":18,"showActionMenu":true,"step":"FirstTimeFix_1","textAlignment":"right","title":"","titleColor":"#335779","titleSize":16},"type":"number"},"listselector_ParentRecordId_Prior_2":{"parameters":{"compact":false,"displayMode":"combo","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"ParentRecordId_Prior_2","title":"Priority"},"type":"listselector"},"text_First_Time_Fix_Rate":{"parameters":{"content":{"displayTemplate":"First Time Fix Rate"},"fontSize":14,"showActionMenu":true,"textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_Mean_Time_to_Repair_minutes_":{"parameters":{"content":{"displayTemplate":"Mean Time to Repair (minutes)"},"fontSize":12,"showActionMenu":true,"textAlignment":"left","textColor":"#091A3E"},"type":"text"}}}