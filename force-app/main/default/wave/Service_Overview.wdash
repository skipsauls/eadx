{"dataSourceLinks":[],"filters":[],"gridLayouts":[{"maxWidth":1360,"name":"Default","numColumns":41,"pages":[{"name":"Default","navigationHidden":false,"widgets":[{"colspan":19,"column":11,"name":"text_Manager_Overview","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":5,"column":18,"name":"listselector_Time_Selection","row":6,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(124, 108, 187)","borderEdges":[],"borderWidth":8}},{"colspan":9,"column":1,"name":"number_count_open_case","row":19,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":9,"column":11,"name":"number_avg_Duration","row":19,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":9,"column":21,"name":"number_avg_FCR_Percent","row":19,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":9,"column":31,"name":"number_avg_CSAT","row":19,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":3,"name":"number_Compare_Backlog","row":27,"rowspan":2,"widgetStyle":{"backgroundColor":"{{cell(Compare_Backlog.result, 0, \"color\").asString()}}","borderColor":"{{cell(Compare_Backlog.result, 0, \"color\").asString()}}","borderEdges":[],"borderRadius":4,"borderWidth":8}},{"colspan":5,"column":13,"name":"number_Duration_PrevPeriod","row":27,"rowspan":2,"widgetStyle":{"backgroundColor":"{{cell(Duration_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(Duration_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":[],"borderRadius":4,"borderWidth":8}},{"colspan":5,"column":23,"name":"number_FCR_PrevPeriod","row":27,"rowspan":2,"widgetStyle":{"backgroundColor":"{{cell(CaseResolution_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(FCR_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":[],"borderRadius":4,"borderWidth":8}},{"colspan":5,"column":33,"name":"number_CSAT_PrevPeriod","row":27,"rowspan":2,"widgetStyle":{"backgroundColor":"{{cell(Accounts_with_OpenCases_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(CSAT_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":[],"borderRadius":4,"borderWidth":8}},{"colspan":9,"column":1,"name":"chart_Backlog_Trend_OverTime","row":30,"rowspan":13,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":9,"column":11,"name":"chart_avg_duration_over_time","row":30,"rowspan":13,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":9,"column":21,"name":"chart_avg_FCR_Over_Time","row":30,"rowspan":13,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":9,"column":31,"name":"chart_avg_CSAT_over_time","row":30,"rowspan":13,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":9,"column":1,"name":"link_Review_Backlog","row":53,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":9,"column":11,"name":"link_Activity_Overview","row":53,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":9,"column":31,"name":"container_44","row":12,"rowspan":32,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":21,"name":"container_45","row":12,"rowspan":32,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":11,"name":"container_46","row":12,"rowspan":32,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"container_47","row":12,"rowspan":32,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":39,"column":1,"name":"container_Navigation_links","row":46,"rowspan":24,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#634F95","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_CasesLinks_Header","row":47,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"link_Prioritize_Open_Cases","row":50,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":11,"name":"text_TeamLinks_Header","row":47,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":21,"name":"text_ChannelLinks_Header","row":47,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":31,"name":"text_AccountsLinks_Header","row":47,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":11,"name":"link_Review_Agents","row":50,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":31,"name":"link_Review_Accounts","row":50,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"link_Header_Backlog","row":12,"rowspan":6,"widgetStyle":{"backgroundColor":"#634F95","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":11,"name":"link_Header_Agent_Performance","row":12,"rowspan":6,"widgetStyle":{"backgroundColor":"#634F95","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":21,"name":"link_Header_Channel_Review","row":12,"rowspan":6,"widgetStyle":{"backgroundColor":"#634F95","borderColor":"#634F95","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":31,"name":"link_Header_Account_Review","row":12,"rowspan":6,"widgetStyle":{"backgroundColor":"#634F95","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":21,"name":"link_Review_Channels","row":50,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#091A3E","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original","gutterColor":"#091A3E"},"version":1.0},{"name":"iPhone","numColumns":6,"pages":[{"name":"iPhone","navigationHidden":false,"widgets":[{"colspan":6,"column":0,"name":"container_49","row":0,"rowspan":6,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"listselector_Time_Selection","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(124, 108, 187)","borderEdges":[],"borderWidth":8}},{"colspan":6,"column":0,"name":"text_Manager_Overview","row":0,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":3,"column":0,"name":"number_count_open_case","row":9,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":0,"name":"number_Compare_Backlog","row":15,"rowspan":3,"widgetStyle":{"backgroundColor":"{{cell(Compare_Backlog.result, 0, \"color\").asString()}}","borderColor":"{{cell(Compare_Backlog.result, 0, \"color\").asString()}}","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":3,"column":3,"name":"chart_Backlog_Trend_OverTime","row":9,"rowspan":9,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":6,"column":0,"name":"container_47","row":6,"rowspan":12,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":8,"borderWidth":8}},{"colspan":3,"column":0,"name":"number_avg_Duration","row":21,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":0,"name":"number_Duration_PrevPeriod","row":27,"rowspan":3,"widgetStyle":{"backgroundColor":"{{cell(Duration_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(Duration_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":3,"column":3,"name":"chart_avg_duration_over_time","row":21,"rowspan":9,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":6,"column":0,"name":"container_46","row":18,"rowspan":12,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":8,"borderWidth":8}},{"colspan":3,"column":0,"name":"number_avg_FCR_Percent","row":33,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":0,"name":"number_FCR_PrevPeriod","row":39,"rowspan":3,"widgetStyle":{"backgroundColor":"{{cell(CaseResolution_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(FCR_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":3,"column":3,"name":"chart_avg_FCR_Over_Time","row":33,"rowspan":9,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":6,"column":0,"name":"container_45","row":30,"rowspan":12,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":8,"borderWidth":8}},{"colspan":3,"column":0,"name":"number_avg_CSAT","row":45,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":0,"name":"number_CSAT_PrevPeriod","row":51,"rowspan":3,"widgetStyle":{"backgroundColor":"{{cell(Accounts_with_OpenCases_PrevPeriod.result, 0, \"color\").asString()}}","borderColor":"{{cell(CSAT_PrevPeriod.result, 0, \"color\").asString()}}","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":3,"column":3,"name":"chart_avg_CSAT_over_time","row":45,"rowspan":9,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"],"borderWidth":8}},{"colspan":6,"column":0,"name":"container_44","row":42,"rowspan":12,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":8,"borderWidth":8}},{"colspan":6,"column":0,"name":"text_CasesLinks_Header","row":54,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"text_TeamLinks_Header","row":66,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"text_ChannelLinks_Header","row":90,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"text_AccountsLinks_Header","row":78,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_Prioritize_Open_Cases","row":57,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_Review_Backlog","row":60,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":6,"column":0,"name":"link_Review_Agents","row":69,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_Activity_Overview","row":72,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}},{"colspan":6,"column":0,"name":"link_Review_Accounts","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_Review_Channels","row":93,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"container_Navigation_links","row":54,"rowspan":64,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#634F95","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_iphone_Header_Agent_Performance","row":18,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#634F95","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_iphone_Header_Backlog","row":6,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#634F95","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_iphone_Channel_Review","row":30,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#634F95","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"link_iphone_Account_Review","row":42,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#634F95","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":2,"name":"text_dummy","row":115,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":["maxWidth(599)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#E6ECF2","cellSpacingX":0,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"count_case_by_accounts":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"label":"donut_cases_account","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.Name\"],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"],[\"CreatedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"centerText":"","centerValueType":"number","legend":{"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"valueType":"compactNumber","visualizationType":"pie","theme":"wave","title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","chartsPerLine":4},"inner":60},"type":"chart"}},"Compare_Backlog":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\";ENDTOTAL = filter q by 'IsClosed' == \\\"false\\\"; updcreatedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; updclosedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}};compare = group updcreatedTOTAL by all full, updclosedTOTAL by all full, ENDTOTAL by all; compare = foreach compare generate (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 as 'unique_Percent', (case when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 < 0 then \\\"#3CAF6D\\\" when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"case_volume_per_channel":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"label":"case_volume_per_channel","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Origin\"],\"filters\":[[\"CreatedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"centerText":"","centerValueType":"number","legend":{"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"valueType":"compactNumber","visualizationType":"pie","theme":"wave","title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","chartsPerLine":4},"inner":60},"type":"chart"}},"static_Duration":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Case Duration\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"Case Duration\",\"value\":[\"avg\",\"DurationCalculatedField\"],\"pigql_value\":\"DurationCalculatedField\",\"measure_field\":\"avg_DurationCalculatedField\"}"],"visualizationParameters":{}},"avg_Duration":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"DurationCalculatedField\"]],\"filters\":[[\"IsClosed\",[\"true\"],\"in\"],[\"CreatedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"avg_FCR_Over_Time":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"Percent\",null]],\"pigql\":\"created = load \\\"eadx__ServiceCase\\\";created = filter created by 'IsClosed' == \\\"true\\\";created = filter created by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; b = filter created by '' == \\\"true\\\";d = cogroup created by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}} full, b by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}};f = foreach d generate {{cell(Time_Selection.selection, 0, \\\"GenerateCoGroupDate\\\").asObject()}}, coalesce((count(b)/ count(created)) * 100, 0) as 'avg_Percent', \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping'; e = foreach d generate {{cell(Time_Selection.selection, 0, \\\"GenerateCoGroupDate\\\").asObject()}}, {{coalesce(cell(avg_FCR_Percent.result, 0, \\\"avg_Percent\\\"),0).asObject()}} as 'avg_Percent', \\\"Overall Average for Period\\\" as 'Grouping'; final = union f,e;\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Grouping\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"avg_Backlog":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":\"{{column(Time_Selection.selection, [\\\"Measure\\\"]).asObject()}}\",\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; created = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; closed = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}}; current = filter q by 'IsClosed' == \\\"false\\\"; current = group current by all;current = foreach current generate \\\"Today\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"trendProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count() as backlog;diff = group created by ('CreatedDate_Year', {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}}) full, closed by ('ClosedDate_Year', {{cell(Time_Selection.selection, 0, \\\"ClosedField\\\").asObject()}});diff = foreach diff generate \\\"Begining\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"CreatedProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count(closed) - count(created) as backlog;combined = union current, diff;combined = group combined by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}},'time');combined = foreach combined generate 'time' as 'time', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, sum(sum(backlog)) over([0 ..] partition by all order by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}})) as Backlog_Count; combined = filter combined by 'time' == \\\"Begining\\\";final = group combined by all; final = foreach final generate avg('Backlog_Count') as 'Backlog_Count'\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"avg_duration_over_time":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"DurationCalculatedField\",null]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\";q = group q by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}; r = foreach q generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, avg('DurationCalculatedField') as 'DurationCalculatedField', \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping' ;s = foreach q generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, {{coalesce(cell(avg_Duration.result, 0, \\\"avg_DurationCalculatedField\\\"),0).asObject()}} as 'avg_DurationCalculatedField', \\\"Overall Average for Period\\\" as 'Grouping'; final = union s, r;\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Grouping\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"avg_FCR_Percent":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; a = filter q by 'IsClosed' == \\\"true\\\"; a = filter a by '' == \\\"true\\\";  b = filter q by 'IsClosed' == \\\"true\\\"; c = cogroup a by all full, b by all; c = foreach c generate coalesce((count(a)/ count(b)) * 100, 0) as 'avg_Percent';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"avg_CaseResolution_Percent":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"avg\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; a = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}};  b = cogroup q by all full, a by all; b = foreach b generate coalesce((count(a)/ count(q)) * 100, 0) as 'avg_Percent';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"options":{},"visualizationType":"hbar"}},"Duration_PrevPeriod":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by 'IsClosed' == \\\"true\\\"; r = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') as 'perc_Percent', (case when 100*(avg(s.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') < 0 then \\\"#3CAF6D\\\" when 100*(avg(s.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"count_case_by_sla":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"\"],\"filters\":[[\"CreatedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"pie"}},"count_open_case":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Time_Selection":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Last 180 Days\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"YTD\",\"text_display\":\"vs prior YTD\",\"Backlog30DayClose\":\"[\\\"current day - 395 days\\\"..\\\"current day - 1 year\\\"]\",\"BacklogCompare\":[\"current day - 1 year\",\"current day\"],\"BacklogLabel\":\"Backlog Last Year\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate_Month')\",\"Compact\":[[\"year\",0],[\"year\",0]],\"CreatedField\":\"'CreatedDate_Month'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month'] end)\",\"Current\":[\"current year\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month\",\"LastPeriodCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"LastYearCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\"],\"filter\":\"year\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"QTD\",\"text_display\":\"vs prior QTD\",\"Backlog30DayClose\":\"[\\\"current day - 120 days\\\"..\\\"current day - 1 quarter\\\"]\",\"BacklogCompare\":[\"current day - 1 quarter\",\"current day\"],\"BacklogLabel\":\"Backlog Last Quarter\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate_Week')\",\"Compact\":[[\"quarter\",0],[\"quarter\",0]],\"CreatedField\":\"'CreatedDate_Week'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Week'] end)\",\"Current\":[\"current quarter\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Week')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Week\",\"LastPeriodCompare\":[\"current quarter - 1 quarter\",\"current day - 1 quarter\"],\"LastYearCompare\":[\"current quarter - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Week\"],\"filter\":\"quarter\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"MTD\",\"text_display\":\"vs prior MTD\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 1 month\\\"]\",\"BacklogCompare\":[\"current day - 1 month\",\"current day\"],\"BacklogLabel\":\"Backlog Last Month\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate_Month','CreatedDate_Day')\",\"Compact\":[[\"month\",0],[\"month\",0]],\"CreatedField\":\"'CreatedDate_Month','CreatedDate_Day'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month']+\\\"~~~\\\"+closed['ClosedDate_Day'] end)\",\"Current\":[\"current month\",\"current month\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month'+\\\"~~~\\\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day\",\"LastPeriodCompare\":[\"current month - 1 month\",\"current day - 1 month\"],\"LastYearCompare\":[\"current month - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\",\"CreatedDate_Day\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month']+\\\"~~~\\\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 7 Days\",\"text_display\":\"vs prior 7 days\",\"Backlog30DayClose\":\"[\\\"current day - 37 days\\\"..\\\"current day - 7 days\\\"]\",\"BacklogCompare\":[\"current day - 1 week\",\"current day\"],\"BacklogLabel\":\"Backlog Last 7 Days\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate_Month','CreatedDate_Day')\",\"Compact\":[[\"day\",-7],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Month','CreatedDate_Day'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month']+\\\"~~~\\\"+closed['ClosedDate_Day'] end)\",\"Current\":[\"7 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month'+\\\"~~~\\\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day\",\"LastPeriodCompare\":[\"7 days ago - 1 week\",\"current day - 1 week\"],\"LastYearCompare\":[\"7 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\",\"CreatedDate_Day\"],\"filter\":\"week\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month']+\\\"~~~\\\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 30 Days\",\"text_display\":\"vs prior 30 Days\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 30 days\\\"]\",\"BacklogCompare\":[\"current day - 30 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 30 Days\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate_Week')\",\"Compact\":[[\"day\",-30],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Week'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Week'] end)\",\"Current\":[\"30 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Week')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Week\",\"LastPeriodCompare\":[\"30 days ago - 30 days\",\"current day - 30 days\"],\"LastYearCompare\":[\"30 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Week\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 180 Days\",\"text_display\":\"vs prior 180 days\",\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":[\"current day - 180 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 180 Days\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Month'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month'] end)\",\"Current\":[\"180 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month\",\"LastPeriodCompare\":[\"180 days ago - 180 days\",\"current day - 180 days\"],\"LastYearCompare\":[\"180 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Year\",\"CreatedDate_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}"],"visualizationParameters":{}},"CaseResolution_PrevPeriod":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; prevq = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; preva = filter prevq by 'IsClosed' == \\\"true\\\"; prevb = cogroup prevq by all full, preva by all; prevb = foreach prevb generate coalesce((count(preva)/ count(prevq)) * 100, 0) as 'avg_Percent'; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; a = filter q by 'IsClosed' == \\\"true\\\";  b = cogroup q by all full, a by all; b = foreach b generate coalesce((count(a)/ count(q)) * 100, 0) as 'avg_Percent'; t = group prevb by all, b by all; t = foreach t generate 100*(avg(b.'avg_Percent')-avg(prevb.'avg_Percent'))/avg(prevb.'avg_Percent') as 'perc_Percent', (case when 100*(avg(b.'avg_Percent')-avg(prevb.'avg_Percent'))/avg(prevb.'avg_Percent') < 0 then \\\"#f2536d\\\" when 100*(avg(b.'avg_Percent')-avg(prevb.'avg_Percent'))/avg(prevb.'avg_Percent') > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"measures\":[[\"perc\",\"Percent\"]],\"measuresMap\":{},\"groups\":[]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"Backlog_Trend_OverTime":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":\"{{column(Time_Selection.selection, [\\\"Measure\\\"]).asObject()}}\",\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; created = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; closed = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}}; current = filter q by 'IsClosed' == \\\"false\\\"; current = group current by all;current = foreach current generate \\\"Today\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"trendProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count() as backlog;diff = group created by ('CreatedDate_Year', {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}}) full, closed by ('ClosedDate_Year', {{cell(Time_Selection.selection, 0, \\\"ClosedField\\\").asObject()}});diff = foreach diff generate \\\"Begining\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"CreatedProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count(closed) - count(created) as backlog;combined = union current, diff;combined = group combined by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}},'time');combined = foreach combined generate 'time' as 'time', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, sum(sum(backlog)) over([0 ..] partition by all order by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}})) as Backlog_Count; combined = filter combined by 'time' == \\\"Begining\\\"; f1 = foreach combined generate 'Backlog_Count' as 'Backlog_Count',{{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping'; f2 = foreach combined generate {{coalesce(cell(avg_Backlog.result, 0, \\\"Backlog_Count\\\"),0).asObject()}} as 'Backlog_Count', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, \\\"Overall Average for Period\\\" as 'Grouping'; final = union f1, f2 \",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Grouping\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"CSAT_PrevPeriod":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; q = filter q by 'CSAT' >= -10; q = filter q by 'IsClosed' == \\\"true\\\"; r = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') as 'perc_Percent', (case when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') < 0 then \\\"#f2536d\\\" when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Accounts_with_OpenCases":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"AccountId\"]],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"],[\"CreatedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"FCR_PrevPeriod":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"eadx__ServiceCase\\\"; prevq = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; preva = filter prevq by 'IsClosed' == \\\"true\\\"; preva = filter preva by '' == \\\"true\\\";  prevb = filter prevq by 'IsClosed' == \\\"true\\\"; prevc = cogroup preva by all full, prevb by all; prevc = foreach prevc generate coalesce((count(preva)/ count(prevb)) * 100, 0) as 'avg_Percent'; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; a = filter q by 'IsClosed' == \\\"true\\\"; a = filter a by '' == \\\"true\\\";  b = filter q by 'IsClosed' == \\\"true\\\"; c = cogroup a by all full, b by all; c = foreach c generate coalesce((count(a)/ count(b)) * 100, 0) as 'avg_Percent'; t = group prevc by all, c by all; t = foreach t generate 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') as 'perc_Percent', (case when 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') < 0 then \\\"#f2536d\\\" when 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"measures\":[[\"perc\",\"Percent\"]],\"measuresMap\":{},\"groups\":[]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"Accounts_with_OpenCases_PrevPeriod":{"broadcastFacet":true,"datasets":[{"name":"ServiceCase","namespace":"eadx"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"open = load \\\"eadx__ServiceCase\\\";open = filter open by 'IsClosed' == \\\"false\\\";cur = filter open by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}};cur = group cur by 'all';cur = foreach cur generate unique('AccountId') as 'current_Account';prev = filter open by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; prev = group prev by 'all'; prev = foreach prev generate unique('AccountId') as 'prev_Account'; compare = group cur by 'all', prev by 'all'; compare = foreach compare generate 100 * ((avg(cur.'current_Account') - avg(prev.'prev_Account')) / avg(prev.'prev_Account')) as 'perc_Percent', case when (((100 * (avg(cur.'current_Account') - avg(prev.'prev_Account'))) / avg(prev.'prev_Account')) < 0) then \\\"#3CAF6D\\\" when (((100 * (avg(cur.'current_Account') - avg(prev.'prev_Account'))) / avg(prev.'prev_Account')) > 0) then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end as 'color';\",\"measures\":[[\"perc\",\"Percent\"]],\"measuresMap\":{},\"groups\":[]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"link_Performance_Overview":{"parameters":{"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"Performance Overview","textColor":"#5C7A99"},"type":"link"},"container_19":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_18":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_17":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_16":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_15":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_14":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_13":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"chart_avg_FCR_Over_Time":{"parameters":{"showPoints":false,"legend":{"showHeader":false,"show":false,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"axisMode":"multi","visualizationType":"pie","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"referenceLines":[{"color":"#634F95","label":{"data":"Avg","type":"static"},"value":{"data":"{{coalesce(cell(avg_FCR_Percent.result, 0, \"avg_Percent\"),0).asObject()}}","type":"static"}}],"showAxis":true,"title":""},"step":"case_volume_per_channel","theme":"light"},"type":"chart"},"number_Compare_Backlog":{"parameters":{"compact":false,"exploreLink":true,"measureField":"unique_Percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Compare_Backlog","textAlignment":"center","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_CasesLinks_Header":{"parameters":{"content":{"displayTemplate":"CASES"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"#A3B8CC"},"type":"text"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_Review_Accounts":{"parameters":{"destination":"0FKB00000009TxVOAU","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Review Accounts","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_Review_Channels":{"parameters":{"destination":"0FKB00000009TxbOAE","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Review Channels","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_23":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_6":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_Review_Backlog":{"parameters":{"destination":"0FKB00000009TxUOAU","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Review Backlog","textAlignment":"center","textColor":"#FFFFFF","visualizationType":"hbar"},"type":"link"},"container_22":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_21":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_20":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"number_Duration_PrevPeriod":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_Percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Duration_PrevPeriod","textAlignment":"center","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"link_Account_Overview":{"parameters":{"destinationType":"dashboard","fontSize":12,"includeState":false,"text":"Account Overview","textColor":"#5C7A99"},"type":"link"},"link_iphone_Channel_Review":{"parameters":{"destination":"0FKB00000009TxbOAE","destinationType":"dashboard","fontSize":16,"includeState":false,"text":"Channel Review","textAlignment":"left","textColor":"#091A3E"},"type":"link"},"container_49":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_47":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_46":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"link_Review_Open_Cases":{"parameters":{"destination":"0FKB00000009TxZOAU","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Review Open Cases","textAlignment":"center","textColor":"rgb(89, 65, 149)","visualizationType":"hbar"},"type":"link"},"text_TeamLinks_Header":{"parameters":{"content":{"displayTemplate":"TEAM"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"#A3B8CC"},"type":"text"},"number_FCR_PrevPeriod":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_Percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"CaseResolution_PrevPeriod","textAlignment":"center","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"chart_avg_CSAT_over_time":{"parameters":{"showPoints":false,"legend":{"showHeader":false,"show":false,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"axisMode":"multi","visualizationType":"pie","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"referenceLines":[{"color":"#634F95","label":{"data":"Avg","type":"static"},"value":{"data":"{{coalesce(cell(avg_CSAT.result, 0, \"avg_CSAT\"),0).asObject()}}","type":"static"}}],"showAxis":true,"title":""},"step":"count_case_by_accounts","theme":"light"},"type":"chart"},"link_Review_Agents":{"parameters":{"destination":"0FKB00000009TxYOAU","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Review Agents","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_Header_Agent_Performance":{"parameters":{"destination":"0FKB00000009TxYOAU","destinationType":"dashboard","fontSize":16,"includeState":false,"text":"Agent Performance","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"text_AccountsLinks_Header":{"parameters":{"content":{"displayTemplate":"ACCOUNTS"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"#A3B8CC"},"type":"text"},"container_12":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_11":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_10":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"chart_Backlog_Trend_OverTime":{"parameters":{"showPoints":false,"legend":{"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"title":{"label":"","align":"left","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"referenceLines":[{"color":"#634F95","label":{"data":"Avg","type":"static"},"value":{"data":"{{coalesce(cell(avg_Backlog.result, 0, \"Backlog_Count\"),0).asObject()}}","type":"static"}}],"showAxis":true,"title":""},"step":"Backlog_Trend_OverTime","theme":"light"},"type":"chart"},"text_Manager_Overview":{"parameters":{"content":{"displayTemplate":"Service Manager Overview"},"fontSize":24,"showActionMenu":true,"textAlignment":"center","textColor":"rgb(255, 255, 255)"},"type":"text"},"link_Header_Channel_Review":{"parameters":{"destination":"0FKB00000009TxbOAE","destinationType":"dashboard","fontSize":16,"includeState":false,"text":"Channel Review","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"container_39":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_iphone_Account_Review":{"parameters":{"destinationType":"lens","fontSize":16,"includeState":false,"text":"Account Review","textAlignment":"left","textColor":"#091A3E"},"type":"link"},"container_38":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_37":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_36":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_35":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_ChannelLinks_Header":{"parameters":{"content":{"displayTemplate":"CHANNELS"},"fontSize":12,"showActionMenu":true,"textAlignment":"center","textColor":"#A3B8CC"},"type":"text"},"number_count_open_case":{"parameters":{"compact":false,"exploreLink":true,"fontSize":40,"measureField":"count","numberColor":"#091A3E","numberSize":32,"showActionMenu":true,"step":"count_open_case","textAlignment":"center","textColor":"rgb(32, 44, 88)","title":"Open Cases","titleColor":"#091A3E","titleSize":14},"type":"number"},"link_Prioritize_Open_Cases":{"parameters":{"destination":"0FKB00000009TxZOAU","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Prioritize Open Cases","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"container_Navigation_links":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"link_Activity_Overview":{"parameters":{"destination":"0FKB00000009TxWOAU","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Activity Overview","textAlignment":"center","textColor":"#FFFFFF","visualizationType":"hbar"},"type":"link"},"text_Channel_Review":{"parameters":{"content":{"displayTemplate":"Channel Review"},"fontSize":16,"showActionMenu":true,"textAlignment":"center","textColor":"#FFFFFF"},"type":"text"},"number_CSAT_PrevPeriod":{"parameters":{"compact":false,"exploreLink":true,"measureField":"perc_Percent","numberColor":"#FFFFFF","numberSize":12,"showActionMenu":true,"step":"Accounts_with_OpenCases_PrevPeriod","textAlignment":"center","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"container_45":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_44":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"container_43":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_42":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_41":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_40":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_iphone_Header_Backlog":{"parameters":{"destination":"0FKB00000009TxUOAU","destinationType":"dashboard","fontSize":16,"includeState":false,"text":"Backlog","textAlignment":"left","textColor":"#091A3E"},"type":"link"},"listselector_Time_Selection":{"parameters":{"compact":false,"displayMode":"combo","expanded":false,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"","showActionMenu":false,"step":"Time_Selection","title":""},"type":"listselector"},"link_iphone_Header_Agent_Performance":{"parameters":{"destination":"0FKB00000009TxYOAU","destinationType":"dashboard","fontSize":16,"includeState":false,"text":"Agent Performance","textAlignment":"left","textColor":"#091A3E"},"type":"link"},"text_Account_Profile":{"parameters":{"content":{"displayTemplate":"Account Profile"},"fontSize":16,"showActionMenu":true,"textAlignment":"center","textColor":"#FFFFFF"},"type":"text"},"container_29":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_28":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_27":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_26":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_25":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_Header_Account_Review":{"parameters":{"destination":"0FKB00000009TxVOAU","destinationType":"dashboard","fontSize":16,"includeState":false,"text":"Account Review","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"container_24":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_Agent_Performance":{"parameters":{"content":{"displayTemplate":"Agent Performance"},"fontSize":16,"showActionMenu":true,"textAlignment":"center","textColor":"rgb(255, 255, 255)"},"type":"text"},"link_Header_Backlog":{"parameters":{"destination":"0FKB00000009TxUOAU","destinationType":"dashboard","fontSize":16,"includeState":false,"text":"Backlog","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"number_avg_FCR_Percent":{"parameters":{"compact":false,"exploreLink":false,"fontSize":40,"measureField":"avg_Percent","numberColor":"#091A3E","numberSize":32,"showActionMenu":true,"step":"avg_CaseResolution_Percent","textAlignment":"center","textColor":"rgb(32, 44, 88)","title":"Case Resolution","titleColor":"#091A3E","titleSize":14},"type":"number"},"text_dummy":{"parameters":{"content":{"displayTemplate":"dummy"},"fontSize":20,"showActionMenu":true,"textAlignment":"center","textColor":"#091A3E"},"type":"text"},"number_avg_CSAT":{"parameters":{"compact":false,"exploreLink":true,"fontSize":40,"measureField":"unique_AccountId","numberColor":"#091A3E","numberSize":32,"showActionMenu":true,"step":"Accounts_with_OpenCases","textAlignment":"center","textColor":"rgb(32, 44, 88)","title":"Accounts with Open Cases","titleColor":"#091A3E","titleSize":14},"type":"number"},"container_34":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_33":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_32":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_31":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_30":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"number_avg_Duration":{"parameters":{"compact":true,"exploreLink":true,"fontSize":40,"measureField":"avg_DurationCalculatedField","numberColor":"#091A3E","numberSize":32,"showActionMenu":true,"step":"avg_Duration","textAlignment":"center","textColor":"rgb(32, 44, 88)","title":"Average Time to Close","titleColor":"#091A3E","titleSize":14},"type":"number"},"chart_avg_duration_over_time":{"parameters":{"showPoints":false,"legend":{"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","visualizationType":"time","missingValue":"connect","exploreLink":false,"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"sqrtScale":false,"showTitle":false,"referenceLines":[{"color":"#634F95","label":{"data":"Avg","type":"static"},"value":{"data":"{{coalesce(cell(avg_Duration.result, 0, \"avg_DurationCalculatedField\"),0).asObject()}}","type":"static"}}],"showAxis":true,"title":""},"step":"avg_duration_over_time","theme":"light"},"type":"chart"}}}