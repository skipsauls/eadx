<aura:component isTemplate="true" extends="aura:template">
    <aura:set attribute="title" value="Oenolytics"/>
    <aura:set attribute="loadingText" value=""/>
    <aura:set attribute="extraMetaTags">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=2.0, minimum-scale=1.0, user-scalable=no, viewport-fit=cover"/>
    </aura:set>
    
    
    <aura:set attribute="auraInlineStyle">
        html, body {
            background: #5d0831;
        	height: 4000px;
        }
        
        .myloading {
            overflow-x: hidden;
            position: relative;
            overflow: hidden;
            background: #5d0831;
        	margin: 0;
        	padding: 0;
        }
        
        .auraMsgBox {
	        margin: 0 auto;
            background-color: inherit;
            z-index: 1002;
            border-radius: 0;
            box-shadow: none;
            overflow: hidden;
        }
        
        .auraLoadingBox {
        	width: 100%;
        	text-align: center;
    		height: 4000px;
        }
        
        .auraLoadingBox .logo {
        	background-color: #5d0831;
        /*
            background-image: URL(https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/A_glass_of_red_wine.jpg/1024px-A_glass_of_red_wine.jpg);
        */
            width: 100%;
            height: 4000px;
            background-repeat: no-repeat;
            background-position: center;
        }
        
        .main {
            overflow-x: hidden;
            position: relative;
            overflow: hidden;
            background-color: transparent;
        	margin: 0;
        	padding: 0;
        }
        
        .assetContainer.waveAsset {
        	margin: 0px auto;
     	}


		button {
			background: red;
		}        
    </aura:set>
    
    <aura:set attribute="prefetchTags">
    	<script>
        	console.warn('prefetchTags');
        </script>
    </aura:set>
    <aura:set attribute="afterBody">
        <script>
        	console.warn('afterBody');
            
			function notifyReady() {
			    try {
			        webkit.messageHandlers.notify.postMessage(
			        	{ 
			        		msg: 'READY'
			        	});
			    } catch(err) {
            		console.error('notifyReady error: ', err);
			    }
			}
            
            //notifyReady();

            function updateSteps(params) {
            	console.warn('updateSteps: ', params);
            	let p = JSON.parse(params);
            	console.warn('p: ', p);
            	console.warn('p json: ', JSON.stringify(p));
            	let evt = $A.get("e.eadx:updateSteps");
            	evt.setParams(p);
        		evt.fire();
            }
            
            function setUPCCode(params) {
            	console.warn('setUPCCode: ', params);
            	let p = JSON.parse(params);
            	console.warn('p: ', p);
            	console.warn('p json: ', JSON.stringify(p));
            	let evt = $A.get("e.eadx:updateUPCCode");
            	evt.setParams(p);
        		evt.fire();            	
            }
            
            function selectTab(params) {
            	console.warn('selectTab: ', params);
            	let p = JSON.parse(params);
            	console.warn('p: ', p);
            	console.warn('p json: ', JSON.stringify(p));
            	let evt = $A.get("e.eadx:selectTab");
            	evt.setParams(p);
        		evt.fire();            	
            }
            
            function waveUpdate(params) {
            	console.warn('waveUpdate: ', params);
            	let p = JSON.parse(params);
            	console.warn('p: ', p);
            	console.warn('p json: ', JSON.stringify(p));
            	p.value = JSON.stringify(p.value);
            	let evt = $A.get("e.wave:update");
            	evt.setParams(p);
        		evt.fire();
            }

			function geocodeAddress() {
			    try {
			        webkit.messageHandlers.geocodeAddress.postMessage(
			        	{ 
			        		street: document.getElementById("street").value,
			        		city: document.getElementById("city").value,
			        		state: document.getElementById("state").value,
			        		country: document.getElementById("country").value
			        	});
            		//document.querySelector('h1').style.color = "green";
			    } catch(err) {
            		//document.querySelector('h1').style.color = "red";
			    }
			}

			function changeBackgroundColor(colorText) {
                console.warn('changeBackgroundColor: ', colorText);
	            //document.body.style.background = colorText;
			}

			function setLatLon(lat, lon) {
                console.warn('setLatLon: ', lat, lon);
            	//document.getElementById("latitude").value = lat;
            	//document.getElementById("longitude").value = lon;
			}
                    
        </script>
    </aura:set>
    <aura:set attribute="bodyClass" value="main"/>
    <aura:set attribute="defaultBodyClass" value="loading"/>
</aura:component>